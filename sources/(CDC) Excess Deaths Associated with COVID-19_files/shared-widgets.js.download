(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("react-dom"));
	else if(typeof define === 'function' && define.amd)
		define("SharedWidgets", ["react", "react-dom"], factory);
	else if(typeof exports === 'object')
		exports["SharedWidgets"] = factory(require("react"), require("react-dom"));
	else
		root["SharedWidgets"] = factory(root["React"], root["ReactDOM"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE_react__, __WEBPACK_EXTERNAL_MODULE_react_dom__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./lib/src/SharedWidgets.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./lib/gen-src/Localize.js":
/*!*********************************!*\
  !*** ./lib/gen-src/Localize.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * This file is auto-generated. Do not modify directly.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/* istanbul ignore next */
function getLocalize() {
    if (typeof Localize === 'undefined') {
        throw Error('The messages.<locale>.js file has not been loaded');
    }
    return Localize;
}
;
/* istanbul ignore next */
function getLocalizeFormat() {
    var localize = getLocalize();
    if (localize.format === undefined) {
        throw Error('The formatters-and-parsers.<locale>.js file has not been loaded');
    }
    return localize.format;
}
/* istanbul ignore next */
exports.LocaleData = { get: function () { return getLocalizeFormat().localeData; } };
var t = function (k, a) { return getLocalize().msg.formatMessage(k, a); };
exports.Messages = {
    close: function () { return t('@tableau__widgets/close'); },
    closeDialog: function () { return t('@tableau__widgets/closeDialog'); },
    customColor: function () { return t('@tableau__widgets/customColor'); },
    decrement: function () { return t('@tableau__widgets/decrement'); },
    enterValidDate: function () { return t('@tableau__widgets/enterValidDate'); },
    errorIconLabel: function () { return t('@tableau__widgets/errorIconLabel'); },
    errorToastPrefix: function () { return t('@tableau__widgets/errorToastPrefix'); },
    increment: function () { return t('@tableau__widgets/increment'); },
    infoIconLabel: function () { return t('@tableau__widgets/infoIconLabel'); },
    infoToastPrefix: function () { return t('@tableau__widgets/infoToastPrefix'); },
    nextMonth: function () { return t('@tableau__widgets/nextMonth'); },
    noMatches: function () { return t('@tableau__widgets/noMatches'); },
    optional: function () { return t('@tableau__widgets/optional'); },
    previousMonth: function () { return t('@tableau__widgets/previousMonth'); },
    remove: function () { return t('@tableau__widgets/remove'); },
    required: function () { return t('@tableau__widgets/required'); },
    successIconLabel: function () { return t('@tableau__widgets/successIconLabel'); },
    successToastPrefix: function () { return t('@tableau__widgets/successToastPrefix'); },
    waitIndicatorLabel: function () { return t('@tableau__widgets/waitIndicatorLabel'); },
    warningIconLabel: function () { return t('@tableau__widgets/warningIconLabel'); },
    warningToastPrefix: function () { return t('@tableau__widgets/warningToastPrefix'); },
    weekNumber: function (a) { return t('@tableau__widgets/weekNumber', a); },
};
exports.Formatters = {
    formatFullMonthAndFullYear: function (a) { return getLocalizeFormat().formatDate(a, { "skeleton": "yyyyMMMM" }); },
    formatNarrowDayOfWeek: function (a) { return getLocalizeFormat().formatDate(a, { "skeleton": "EEEEE" }); },
    formatShortDate: function (a) { return getLocalizeFormat().formatDate(a, { "date": "short" }); },
    formatMediumDate: function (a) { return getLocalizeFormat().formatDate(a, { "date": "medium" }); },
    formatLongDate: function (a) { return getLocalizeFormat().formatDate(a, { "date": "long" }); },
    formatFullDate: function (a) { return getLocalizeFormat().formatDate(a, { "date": "full" }); },
    formatShortDateTime: function (a) { return getLocalizeFormat().formatDate(a, { "datetime": "short" }); },
    formatMediumDateTime: function (a) { return getLocalizeFormat().formatDate(a, { "datetime": "medium" }); },
    formatLongDateTime: function (a) { return getLocalizeFormat().formatDate(a, { "datetime": "long" }); },
    formatFullDateTime: function (a) { return getLocalizeFormat().formatDate(a, { "datetime": "full" }); },
    formatShortDateWithFullYear: function (a) { return getLocalizeFormat().formatDate(a, { "skeleton": "yyyyMd" }); },
    formatShortDateTimeWithFullYear: function (a) { return getLocalizeFormat().formatDate(a, { "skeleton": "yyyyMdhm" }); },
    formatShortDateTimeWithFullYear24Hour: function (a) { return getLocalizeFormat().formatDate(a, { "skeleton": "yyyyMdHm" }); },
    formatShortDateMediumTimeWithFullYear: function (a) { return getLocalizeFormat().formatDate(a, { "skeleton": "yyyyMdhms" }); },
    formatShortDateMediumTimeWithFullYear24Hour: function (a) { return getLocalizeFormat().formatDate(a, { "skeleton": "yyyyMdHms" }); },
};
exports.Parsers = {
    parseShortDate: function (a) { return getLocalizeFormat().parseDate(a, { "date": "short" }); },
    parseMediumDate: function (a) { return getLocalizeFormat().parseDate(a, { "date": "medium" }); },
    parseLongDate: function (a) { return getLocalizeFormat().parseDate(a, { "date": "long" }); },
    parseFullDate: function (a) { return getLocalizeFormat().parseDate(a, { "date": "full" }); },
    parseShortDateTime: function (a) { return getLocalizeFormat().parseDate(a, { "datetime": "short" }); },
    parseMediumDateTime: function (a) { return getLocalizeFormat().parseDate(a, { "datetime": "medium" }); },
    parseLongDateTime: function (a) { return getLocalizeFormat().parseDate(a, { "datetime": "long" }); },
    parseFullDateTime: function (a) { return getLocalizeFormat().parseDate(a, { "datetime": "full" }); },
    parseShortDateWithFullYear: function (a) { return getLocalizeFormat().parseDate(a, { "skeleton": "yyyyMd" }); },
    parseShortDateTimeWithFullYear: function (a) { return getLocalizeFormat().parseDate(a, { "skeleton": "yyyyMdhm" }); },
    parseShortDateTimeWithFullYear24Hour: function (a) { return getLocalizeFormat().parseDate(a, { "skeleton": "yyyyMdHm" }); },
    parseShortDateMediumTimeWithFullYear: function (a) { return getLocalizeFormat().parseDate(a, { "skeleton": "yyyyMdhms" }); },
    parseShortDateMediumTimeWithFullYear24Hour: function (a) { return getLocalizeFormat().parseDate(a, { "skeleton": "yyyyMdHms" }); },
};


/***/ }),

/***/ "./lib/gen-src/VersionInfo.js":
/*!************************************!*\
  !*** ./lib/gen-src/VersionInfo.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// This file is generated by @tableau/module-dev-scripts/src/scripts/compile.ts
// Use this only for good or for awesome.
exports.packageVersion = '9.10.2';


/***/ }),

/***/ "./lib/src/SharedWidgets.js":
/*!**********************************!*\
  !*** ./lib/src/SharedWidgets.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// tslint:disable:max-line-length
var SharedWidgets_1 = __webpack_require__(/*! ./config/SharedWidgets */ "./lib/src/config/SharedWidgets.js");
exports.setConfig = SharedWidgets_1.setConfig;
var TabStyles_1 = __webpack_require__(/*! ./styles/TabStyles */ "./lib/src/styles/TabStyles.js");
exports.TabStyles = TabStyles_1.TabStyles;
var Declarative_1 = __webpack_require__(/*! ./utils/Declarative */ "./lib/src/utils/Declarative.js");
exports.conditional = Declarative_1.conditional;
exports.testId = Declarative_1.makeTestId;
exports.isAlphabeticChar = Declarative_1.isAlphabeticChar;
var DomUtil_1 = __webpack_require__(/*! ./utils/DomUtil */ "./lib/src/utils/DomUtil.js");
exports.detectScrollbarWidth = DomUtil_1.detectScrollbarWidth;
exports.timeoutFocus = DomUtil_1.timeoutFocus;
var InteractiveDom_1 = __webpack_require__(/*! ./utils/InteractiveDom */ "./lib/src/utils/InteractiveDom.js");
exports.InteractiveDomHoC = InteractiveDom_1.InteractiveDomHoC;
exports.InteractiveDomHoCDecorator = InteractiveDom_1.InteractiveDomHoCDecorator;
exports.InteractiveDomWrapper = InteractiveDom_1.InteractiveDomWrapper;
var Overlay_1 = __webpack_require__(/*! ./utils/Overlay */ "./lib/src/utils/Overlay.js");
exports.ScrollingRootContext = Overlay_1.ScrollingRootContext;
exports.VerticalOriginOption = Overlay_1.VerticalOriginOption;
exports.HorizontalOriginOption = Overlay_1.HorizontalOriginOption;
exports.Overlay = Overlay_1.Overlay;
var PointerEventAdapter_1 = __webpack_require__(/*! ./utils/PointerEventAdapter */ "./lib/src/utils/PointerEventAdapter.js");
exports.PointerEventAdapterManager = PointerEventAdapter_1.PointerEventAdapterManager;
var PointerEvents_1 = __webpack_require__(/*! ./utils/PointerEvents */ "./lib/src/utils/PointerEvents.js");
exports.PointerEventWrapper = PointerEvents_1.PointerEventWrapper;
var ReactHelpers_1 = __webpack_require__(/*! ./utils/ReactHelpers */ "./lib/src/utils/ReactHelpers.js");
exports.mergeEventHandlers = ReactHelpers_1.mergeEventHandlers;
exports.convertToStatefulComponentClass = ReactHelpers_1.convertToStatefulComponentClass;
exports.getComponentName = ReactHelpers_1.getComponentName;
var StackingComponent_1 = __webpack_require__(/*! ./utils/StackingComponent */ "./lib/src/utils/StackingComponent.js");
exports.StackingComponentHOC = StackingComponent_1.StackingComponentHOC;
exports.StackingComponentWrapper = StackingComponent_1.StackingComponentWrapper;
exports.StackingRootContext = StackingComponent_1.StackingRootContext;
var StackingComponentHost_1 = __webpack_require__(/*! ./utils/StackingComponentHost */ "./lib/src/utils/StackingComponentHost.js");
exports.HostedStackedElementContainer = StackingComponentHost_1.HostedStackedElementContainer;
var Unicode_1 = __webpack_require__(/*! ./utils/Unicode */ "./lib/src/utils/Unicode.js");
exports.Unicode = Unicode_1.Unicode;
var UserInteraction_1 = __webpack_require__(/*! ./utils/UserInteraction */ "./lib/src/utils/UserInteraction.js");
exports.isMouseEvent = UserInteraction_1.isMouseEvent;
exports.isTouchEvent = UserInteraction_1.isTouchEvent;
exports.getClientPosition = UserInteraction_1.getClientPosition;
var Date_1 = __webpack_require__(/*! ./utils/Date */ "./lib/src/utils/Date.js");
exports.DateTerminus = Date_1.DateTerminus;
var ButtonWidgetShim_1 = __webpack_require__(/*! ./widgets/Button/ButtonWidgetShim */ "./lib/src/widgets/Button/ButtonWidgetShim.js");
exports.ButtonType = ButtonWidgetShim_1.ButtonType;
exports.ButtonWidget = ButtonWidgetShim_1.ButtonWidget;
var AutoResetButtonWidget_1 = __webpack_require__(/*! ./widgets/Button/AutoResetButtonWidget */ "./lib/src/widgets/Button/AutoResetButtonWidget.js");
exports.AutoResetButton = AutoResetButtonWidget_1.AutoResetButton;
var SelectableButtonGroupWidget_1 = __webpack_require__(/*! ./widgets/SelectableButtonGroupWidget */ "./lib/src/widgets/SelectableButtonGroupWidget.js");
exports.SelectableButtonGroupSelectionBehavior = SelectableButtonGroupWidget_1.SelectableButtonGroupSelectionBehavior;
exports.SelectableButtonGroupWidget = SelectableButtonGroupWidget_1.SelectableButtonGroupWidget;
var ChromeTooltipWidget_1 = __webpack_require__(/*! ./widgets/ChromeTooltip/ChromeTooltipWidget */ "./lib/src/widgets/ChromeTooltip/ChromeTooltipWidget.js");
exports.ChromeTooltipWidget = ChromeTooltipWidget_1.ChromeTooltipWidget;
var SelectorShims_1 = __webpack_require__(/*! ./widgets/Selectors/SelectorShims */ "./lib/src/widgets/Selectors/SelectorShims.js");
exports.CheckBoxWidget = SelectorShims_1.CheckBoxWidget;
exports.RadioButtonWithLabelWidget = SelectorShims_1.RadioButtonWithLabelWidget;
var CheckBoxWithLabelGroupWidget_1 = __webpack_require__(/*! ./widgets/Selectors/CheckBoxWithLabelGroupWidget */ "./lib/src/widgets/Selectors/CheckBoxWithLabelGroupWidget.js");
exports.CheckBoxWithLabelGroupWidget = CheckBoxWithLabelGroupWidget_1.CheckBoxWithLabelGroupWidget;
var SelectorShims_2 = __webpack_require__(/*! ./widgets/Selectors/SelectorShims */ "./lib/src/widgets/Selectors/SelectorShims.js");
exports.CheckBoxWithLabelWidget = SelectorShims_2.CheckBoxWithLabelWidget;
var DialogWidget_1 = __webpack_require__(/*! ./widgets/Dialog/DialogWidget */ "./lib/src/widgets/Dialog/DialogWidget.js");
exports.DialogPositioningBehavior = DialogWidget_1.DialogPositioningBehavior;
exports.DialogType = DialogWidget_1.DialogType;
exports.DialogUserResizeMode = DialogWidget_1.DialogUserResizeMode;
exports.DialogWidget = DialogWidget_1.DialogWidget;
var DialogFooterButtonsWidget_1 = __webpack_require__(/*! ./widgets/Dialog/DialogFooterButtonsWidget */ "./lib/src/widgets/Dialog/DialogFooterButtonsWidget.js");
exports.DialogFooterButtonsWidget = DialogFooterButtonsWidget_1.DialogFooterButtonsWidget;
var DiscreteProgressBarWidget_1 = __webpack_require__(/*! ./widgets/DiscreteProgressBarWidget */ "./lib/src/widgets/DiscreteProgressBarWidget.js");
exports.DiscreteProgressBarWidget_UNFINISHED = DiscreteProgressBarWidget_1.DiscreteProgressBarWidget_UNFINISHED;
var DomWidgets_1 = __webpack_require__(/*! ./widgets/DomWidgets */ "./lib/src/widgets/DomWidgets.js");
exports.Block = DomWidgets_1.Block;
exports.InlineBlock = DomWidgets_1.InlineBlock;
exports.Img = DomWidgets_1.Img;
var DropdownTextWidget_1 = __webpack_require__(/*! ./widgets/DropdownTextWidget */ "./lib/src/widgets/DropdownTextWidget.js");
exports.DropdownWidget = DropdownTextWidget_1.DropdownWidget;
var DropdownWidget_1 = __webpack_require__(/*! ./widgets/DropdownWidget */ "./lib/src/widgets/DropdownWidget.js");
exports.DropdownType = DropdownWidget_1.DropdownType;
exports.GenericDropdownWidget = DropdownWidget_1.GenericDropdownWidget;
var DynamicThemeComponent_1 = __webpack_require__(/*! ./widgets/DynamicThemeComponent */ "./lib/src/widgets/DynamicThemeComponent.js");
exports.DynamicThemeComponent = DynamicThemeComponent_1.DynamicThemeComponent;
var ExpandoWidget_1 = __webpack_require__(/*! ./widgets/ExpandoWidget */ "./lib/src/widgets/ExpandoWidget.js");
exports.ExpandoDirection = ExpandoWidget_1.ExpandoDirection;
exports.ExpandoWidget = ExpandoWidget_1.ExpandoWidget;
var FlyoutListMenuTextWidget_1 = __webpack_require__(/*! ./widgets/FlyoutListMenuTextWidget */ "./lib/src/widgets/FlyoutListMenuTextWidget.js");
exports.FlyoutListMenuWidget = FlyoutListMenuTextWidget_1.FlyoutListMenuWidget;
var FlyoutListMenuWidget_1 = __webpack_require__(/*! ./widgets/FlyoutListMenuWidget */ "./lib/src/widgets/FlyoutListMenuWidget.js");
exports.GenericFlyoutListMenuWidget = FlyoutListMenuWidget_1.GenericFlyoutListMenuWidget;
var InputLabelWidget_1 = __webpack_require__(/*! ./widgets/InputLabelWidget */ "./lib/src/widgets/InputLabelWidget.js");
exports.InputLabelWidget = InputLabelWidget_1.InputLabelWidget;
var TextFieldWidgetShims_1 = __webpack_require__(/*! ./widgets/TextField/TextFieldWidgetShims */ "./lib/src/widgets/TextField/TextFieldWidgetShims.js");
exports.IntegerStepperWidget = TextFieldWidgetShims_1.IntegerStepperWidget;
var TextFieldWidgetShims_2 = __webpack_require__(/*! ./widgets/TextField/TextFieldWidgetShims */ "./lib/src/widgets/TextField/TextFieldWidgetShims.js");
exports.LineTextFieldWidget = TextFieldWidgetShims_2.LineTextFieldWidget;
var TextFormatterWidget_1 = __webpack_require__(/*! ./widgets/ListMenuDisplayFormatters/TextFormatterWidget */ "./lib/src/widgets/ListMenuDisplayFormatters/TextFormatterWidget.js");
exports.TextMenuDisplayFormatter = TextFormatterWidget_1.TextMenuDisplayFormatter;
var TextFieldWidgetShims_3 = __webpack_require__(/*! ./widgets/TextField/TextFieldWidgetShims */ "./lib/src/widgets/TextField/TextFieldWidgetShims.js");
exports.OutlineTextFieldWidget = TextFieldWidgetShims_3.OutlineTextFieldWidget;
var RadioButtonWithLabelGroupWidget_1 = __webpack_require__(/*! ./widgets/Selectors/RadioButtonWithLabelGroupWidget */ "./lib/src/widgets/Selectors/RadioButtonWithLabelGroupWidget.js");
exports.RadioLayoutType = RadioButtonWithLabelGroupWidget_1.RadioLayoutType;
exports.RadioButtonWithLabelGroupWidget = RadioButtonWithLabelGroupWidget_1.RadioButtonWithLabelGroupWidget;
var TextFieldWidgetShims_4 = __webpack_require__(/*! ./widgets/TextField/TextFieldWidgetShims */ "./lib/src/widgets/TextField/TextFieldWidgetShims.js");
exports.SearchFieldWidget = TextFieldWidgetShims_4.SearchFieldWidget;
var TextFieldBase_1 = __webpack_require__(/*! ./widgets/TextField/TextFieldBase */ "./lib/src/widgets/TextField/TextFieldBase.js");
exports.TextInputType = TextFieldBase_1.TextInputType;
var ToggleTextWidget_1 = __webpack_require__(/*! ./widgets/ToggleTextWidget */ "./lib/src/widgets/ToggleTextWidget.js");
exports.ToggleTextWidget = ToggleTextWidget_1.ToggleTextWidget;
exports.SelectedToggle = ToggleTextWidget_1.SelectedToggle;
var Tooltip_1 = __webpack_require__(/*! ./widgets/Tooltip/Tooltip */ "./lib/src/widgets/Tooltip/Tooltip.js");
exports.TooltipPosition = Tooltip_1.TooltipPosition;
exports.Tooltip = Tooltip_1.Tooltip;
var ColorGridWidget_1 = __webpack_require__(/*! ./widgets/ColorPicker/ColorGridWidget */ "./lib/src/widgets/ColorPicker/ColorGridWidget.js");
exports.ColorGridWidget = ColorGridWidget_1.ColorGridWidget;
exports.ColorGridPreset = ColorGridWidget_1.ColorGridPreset;
exports.ColorGridType = ColorGridWidget_1.ColorGridType;
var ColorPickerWidget_1 = __webpack_require__(/*! ./widgets/ColorPicker/ColorPickerWidget */ "./lib/src/widgets/ColorPicker/ColorPickerWidget.js");
exports.ColorPickerWidget = ColorPickerWidget_1.ColorPickerWidget;
var ActivitySpinnerWidget_1 = __webpack_require__(/*! ./widgets/ActivitySpinnerWidget */ "./lib/src/widgets/ActivitySpinnerWidget.js");
exports.ActivitySpinnerSize = ActivitySpinnerWidget_1.ActivitySpinnerSize;
exports.ActivitySpinnerWidget = ActivitySpinnerWidget_1.ActivitySpinnerWidget;
var SliderWidget_1 = __webpack_require__(/*! ./widgets/Slider/SliderWidget */ "./lib/src/widgets/Slider/SliderWidget.js");
exports.OpenEndedAt = SliderWidget_1.OpenEndedAt;
exports.SliderWidget = SliderWidget_1.SliderWidget;
var RangeSliderWidget_1 = __webpack_require__(/*! ./widgets/Slider/RangeSliderWidget */ "./lib/src/widgets/Slider/RangeSliderWidget.js");
exports.RangeSliderWidget = RangeSliderWidget_1.RangeSliderWidget;
var TabsWidget_1 = __webpack_require__(/*! ./widgets/Tabs/TabsWidget */ "./lib/src/widgets/Tabs/TabsWidget.js");
exports.TabActivationMode = TabsWidget_1.TabActivationMode;
exports.TabListAlignment = TabsWidget_1.TabListAlignment;
exports.TabsWidget = TabsWidget_1.TabsWidget;
var ToastWidget_1 = __webpack_require__(/*! ./widgets/ToastWidget */ "./lib/src/widgets/ToastWidget.js");
exports.ToastType = ToastWidget_1.ToastType;
exports.ToastWidget = ToastWidget_1.ToastWidget;
var InteractiveLinkWidget_1 = __webpack_require__(/*! ./widgets/InteractiveLinkWidget */ "./lib/src/widgets/InteractiveLinkWidget.js");
exports.InteractiveLinkWidget = InteractiveLinkWidget_1.InteractiveLinkWidget;
var DateInputField_1 = __webpack_require__(/*! ./widgets/DateInputField */ "./lib/src/widgets/DateInputField.js");
exports.DateInputFieldType = DateInputField_1.DateInputFieldType;
exports.DateInputField = DateInputField_1.DateInputField;
var DropdownButton_1 = __webpack_require__(/*! ./widgets/Dropdown/DropdownButton */ "./lib/src/widgets/Dropdown/DropdownButton.js");
exports.DropdownButton = DropdownButton_1.DropdownButton;
exports.DropdownButtonType = DropdownButton_1.DropdownButtonType;
var SingleSelectDropdown_1 = __webpack_require__(/*! ./widgets/Dropdown/SingleSelectDropdown */ "./lib/src/widgets/Dropdown/SingleSelectDropdown.js");
exports.SingleSelectDropdown = SingleSelectDropdown_1.SingleSelectDropdown;
var List_1 = __webpack_require__(/*! ./widgets/List/List */ "./lib/src/widgets/List/List.js");
exports.List = List_1.List;
var FilteringList_1 = __webpack_require__(/*! ./widgets/List/FilteringList */ "./lib/src/widgets/List/FilteringList.js");
exports.FilteringList = FilteringList_1.FilteringList;
var LocallyFilteringList_1 = __webpack_require__(/*! ./widgets/List/LocallyFilteringList */ "./lib/src/widgets/List/LocallyFilteringList.js");
exports.LocallyFilteringList = LocallyFilteringList_1.LocallyFilteringList;
var ListItemUtils_1 = __webpack_require__(/*! ./widgets/List/ListItemUtils */ "./lib/src/widgets/List/ListItemUtils.js");
exports.findFocusableItemIndex = ListItemUtils_1.findFocusableItemIndex;
exports.findSelectableItemIndex = ListItemUtils_1.findSelectableItemIndex;
exports.findIndexOfItemWithValue = ListItemUtils_1.findIndexOfItemWithValue;
exports.isFocusableItem = ListItemUtils_1.isFocusableItem;
exports.isSelectableItem = ListItemUtils_1.isSelectableItem;
var FocusTrap_1 = __webpack_require__(/*! ./utils/FocusTrap */ "./lib/src/utils/FocusTrap.js");
exports.FocusTrap = FocusTrap_1.FocusTrap;
var Chip_1 = __webpack_require__(/*! ./widgets/Chips/Chip */ "./lib/src/widgets/Chips/Chip.js");
exports.Chip = Chip_1.Chip;
var FeedbackChips_1 = __webpack_require__(/*! ./widgets/Chips/FeedbackChips */ "./lib/src/widgets/Chips/FeedbackChips.js");
exports.ErrorChip = FeedbackChips_1.ErrorChip;
var ChipPicker_1 = __webpack_require__(/*! ./widgets/ChipPicker/ChipPicker */ "./lib/src/widgets/ChipPicker/ChipPicker.js");
exports.ChipPicker = ChipPicker_1.ChipPicker;
var TextAreaWidget_1 = __webpack_require__(/*! ./widgets/TextAreaWidget */ "./lib/src/widgets/TextAreaWidget.js");
exports.TextAreaWidget = TextAreaWidget_1.TextAreaWidget;
var TextLinkWidget_1 = __webpack_require__(/*! ./widgets/TextLinkWidget */ "./lib/src/widgets/TextLinkWidget.js");
exports.TextLinkWidget = TextLinkWidget_1.TextLinkWidget;
exports.TextLinkKind = TextLinkWidget_1.TextLinkKind;
var TextFieldWidget_1 = __webpack_require__(/*! ./widgets/TextField/TextFieldWidget */ "./lib/src/widgets/TextField/TextFieldWidget.js");
exports.TextFieldWidget = TextFieldWidget_1.TextFieldWidget;
var MenuButtonWidget_1 = __webpack_require__(/*! ./widgets/Button/MenuButtonWidget */ "./lib/src/widgets/Button/MenuButtonWidget.js");
exports.MenuButtonWidget = MenuButtonWidget_1.MenuButtonWidget;
var SplitButtonWidget_1 = __webpack_require__(/*! ./widgets/Button/SplitButtonWidget */ "./lib/src/widgets/Button/SplitButtonWidget.js");
exports.SplitButtonWidget = SplitButtonWidget_1.SplitButtonWidget;
var HierarchicalDropdownWidget_1 = __webpack_require__(/*! ./widgets/Dropdown/HierarchicalDropdownWidget */ "./lib/src/widgets/Dropdown/HierarchicalDropdownWidget.js");
exports.HierarchicalDropdownWidget = HierarchicalDropdownWidget_1.HierarchicalDropdownWidget;
var CloseButtonWidget_1 = __webpack_require__(/*! ./widgets/Button/CloseButtonWidget */ "./lib/src/widgets/Button/CloseButtonWidget.js");
exports.CloseButtonWidget = CloseButtonWidget_1.CloseButtonWidget;
var InlineAlertBase_1 = __webpack_require__(/*! ./widgets/InlineAlert/InlineAlertBase */ "./lib/src/widgets/InlineAlert/InlineAlertBase.js");
exports.InlineAlertType = InlineAlertBase_1.InlineAlertType;
var InlineAlertWidget_1 = __webpack_require__(/*! ./widgets/InlineAlert/InlineAlertWidget */ "./lib/src/widgets/InlineAlert/InlineAlertWidget.js");
exports.InlineAlertWidget = InlineAlertWidget_1.InlineAlertWidget;
var CompactInlineAlertWidget_1 = __webpack_require__(/*! ./widgets/InlineAlert/CompactInlineAlertWidget */ "./lib/src/widgets/InlineAlert/CompactInlineAlertWidget.js");
exports.CompactInlineAlertWidget = CompactInlineAlertWidget_1.CompactInlineAlertWidget;
var InlineAlertAnimator_1 = __webpack_require__(/*! ./widgets/InlineAlert/InlineAlertAnimator */ "./lib/src/widgets/InlineAlert/InlineAlertAnimator.js");
exports.InlineAlertAnimator = InlineAlertAnimator_1.InlineAlertAnimator;
var DropdownOverlay_1 = __webpack_require__(/*! ./widgets/Dropdown/DropdownOverlay */ "./lib/src/widgets/Dropdown/DropdownOverlay.js");
exports.DropdownPositionedAboveContext = DropdownOverlay_1.DropdownPositionedAboveContext;
var tableau_ui_1 = __webpack_require__(/*! @tableau/tableau-ui */ "./node_modules/@tableau/tableau-ui/dist/tableau-ui.min.js");
var typestyle_1 = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
function forceRenderStyles() {
    tableau_ui_1.forceRenderStyles();
    typestyle_1.forceRenderStyles();
}
exports.forceRenderStyles = forceRenderStyles;
var VersionInfo_1 = __webpack_require__(/*! ../gen-src/VersionInfo */ "./lib/gen-src/VersionInfo.js");
// tslint:disable-next-line:no-console
console.info("Tableau Shared Widgets v" + VersionInfo_1.packageVersion);


/***/ }),

/***/ "./lib/src/config/ClickBusting.js":
/*!****************************************!*\
  !*** ./lib/src/config/ClickBusting.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * TFS584601:Remove once vizclient infrastructure or TCOE fixes ClickBuster
 * ClickBuster in vizclient at the moment eats click events that come from touches.  However react is expecting a click event
 * for things like onChange.  Vizclient infrastructure or TCOE will have a story to resolve this, but in the meantime
 * we need to have an attribute flag so that ClickBuster ignores our components.  Once the resolve
 * story is done we will need to rip out the flag.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var ClickBustingConfig = /** @class */ (function () {
    function ClickBustingConfig() {
    }
    ClickBustingConfig.suppressionClassName = undefined;
    return ClickBustingConfig;
}());
exports.ClickBustingConfig = ClickBustingConfig;


/***/ }),

/***/ "./lib/src/config/SharedWidgets.js":
/*!*****************************************!*\
  !*** ./lib/src/config/SharedWidgets.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// tslint:disable:deprecation
var TabStyles_1 = __webpack_require__(/*! ../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var ClickBusting_1 = __webpack_require__(/*! ./ClickBusting */ "./lib/src/config/ClickBusting.js");
var setTabStyles = function (config) {
    if (!config.styles) {
        return;
    }
    TabStyles_1.overrideTabStyles(config.styles);
};
var setClickBusting = function (config) {
    if (!config.suppressClickBustingClassName) {
        return;
    }
    ClickBusting_1.ClickBustingConfig.suppressionClassName = config.suppressClickBustingClassName;
};
var setConfig = function (config) {
    setTabStyles(config);
    setClickBusting(config);
};
exports.setConfig = setConfig;


/***/ }),

/***/ "./lib/src/icons/Icons.js":
/*!********************************!*\
  !*** ./lib/src/icons/Icons.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var TabStyles_1 = __webpack_require__(/*! ../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var DropdownArrow_1 = __webpack_require__(/*! ./resources/DropdownArrow */ "./lib/src/icons/resources/DropdownArrow.js");
var Expando_1 = __webpack_require__(/*! ./resources/Expando */ "./lib/src/icons/resources/Expando.js");
var IconDropdownArrow_1 = __webpack_require__(/*! ./resources/IconDropdownArrow */ "./lib/src/icons/resources/IconDropdownArrow.js");
var MenuItemArrow_1 = __webpack_require__(/*! ./resources/MenuItemArrow */ "./lib/src/icons/resources/MenuItemArrow.js");
var MenuItemCheck_1 = __webpack_require__(/*! ./resources/MenuItemCheck */ "./lib/src/icons/resources/MenuItemCheck.js");
var SliderHandle_1 = __webpack_require__(/*! ./resources/SliderHandle */ "./lib/src/icons/resources/SliderHandle.js");
var SliderLeftHandle_1 = __webpack_require__(/*! ./resources/SliderLeftHandle */ "./lib/src/icons/resources/SliderLeftHandle.js");
var SliderRightHandle_1 = __webpack_require__(/*! ./resources/SliderRightHandle */ "./lib/src/icons/resources/SliderRightHandle.js");
var StepperLeft_1 = __webpack_require__(/*! ./resources/StepperLeft */ "./lib/src/icons/resources/StepperLeft.js");
var StepperRight_1 = __webpack_require__(/*! ./resources/StepperRight */ "./lib/src/icons/resources/StepperRight.js");
/**
 * For now, here's how to update these:
 * 1) Get the appropriate SVG file from Visual Design.
 * 2) Paste it into https://jakearchibald.github.io/svgomg/ with the default options, copy the minified code out.
 * 3) Paste that into https://www.base64encode.org/ and click "Encode".
 * 4) Ensure the <svg> element has `class="$state$"` and a <style> block for defining interactivity.
 * 5) Save to the resources/ folder and follow the pattern you see in here for other icons.
 */
var svgDataUriRegExp = /^data\:image\/svg\+xml/;
function encodeSvg(svg) {
    return svgDataUriRegExp.test(svg) ? svg : "data:image/svg+xml," + encodeURIComponent(svg);
}
exports.encodeSvg = encodeSvg;
// Enable for TFS 799296 - "Add *.svg Resources Back and Update Code Playground"
// function decodeSvg(encodedSvg: string): string {
//   return svgDataUriRegExp.test(encodedSvg) ? atob(encodedSvg.substr(26)) : encodedSvg;
// }
function formatSvg(svgImport, state) {
    if (state === void 0) { state = {}; }
    // tslint:disable-next-line:no-any
    var classList = Object.keys(state).filter(function (key) { return !!state[key]; }).join(' ');
    // FIXME need a different webpack loader to get rid of this, TFSID 793075
    return encodeSvg(svgImport.replace('$state$', classList));
}
exports.DropdownArrowIcon = {
    height: 18,
    width: 18,
    icon: function (state) { return formatSvg(DropdownArrow_1.DropdownArrowSvg, state); },
};
exports.IconDropdownArrowIcon = {
    height: 5,
    width: 7,
    icon: function (state) { return formatSvg(IconDropdownArrow_1.IconDropdownArrowSvg, state); },
};
exports.MenuItemArrowIcon = {
    height: 18,
    width: 18,
    icon: function (state) { return formatSvg(MenuItemArrow_1.MenuItemArrowSvg, state); },
};
exports.MenuItemCheckIcon = {
    width: 10,
    height: 10,
    icon: function (state) { return formatSvg(MenuItemCheck_1.MenuItemCheckSvg, state); },
    checkedItemPaddingLeft: TabStyles_1.TabStyles.Spacing.DefaultSpace * 2 + 10,
};
exports.SliderHandleIcon = {
    height: 20,
    width: 20,
    icon: function (state) { return formatSvg(SliderHandle_1.SliderHandleSvg, state); },
};
exports.SliderLeftHandleIcon = {
    height: 20,
    width: 20,
    icon: function (state) { return formatSvg(SliderLeftHandle_1.SliderLeftHandleSvg, state); },
    artworkOffsetFromRightSide: 4,
};
exports.SliderRightHandleIcon = {
    height: 20,
    width: 20,
    icon: function (state) { return formatSvg(SliderRightHandle_1.SliderRightHandleSvg, state); },
    artworkOffsetFromLeftSide: 2,
};
exports.ExpandoIcon = {
    height: 13,
    width: 13,
    icon: function (state) { return formatSvg(Expando_1.ExpandoSvg, state); },
};
exports.StepperLeftIcon = {
    height: 22,
    width: 18,
    icon: function (state) { return formatSvg(StepperLeft_1.StepperLeftSvg, state); },
};
exports.StepperRightIcon = {
    height: 22,
    width: 18,
    icon: function (state) { return formatSvg(StepperRight_1.StepperRightSvg, state); },
};


/***/ }),

/***/ "./lib/src/icons/StatusIcons.js":
/*!**************************************!*\
  !*** ./lib/src/icons/StatusIcons.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var Localize_1 = __webpack_require__(/*! ../../gen-src/Localize */ "./lib/gen-src/Localize.js");
var Colors_1 = __webpack_require__(/*! ../styles/Colors */ "./lib/src/styles/Colors.js");
var Icons_1 = __webpack_require__(/*! ./Icons */ "./lib/src/icons/Icons.js");
exports.SuccessSvg = function (fill) {
    if (fill === void 0) { fill = Colors_1.IconFillColors.Valid; }
    return "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\">\n    <path fill=\"" + fill + "\" fill-rule=\"evenodd\" d=\"M12.0713218,-2.66453526e-14 L12.865698,0.435932596 L6.33039459,12.2578763 C6.2968669,12.3177578 6.25156942,12.3670935 6.19894324,12.4046227 L6.12638767,12.4471038 L6.10956871,12.4542337 C5.9448756,12.5309428 5.74233651,12.50338 5.60334716,12.3704999 L-8.8817842e-16,7.12660356 L0.630925776,6.4797854 L5.81515537,11.3228296 L12.0713218,-2.66453526e-14 Z\"/>\n  </svg>";
};
exports.InfoSvg = function (fill) {
    if (fill === void 0) { fill = Colors_1.IconFillColors.Info; }
    return "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\">\n    <path fill=\"" + fill + "\" fill-rule=\"evenodd\" d=\"M6.5,0 C10.1,0 13,2.9 13,6.5 C13,10.1 10.1,13 6.5,13 C2.9,13 0,10.1 0,6.5 C0,2.9 2.9,0 6.5,0 Z M6.5,1 C3.5,1 1,3.5 1,6.5 C1,9.5 3.5,12 6.5,12 C9.5,12 12,9.5 12,6.5 C12,3.5 9.5,1 6.5,1 Z M7,5 L7,10 L6,10 L6,5 L7,5 Z M7,3 L7,4 L6,4 L6,3 L7,3 Z\"/>\n  </svg>";
};
exports.WarningSvg = function (fill) {
    if (fill === void 0) { fill = Colors_1.IconFillColors.Warning; }
    return "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\">\n    <g fill=\"none\" fill-rule=\"evenodd\">\n      <path fill=\"" + fill + "\" d=\"M5.7630034,1.44919786 L0.0765242105,11.7165775 C-0.181952117,12.315508 0.248841762,13 0.851953191,13 L12.1387528,13 C12.828023,13 13.1726581,12.315508 12.9141818,11.7165775 L7.22770259,1.44919786 C6.96922626,0.85026738 6.10763851,0.85026738 5.7630034,1.44919786 Z\"/>\n      <path fill=\"#000\" d=\"M7,11 L7,12 L6,12 L6,11 L7,11 Z M7,4 L7,10 L6,10 L6,4 L7,4 Z\"/>\n    </g>\n  </svg>";
};
exports.ErrorSvg = function (fill) {
    if (fill === void 0) { fill = Colors_1.IconFillColors.Error; }
    return "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\">\n    <path fill=\"" + fill + "\" fill-rule=\"evenodd\" d=\"M6.5,0 C10.1,0 13,2.9 13,6.5 C13,10.1 10.1,13 6.5,13 C2.9,13 0,10.1 0,6.5 C0,2.9 2.9,0 6.5,0 Z M10.7126852,2.99396754 L2.99396754,10.7126852 C3.9509961,11.5137006 5.17686811,12 6.5,12 C9.5,12 12,9.5 12,6.5 C12,5.17686811 11.5137006,3.9509961 10.7126852,2.99396754 Z M6.5,1 C3.5,1 1,3.5 1,6.5 C1,7.82313189 1.48629945,9.0490039 2.28731479,10.0060325 L10.0060325,2.28731479 C9.0490039,1.48629945 7.82313189,1 6.5,1 Z\"/>\n  </svg>";
};
var MessagesMap = {
    error: Localize_1.Messages.errorIconLabel,
    warning: Localize_1.Messages.warningIconLabel,
    info: Localize_1.Messages.infoIconLabel,
    success: Localize_1.Messages.successIconLabel,
};
var ImgSrcMap = {
    error: Icons_1.encodeSvg(exports.ErrorSvg()),
    warning: Icons_1.encodeSvg(exports.WarningSvg()),
    info: Icons_1.encodeSvg(exports.InfoSvg()),
    success: Icons_1.encodeSvg(exports.SuccessSvg()),
};
var StatusIconStyleName = TypeStyle.style({
    height: 14,
    width: 14,
});
exports.StatusIcon = function (props) {
    return React.createElement("img", { alt: MessagesMap[props.type](), className: TypeStyle.classes(props.className, StatusIconStyleName), key: props.type + "_statusIcon", src: ImgSrcMap[props.type] });
};


/***/ }),

/***/ "./lib/src/icons/resources/DropdownArrow.js":
/*!**************************************************!*\
  !*** ./lib/src/icons/resources/DropdownArrow.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DropdownArrowSvg = "<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"$state$\" width=\"18\" height=\"18\">\n  <style>\n    .onDarkBackground{opacity:0.5}\n    .onDarkBackground.active,.onDarkBackground.hover{opacity:1}\n    .disabled{opacity:0.35!important}\n    .active path,.hover path{fill:#333}\n    path,.disabled path{fill:#666}\n    .onDarkBackground path{fill:#fff!important}\n  </style>\n  <path d=\"M5.8 7.3l3.5 4.6c.1.1.2.1.3 0l3.6-4.6c.1-.2 0-.3-.2-.3H6c-.2 0-.3.1-.2.3z\"/>\n</svg>";


/***/ }),

/***/ "./lib/src/icons/resources/Expando.js":
/*!********************************************!*\
  !*** ./lib/src/icons/resources/Expando.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ExpandoSvg = "<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"$state$\" width=\"13\" height=\"13\">\n  <style>\n    path{fill:#666}\n    .active path{fill:#333}\n  </style>\n  <path d=\"M2.8,9.2l3.7-3.6l3.7,3.6c0.2,0.2,0.6,0.2,0.8,0s0.2-0.7,0-0.8L6.5,3.8L2,8.4\tC1.8,8.6,1.8,8.9,2,9.2C2.2,9.4,2.6,9.4,2.8,9.2z\"/>\n</svg>";


/***/ }),

/***/ "./lib/src/icons/resources/IconDropdownArrow.js":
/*!******************************************************!*\
  !*** ./lib/src/icons/resources/IconDropdownArrow.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IconDropdownArrowSvg = "<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"$state$\" width=\"7\" height=\"5\">\n  <style>\n    .onDarkBackground{opacity:0.5}\n    .onDarkBackground.active,.onDarkBackground.hover{opacity:1}\n    .disabled{opacity:0.35!important}\n    .active path,.hover path{fill:#333}\n    path,.disabled path{fill:#666}\n    .onDarkBackground path{fill:#fff!important}\n  </style>\n  <path d=\"M5.8,1H1.2C1.1,1,1,1.1,1.1,1.2l2.3,2.7C3.4,4,3.6,4,3.6,3.9l2.3-2.7 C6,1.1,5.9,1,5.8,1z\"/>\n</svg>";


/***/ }),

/***/ "./lib/src/icons/resources/MenuItemArrow.js":
/*!**************************************************!*\
  !*** ./lib/src/icons/resources/MenuItemArrow.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MenuItemArrowSvg = "<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"$state$\" width=\"18\" height=\"18\">\n  <style>\n    .disabled{opacity:0.35}\n    .active path{fill:#333}\n    path,.disabled path{fill:#666}\n  </style>\n  <path d=\"M7.3,13.2l4.6-3.5c0.1-0.1,0.1-0.2,0-0.3L7.3,5.8C7.1,5.7,7,5.8,7,6v7C7,13.2,7.1,13.3,7.3,13.2z\"/>\n</svg>";


/***/ }),

/***/ "./lib/src/icons/resources/MenuItemCheck.js":
/*!**************************************************!*\
  !*** ./lib/src/icons/resources/MenuItemCheck.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MenuItemCheckSvg = "<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"$state$\" width=\"10\" height=\"10\">\n  <style>\n    .disabled{opacity:0.35}\n    .active path{fill:#333}\n    path,.disabled path{fill:#666}\n  </style>\n  <path d=\"M4.2 9.3C4 9.3 3.8 9.2 3.7 9.1l-3-3L1.8 5l2.3 2.3 4-6.7 1.3 0.8L4.9 9C4.7 9.2 4.5 9.3 4.2 9.3L4.2 9.3z\" />\n</svg>";


/***/ }),

/***/ "./lib/src/icons/resources/SliderHandle.js":
/*!*************************************************!*\
  !*** ./lib/src/icons/resources/SliderHandle.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// tslint:disable max-line-length
exports.SliderHandleSvg = "<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"$state$\" width=\"20\" height=\"20\">\n  <style>\n    circle{fill:#fff;stroke-width:1;stroke:#666}\n    .focus circle{stroke:#3498db}\n    .active circle{stroke:#333}\n    .disabled circle{fill:#ebebeb;stroke:#b4b4b4}\n  </style>\n  <circle cx=\"10\" cy=\"10\" r=\"7.5\"/>\n</svg>";


/***/ }),

/***/ "./lib/src/icons/resources/SliderLeftHandle.js":
/*!*****************************************************!*\
  !*** ./lib/src/icons/resources/SliderLeftHandle.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SliderLeftHandleSvg = "<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"$state$\" width=\"20\" height=\"20\">\n  <style>\n    .bg{fill:#fff}\n    .outline{fill:#666}\n    .focus .outline{fill:#3498db}\n    .active .outline{fill:#333}\n    .disabled .bg{fill:#ebebeb}\n    .disabled .outline{fill:#b4b4b4}\n  </style>\n  <path class=\"bg\" d=\"M11.2,2.5c-4.3,0-7.7,3.3-7.7,7.5s3.5,7.5,7.8,7.5h4.3v-15H11.2z\"/>\n  <path class=\"outline\" d=\"M15,3v14h-3.6C7.3,17,4,13.9,4,10s3.3-7,7.4-7H15 M16,2h-4.6C6.7,2,3,5.6,3,10s3.7,8,8.4,8H16V2 L16,2z\"/>\n</svg>";


/***/ }),

/***/ "./lib/src/icons/resources/SliderRightHandle.js":
/*!******************************************************!*\
  !*** ./lib/src/icons/resources/SliderRightHandle.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SliderRightHandleSvg = "<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"$state$\" width=\"20\" height=\"20\">\n  <style>\n    .bg{fill:#fff}\n    .outline{fill:#666}\n    .focus .outline{fill:#3498db}\n    .active .outline{fill:#333}\n    .disabled .bg{fill:#ebebeb}\n    .disabled .outline{fill:#b4b4b4}\n  </style>\n  <path class=\"bg\" d=\"M7.8,2.6c4.3,0,7.8,3.3,7.8,7.4s-3.5,7.4-7.8,7.4H3.5V2.6H7.8z\"/>\n  <path class=\"outline\" d=\"M4,3h3.6c4.1,0,7.4,3.1,7.4,7s-3.3,7-7.4,7H4V3 M3,2v16h4.6\tc4.6,0,8.4-3.6,8.4-8s-3.7-8-8.4-8H3L3,2z\"/>\n</svg>";


/***/ }),

/***/ "./lib/src/icons/resources/StepperLeft.js":
/*!************************************************!*\
  !*** ./lib/src/icons/resources/StepperLeft.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.StepperLeftSvg = "\n<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"$state$\" width=\"18\" height=\"22\">\n  <style>\n    path{fill:#666}\n    .active path,.hover path{fill:#333}\n    .disabled{opacity:0.35!important}\n  </style>\n  <path d=\"M10.7,14l-4.4-3.3c-0.1-0.1-0.1-0.2,0-0.3L10.7,7C10.8,7,11,7,11,7.2v6.7C11,14,10.8,14,10.7,14z\"></path>\n</svg>";


/***/ }),

/***/ "./lib/src/icons/resources/StepperRight.js":
/*!*************************************************!*\
  !*** ./lib/src/icons/resources/StepperRight.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.StepperRightSvg = "<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"$state$\" width=\"18\" height=\"22\">\n  <style>\n    path{fill:#666}\n    .active path,.hover path{fill:#333}\n    .disabled{opacity:0.35!important}\n  </style>\n  <path d=\"M7,13.9V7.2C7,7,7.2,7,7.3,7l4.4,3.4c0.1,0.1,0.1,0.2,0,0.3L7.3,14C7.2,14,7,14,7,13.9z\" />\n</svg>";


/***/ }),

/***/ "./lib/src/styles/Colors.js":
/*!**********************************!*\
  !*** ./lib/src/styles/Colors.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.TextColors = {
    Primary: '#333',
    Secondary: '#4f4f4f',
    Neutral: '#707070',
    Disabled: '#bfbfbf',
    Error: '#c93a47',
    Valid: '#008057',
};
exports.IconFillColors = {
    Rest: '#666',
    Hover: '#333',
    Disabled: '#bfbfbf',
    Error: '#c93a47',
    Valid: '#008057',
    Warning: '#FECA56',
    Info: '#2979B2',
};
exports.TextFieldBorderColors = {
    Rest: '#cbcbcb',
    Disabled: '#bfbfbf',
    Hover: '#333',
    Error: '#c93a47',
    Valid: '#008057',
};
exports.InvertTextColors = {
    Primary: '#fff',
    Secondary: 'rgba(255, 255, 255, 0.56)',
    Netural: 'rgba(255, 255, 255, 0.56)',
    Disabled: 'rgba(255, 255, 255, 0.35)',
};
exports.InvertIconFillColors = {
    Rest: 'rgba(255, 255, 255, 0.5)',
    Hover: 'rgba(255, 255, 255, 0.8)',
    Disabled: 'rgba(255, 255, 255, 0.35)',
};
exports.InvertBorderColors = {
    Rest: 'rgba(255, 255, 255, 0.5)',
    Hover: '#fff',
    Disabled: 'rgba(255, 255, 255, 0.35)',
};
exports.TextFieldHoverColor = '#fafafa';
exports.InteractiveBorderColors = Object.freeze({
    borderColor: exports.TextFieldBorderColors.Rest,
    $nest: {
        '&:hover': { borderColor: exports.TextFieldBorderColors.Hover },
        '&:active': { borderColor: exports.TextFieldBorderColors.Hover },
        '&:disabled': { borderColor: "" + exports.TextFieldBorderColors.Disabled },
    }
});
exports.InvertInteractiveBorderColors = Object.freeze({
    borderColor: exports.InvertBorderColors.Rest,
    $nest: {
        '&:hover': { borderColor: exports.InvertBorderColors.Hover },
        '&:active': { borderColor: exports.InvertBorderColors.Hover },
        '&:disabled': { borderColor: "" + exports.InvertBorderColors.Disabled },
    }
});


/***/ }),

/***/ "./lib/src/styles/DatePickerWidgetStyles.js":
/*!**************************************************!*\
  !*** ./lib/src/styles/DatePickerWidgetStyles.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var PreventUserSelect_1 = __webpack_require__(/*! ../styles/PreventUserSelect */ "./lib/src/styles/PreventUserSelect.js");
var TabStyles_1 = __webpack_require__(/*! ../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var Colors = TabStyles_1.TabStyles.Colors, Typography = TabStyles_1.TabStyles.Typography, Sizing = TabStyles_1.TabStyles.Sizing, Spacing = TabStyles_1.TabStyles.Spacing;
exports.datePickerWidgetStyle = tslib_1.__assign({ backgroundColor: 'white', borderColor: Colors.L5, borderRadius: Sizing.BorderRadius, borderStyle: 'solid', borderWidth: Sizing.BorderWidth, boxSizing: 'border-box', color: Typography.Color.Primary, display: 'inline-block', fontSize: Typography.Sizing.Default, lineHeight: 'normal', padding: Spacing.DefaultSpace }, PreventUserSelect_1.PreventUserSelect);
exports.datePickerHeaderStyle = {
    borderBottom: "1px solid " + Colors.F4,
    paddingBottom: Spacing.DefaultSpace,
};
exports.datePickerBodyStyle = {
    marginTop: Spacing.DefaultSpace,
    marginBottom: Spacing.DefaultSpace,
};
exports.datePickerDayOfWeekHeaderStyle = {
    marginTop: Spacing.DefaultSpace,
};
exports.datePickerButtonStyle = {
    marginBottom: Spacing.DefaultSpace,
};
var datePickerCellBaseStyle = {
    alignItems: 'center',
    borderRadius: 1,
    boxSizing: 'border-box',
    color: Typography.Color.Primary,
    display: 'inline-flex',
    height: '30px',
    justifyContent: 'center',
    width: '30px',
};
exports.datePickerCellStyles = {
    dayOfWeekColHeader: tslib_1.__assign(tslib_1.__assign({}, datePickerCellBaseStyle), { fontWeight: 'bold' }),
    default: tslib_1.__assign({}, datePickerCellBaseStyle),
    disabled: {
        textDecoration: 'line-through',
    },
    inOtherMonths: tslib_1.__assign(tslib_1.__assign({}, datePickerCellBaseStyle), { color: Typography.Color.Disabled }),
    isoWeekNum: tslib_1.__assign(tslib_1.__assign({}, datePickerCellBaseStyle), { fontWeight: 'bold', marginRight: Spacing.DefaultSpace }),
    isoWeekNumColHeader: tslib_1.__assign(tslib_1.__assign({}, datePickerCellBaseStyle), { fontWeight: 'bold', marginRight: Spacing.DefaultSpace }),
    selected: tslib_1.__assign(tslib_1.__assign({}, datePickerCellBaseStyle), { backgroundColor: Colors.F4 }),
    today: tslib_1.__assign(tslib_1.__assign({}, datePickerCellBaseStyle), { borderColor: Colors.GoLight, borderRadius: Sizing.BorderRadius, borderStyle: 'solid', borderWidth: Sizing.BorderWidth }),
    todaySelected: tslib_1.__assign(tslib_1.__assign({}, datePickerCellBaseStyle), { backgroundColor: Colors.F8, color: Colors.White }),
};


/***/ }),

/***/ "./lib/src/styles/FocusIndicators.js":
/*!*******************************************!*\
  !*** ./lib/src/styles/FocusIndicators.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
/** @private */
exports.FocusBlue = '#3498DB';
/** @private */
exports.ErrorRed = '#C93A47';
/** @private */
exports.ValidGreen = '#008057';
/** @private */
exports.PreFocusIndicator = Object.freeze({
    borderColor: 'transparent',
    borderStyle: 'solid',
    borderWidth: 1,
});
var FocusIndicator = function (color) {
    if (color === void 0) { color = exports.FocusBlue; }
    return Object.freeze({
        borderColor: color,
        boxShadow: "0 0 4px 0 " + color,
        outline: 'none',
        $nest: {
            '&::-moz-focus-inner': { $unique: true, border: 'none' }
        }
    });
};
/** @private */
exports.DefaultFocusIndicator = FocusIndicator();
/** @private */
exports.InvertFocusIndicator = FocusIndicator('white');
/** @private */
exports.ErrorFocusIndicator = FocusIndicator(exports.ErrorRed);
/** @private */
exports.ValidFocusIndicator = FocusIndicator(exports.ValidGreen);
/**
 * SVG doesn't support `box-shadow`; using pseudo element instead to get correct style
 * @private
 */
exports.SVGInputFocusIndicatorBase = TypeStyle.style({
    position: 'relative',
    $nest: {
        '&.focus::after': tslib_1.__assign(tslib_1.__assign({ border: '1px solid transparent' }, exports.DefaultFocusIndicator), { content: "\"\"", position: 'absolute', pointerEvents: 'none', top: 1, right: 1, bottom: 1, left: 1 })
    }
});


/***/ }),

/***/ "./lib/src/styles/PreventUserSelect.js":
/*!*********************************************!*\
  !*** ./lib/src/styles/PreventUserSelect.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
exports.PreventUserSelectSansCursor = {
    userSelect: 'none',
    'WebkitUserSelect': 'none',
    'msUserSelect': 'none',
    'MozUserSelect': 'none',
};
exports.PreventUserSelect = tslib_1.__assign(tslib_1.__assign({}, exports.PreventUserSelectSansCursor), { cursor: 'default' });


/***/ }),

/***/ "./lib/src/styles/Standard.js":
/*!************************************!*\
  !*** ./lib/src/styles/Standard.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var TabStyles_1 = __webpack_require__(/*! ./TabStyles */ "./lib/src/styles/TabStyles.js");
exports.PopupStyle = {
    background: 'white',
    border: "1px solid " + TabStyles_1.TabStyles.Colors.L6,
    boxShadow: TabStyles_1.TabStyles.Shadow.Standard,
    boxSizing: 'border-box',
    lineHeight: 'normal',
};


/***/ }),

/***/ "./lib/src/styles/TabStyles.js":
/*!*************************************!*\
  !*** ./lib/src/styles/TabStyles.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var merge = __webpack_require__(/*! lodash/merge */ "./node_modules/lodash/merge.js");
// If you have any questions about this file, message #dev-shared-widgets
var SpacingUnit = 6;
var SizingUnit = SpacingUnit;
// TODO: Semantic names - https://mytableau.tableaucorp.com/display/devft/Browser+Font+Reconciliation
var FontSizes = {
    XXLarge: 24,
    XLarge: 18,
    Large: 13,
    Default: 12,
    Small: 11,
    Tiny: 10
};
var FontColors = {
    PrimaryDark: 'rgba(0, 0, 0, 0.9)',
    Primary: 'rgba(0, 0, 0, 0.8)',
    PrimaryMedium: 'rgba(0, 0, 0, 0.7)',
    PrimaryLight: 'rgba(0, 0, 0, 0.6)',
    Secondary: 'rgba(0, 0, 0, 0.56)',
    Disabled: 'rgba(0, 0, 0, 0.35)',
    InvertedPrimary: 'rgb(255, 255, 255)',
    InvertedSecondary: 'rgba(255, 255, 255, 0.56)',
    InvertedDisabled: 'rgba(255, 255, 255, 0.35)',
};
var GreyColors = {
    Grey250: 'rgb(250, 250, 250)',
    Grey245: 'rgb(245, 245, 245)',
    Grey235: 'rgb(235, 235, 235)',
    Grey230: 'rgb(230, 230, 230)',
    Grey225: 'rgb(225, 225, 225)',
    Grey212: 'rgb(212, 212, 212)',
    Grey203: 'rgb(203, 203, 203)',
    Grey180: 'rgb(180, 180, 180)',
    Grey180Disabled: 'rgba(180, 180, 180, 0.35)',
    Grey102: 'rgb(102, 102, 102)',
    Grey51: 'rgb(51, 51, 51)',
    Grey51Disabled: 'rgba(51, 51, 51, 0.2)',
};
var SemanticColors = {
    White: 'rgb(255, 255, 255)',
    WhiteTransparent: 'rgba(255, 255, 255, 0.25)',
    WhiteDisabled: 'rgba(255, 255, 255, 0.35)',
    WhiteTransparentLine: 'rgba(255, 255, 255, 0.5)',
    WhiteTransparentLineHover: 'rgba(255, 255, 255, 0.8)',
    Black: 'rgb(0, 0, 0)',
    Transparent: 'rgba(0, 0, 0, 0)',
    ActionLight: 'rgb(235, 143, 80)',
    ActionDark: 'rgb(209, 107, 54)',
    AttentionLight: 'rgb(235, 68, 84)',
    AttentionDark: 'rgb(201, 58, 71)',
    AttentionDarkDisabled: 'rgba(201, 58, 71, 0.35)',
    Continuous: 'rgb(0, 177, 128)',
    ContinuousDark: 'rgb(0, 151, 104)',
    Discrete: 'rgb(73, 150, 178)',
    DiscreteDark: 'rgb(54, 126,156)',
    GoLight: 'rgb(45, 204, 151)',
    GoDark: 'rgb(47, 163, 125)',
    GoDarkDisabled: 'rgba(47, 163, 125, 0.35)',
    Shaded: 'rgba(0, 0, 0, 0.07)',
    ApplicationBlue: 'rgb(34, 38, 54)',
    DesktopBlue: 'rgb(53, 92, 128)',
    ServerBlue: 'rgb(42, 87, 117)',
    OnlineBlue: 'rgb(40, 94, 127)',
    OpaqueGlass: GreyColors.Grey245,
    Focus: 'rgb(52, 152, 219)',
    L1: GreyColors.Grey250,
    L2: GreyColors.Grey245,
    L2_5: GreyColors.Grey235,
    L3: GreyColors.Grey230,
    L4: GreyColors.Grey225,
    L5: GreyColors.Grey212,
    L6: GreyColors.Grey203,
    L7: GreyColors.Grey180,
    L8: GreyColors.Grey102,
    L9: GreyColors.Grey51,
    L9Disabled: GreyColors.Grey51Disabled,
    F1: GreyColors.Grey250,
    F2: GreyColors.Grey245,
    F2_5: GreyColors.Grey235,
    F3: GreyColors.Grey230,
    F4: GreyColors.Grey225,
    F5: GreyColors.Grey212,
    F6: GreyColors.Grey203,
    F7: GreyColors.Grey180,
    F7Disabled: GreyColors.Grey180Disabled,
    F8: GreyColors.Grey102,
    F9: GreyColors.Grey51
};
exports.TabStyles = {
    Colors: SemanticColors,
    Shadow: {
        Standard: '1px 1px 2px 0px rgba(0, 0, 0, 0.15)',
    },
    Spacing: {
        SmallSpace: SpacingUnit / 2,
        DefaultSpace: SpacingUnit,
        MediumSpace: SpacingUnit * 2,
        LargeSpace: SpacingUnit * 3,
        ExtraLargeSpace: SpacingUnit * 4,
    },
    Sizing: {
        BaseUnit: SizingUnit,
        RowHeight: 24,
        ButtonMinWidth: SizingUnit * 15,
        BorderWidth: 1,
        ButtonBorderWidth: 2,
        BorderRadius: 1,
        SelectionBorderWidth: SizingUnit / 2,
        ListRowHeight: 20
    },
    Typography: {
        FontFamily: 'inherit',
        Sizing: FontSizes,
        Color: FontColors
    },
    Opacity: {
        ClearGlass: 0.01,
        Disabled: 0.35,
        OpaqueGlass: 0.33,
    },
};
exports.overrideTabStyles = function (overridingTabStyles) {
    merge(exports.TabStyles, overridingTabStyles);
};


/***/ }),

/***/ "./lib/src/styles/TextEllipsis.js":
/*!****************************************!*\
  !*** ./lib/src/styles/TextEllipsis.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var TextEllipsis = {
    overflow: 'hidden',
    textOverflow: 'ellipsis',
    whiteSpace: 'nowrap'
};
exports.TextEllipsis = TextEllipsis;


/***/ }),

/***/ "./lib/src/utils/Animation.js":
/*!************************************!*\
  !*** ./lib/src/utils/Animation.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.AnimationDuration = 200;


/***/ }),

/***/ "./lib/src/utils/BrowserDetection.js":
/*!*******************************************!*\
  !*** ./lib/src/utils/BrowserDetection.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function checkNavigator(testExp) {
    // Depending on the execution environment, navigator might either be undefined or throw a ReferenceError.
    try {
        return testExp.test(navigator.userAgent);
    }
    catch (_a) {
        return false;
    }
}
exports.isIE = checkNavigator(/Trident/);
exports.isEdge = checkNavigator(/Edge\//);
exports.isMac = checkNavigator(/Mac/);
/**
 * Platform-aware version of `e.ctrlKey`
 */
function isCtrl(event) {
    if (exports.isMac) {
        return event.metaKey || event.ctrlKey;
    }
    else {
        return event.ctrlKey;
    }
}
exports.isCtrl = isCtrl;


/***/ }),

/***/ "./lib/src/utils/Date.js":
/*!*******************************!*\
  !*** ./lib/src/utils/Date.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Localize_1 = __webpack_require__(/*! ../../gen-src/Localize */ "./lib/gen-src/Localize.js");
var DateInputField_1 = __webpack_require__(/*! ../widgets/DateInputField */ "./lib/src/widgets/DateInputField.js");
var DateTerminus;
(function (DateTerminus) {
    DateTerminus[DateTerminus["Start"] = 0] = "Start";
    DateTerminus[DateTerminus["End"] = 1] = "End";
})(DateTerminus = exports.DateTerminus || (exports.DateTerminus = {}));
var DayOfWeek;
(function (DayOfWeek) {
    DayOfWeek[DayOfWeek["Sun"] = 0] = "Sun";
    DayOfWeek[DayOfWeek["Mon"] = 1] = "Mon";
    DayOfWeek[DayOfWeek["Tue"] = 2] = "Tue";
    DayOfWeek[DayOfWeek["Wed"] = 3] = "Wed";
    DayOfWeek[DayOfWeek["Thu"] = 4] = "Thu";
    DayOfWeek[DayOfWeek["Fri"] = 5] = "Fri";
    DayOfWeek[DayOfWeek["Sat"] = 6] = "Sat";
})(DayOfWeek = exports.DayOfWeek || (exports.DayOfWeek = {}));
function getDayOfWeekEnum(dayOfWeek) {
    switch (dayOfWeek) {
        case 'sun':
            return DayOfWeek.Sun;
        case 'mon':
            return DayOfWeek.Mon;
        case 'tue':
            return DayOfWeek.Tue;
        case 'wed':
            return DayOfWeek.Wed;
        case 'thu':
            return DayOfWeek.Thu;
        case 'fri':
            return DayOfWeek.Fri;
        case 'sat':
            return DayOfWeek.Sat;
        default:
            throw new Error("invalid DayOfWeekNames " + dayOfWeek);
    }
}
exports.getDayOfWeekEnum = getDayOfWeekEnum;
/*  Returns the date of the past offset days or future offset days. */
function getDateWithDayOffset(date, offset) {
    var newDate = new Date(date.getTime());
    newDate.setDate(date.getDate() + offset);
    return newDate;
}
exports.getDateWithDayOffset = getDateWithDayOffset;
/*
  Given a date, returns another date that is on the same day but in the past offset
  month or future offset month, if such day doesn't exist, returns the closest day
  in the past offset month or future offset month.
 */
function getDateWithMonthOffset(date, offset) {
    var newDate = new Date(date.getTime());
    var newMonth = date.getMonth() + offset;
    newDate.setMonth(newMonth);
    if (newDate.getDate() !== date.getDate()) {
        newDate.setDate(0);
    }
    return newDate;
}
exports.getDateWithMonthOffset = getDateWithMonthOffset;
/*
  Given a date, returns another date that is on the same day and month, but in the past
  offset year or future offset year, if such day doesn't exist, returns the closest day
  in the past offset year or future offset year.
 */
function getDateWithYearOffset(date, offset) {
    var newDate = new Date(date.getTime());
    var newYear = date.getFullYear() + offset;
    newDate.setFullYear(newYear);
    if (newDate.getMonth() !== date.getMonth()) {
        newDate.setDate(0);
    }
    return newDate;
}
exports.getDateWithYearOffset = getDateWithYearOffset;
/*
  Returns the date of the first day of current display (which might be
  different from the first day of current month).
*/
function getFirstDisplayedDate(date, firstDayOfWeek) {
    var newDate = new Date(date.getTime());
    newDate.setDate(1);
    if (newDate.getDay() < firstDayOfWeek) {
        newDate.setDate(newDate.getDate() - newDate.getDay() - 7 + firstDayOfWeek);
    }
    else {
        newDate.setDate(newDate.getDate() - newDate.getDay() + firstDayOfWeek);
    }
    return newDate;
}
exports.getFirstDisplayedDate = getFirstDisplayedDate;
/* Returns whether two date objects have the same date, ignore time */
function areSameDates(date1, date2) {
    return date1.getFullYear() === date2.getFullYear() &&
        date1.getMonth() === date2.getMonth() &&
        date1.getDate() === date2.getDate();
}
exports.areSameDates = areSameDates;
/* Returns the date of the first day of this month */
function getFirstDayOfMonth(date) {
    return new Date(date.getFullYear(), date.getMonth(), 1);
}
exports.getFirstDayOfMonth = getFirstDayOfMonth;
/* Returns the date of the last day of this month */
function getLastDayOfMonth(date) {
    return new Date(date.getFullYear(), date.getMonth() + 1, 0);
}
exports.getLastDayOfMonth = getLastDayOfMonth;
/* Returns the date of the first day of this week */
function getFirstDayOfWeek(date, firstDayOfWeek) {
    var newDate = new Date(date.getTime());
    if (newDate.getDay() < firstDayOfWeek) {
        newDate.setDate(newDate.getDate() - newDate.getDay() - 7 + firstDayOfWeek);
    }
    else {
        newDate.setDate(newDate.getDate() - newDate.getDay() + firstDayOfWeek);
    }
    return newDate;
}
exports.getFirstDayOfWeek = getFirstDayOfWeek;
/* Returns the date of the last day of this week */
function getLastDayOfWeek(date, firstDayOfWeek) {
    var newDate = new Date(date.getTime());
    newDate.setDate(getFirstDayOfWeek(date, firstDayOfWeek).getDate() + 6);
    return newDate;
}
exports.getLastDayOfWeek = getLastDayOfWeek;
function getLocalizedDaysOfWeek(firstDayOfWeek) {
    // July 8th, 2018 is a Sunday
    var startDate = new Date(2018, 6, 8);
    startDate.setDate(startDate.getDate() + firstDayOfWeek);
    var daysOfWeek = [];
    var daysOfWeekLength = 7;
    for (var i = 0; i < daysOfWeekLength; i++) {
        daysOfWeek.push(Localize_1.Formatters.formatNarrowDayOfWeek(getDateWithDayOffset(startDate, i)));
    }
    return daysOfWeek;
}
exports.getLocalizedDaysOfWeek = getLocalizedDaysOfWeek;
exports.dateParsingFunctions = [
    // stricter parsing functions first
    Localize_1.Parsers.parseShortDateTimeWithFullYear,
    Localize_1.Parsers.parseShortDateTimeWithFullYear24Hour,
    Localize_1.Parsers.parseShortDateMediumTimeWithFullYear,
    Localize_1.Parsers.parseShortDateMediumTimeWithFullYear24Hour,
    Localize_1.Parsers.parseShortDateTime,
    Localize_1.Parsers.parseMediumDateTime,
    Localize_1.Parsers.parseLongDateTime,
    Localize_1.Parsers.parseFullDateTime,
    Localize_1.Parsers.parseShortDate,
    Localize_1.Parsers.parseMediumDate,
    Localize_1.Parsers.parseLongDate,
    Localize_1.Parsers.parseFullDate,
    Localize_1.Parsers.parseShortDateWithFullYear,
];
function getDateFormatter(format) {
    switch (format) {
        case DateInputField_1.DateFormat.ShortDateTime:
            return Localize_1.Formatters.formatShortDateTime;
        case DateInputField_1.DateFormat.MediumDateTime:
            return Localize_1.Formatters.formatMediumDateTime;
        case DateInputField_1.DateFormat.LongDateTime:
            return Localize_1.Formatters.formatLongDateTime;
        case DateInputField_1.DateFormat.FullDateTime:
            return Localize_1.Formatters.formatFullDateTime;
        case DateInputField_1.DateFormat.ShortDate:
            return Localize_1.Formatters.formatShortDate;
        case DateInputField_1.DateFormat.MediumDate:
            return Localize_1.Formatters.formatMediumDate;
        case DateInputField_1.DateFormat.LongDate:
            return Localize_1.Formatters.formatLongDate;
        case DateInputField_1.DateFormat.FullDate:
            return Localize_1.Formatters.formatFullDate;
        case DateInputField_1.DateFormat.ShortDateWithFullYear:
            return Localize_1.Formatters.formatShortDateWithFullYear;
        case DateInputField_1.DateFormat.ShortDateTimeWithFullYear:
            return Localize_1.Formatters.formatShortDateTimeWithFullYear;
        case DateInputField_1.DateFormat.ShortDateTimeWithFullYear24Hour:
            return Localize_1.Formatters.formatShortDateTimeWithFullYear24Hour;
        case DateInputField_1.DateFormat.ShortDateMediumTimeWithFullYear:
            return Localize_1.Formatters.formatShortDateMediumTimeWithFullYear;
        case DateInputField_1.DateFormat.ShortDateMediumTimeWithFullYear24Hour:
            return Localize_1.Formatters.formatShortDateMediumTimeWithFullYear24Hour;
        default:
            throw new Error("Unsupported DateFormat: " + format);
    }
}
exports.getDateFormatter = getDateFormatter;
function getParsedDate(text, terminus) {
    var parsedFunction = null;
    var parsedDateTime = null;
    for (var i = 0; i < exports.dateParsingFunctions.length; i++) {
        var dateParsingFunction = exports.dateParsingFunctions[i];
        parsedDateTime = dateParsingFunction(text);
        if (parsedDateTime) {
            parsedFunction = dateParsingFunction;
            break;
        }
    }
    // parsedDateTime might not be a valid date object if year is too big.
    if (parsedDateTime && !isNaN(parsedDateTime.getTime())) {
        return getDateWithTerminus(parsedDateTime, parsedFunction, terminus);
    }
    else {
        return null;
    }
}
exports.getParsedDate = getParsedDate;
function getDateWithTerminus(date, parsingFunction, terminus) {
    var newDate = new Date(date.getTime());
    switch (parsingFunction) {
        case Localize_1.Parsers.parseShortDate:
        case Localize_1.Parsers.parseMediumDate:
        case Localize_1.Parsers.parseLongDate:
        case Localize_1.Parsers.parseFullDate:
        case Localize_1.Parsers.parseShortDateWithFullYear:
            if (terminus === DateTerminus.End) {
                newDate.setHours(24, 0, 0, -1);
            }
            else {
                newDate.setHours(0, 0, 0, 0);
            }
            return newDate;
        // Seconds are not defined
        case Localize_1.Parsers.parseShortDateTimeWithFullYear:
        case Localize_1.Parsers.parseShortDateTimeWithFullYear24Hour:
            if (terminus === DateTerminus.End) {
                newDate.setSeconds(60, -1);
            }
            else {
                newDate.setSeconds(0, 0);
            }
            return newDate;
        default:
            return newDate;
    }
}
exports.getDateWithTerminus = getDateWithTerminus;
function getISOWeekNum(date) {
    // https://stackoverflow.com/questions/6117814/get-week-of-year-in-javascript-like-in-php/6117889#6117889
    date = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));
    // Set to nearest Thursday: current date + 4 - current day number
    // Make Sunday's day number 7
    date.setUTCDate(date.getUTCDate() + 4 - (date.getUTCDay() || 7));
    // Get first day of year
    var yearStart = new Date(Date.UTC(date.getUTCFullYear(), 0, 1));
    // Calculate full weeks to nearest Thursday
    return Math.ceil((((date.valueOf() - yearStart.valueOf()) / 86400000) + 1) / 7);
}
exports.getISOWeekNum = getISOWeekNum;
function getStartDayOfWeek(showWeekNumbers) {
    return showWeekNumbers ? DayOfWeek.Mon : getDayOfWeekEnum(Localize_1.LocaleData.get().firstDayOfWeek);
}
exports.getStartDayOfWeek = getStartDayOfWeek;


/***/ }),

/***/ "./lib/src/utils/Declarative.js":
/*!**************************************!*\
  !*** ./lib/src/utils/Declarative.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function conditional(condition, content) {
    return condition ? content : undefined;
}
exports.conditional = conditional;
function makeTestId() {
    var parts = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        parts[_i] = arguments[_i];
    }
    return parts.join('-');
}
exports.makeTestId = makeTestId;
function isAlphabeticChar(char) {
    return !!char && /^[a-z0-9]$/i.test(char);
}
exports.isAlphabeticChar = isAlphabeticChar;


/***/ }),

/***/ "./lib/src/utils/DomUtil.js":
/*!**********************************!*\
  !*** ./lib/src/utils/DomUtil.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var BrowserDetection_1 = __webpack_require__(/*! ./BrowserDetection */ "./lib/src/utils/BrowserDetection.js");
var id = Date.now(); // TFSID 872587 don't start from 0 because Chrome assumes same-id is same-field
function generateId() {
    return "tab-shared-widget-" + id++;
}
exports.generateId = generateId;
/** setTimeout around node.focus, with some safety checks */
function timeoutFocus(node) {
    window.setTimeout(function () {
        if (node && window.document.body.contains(node)) {
            node.focus();
        }
    });
}
exports.timeoutFocus = timeoutFocus;
function detectScrollbarWidth() {
    var div = document.createElement('div');
    div.className = 'scrollbarMeasurement';
    tslib_1.__assign(div.style, {
        width: '100px',
        height: '100px',
        overflowY: 'scroll',
        position: 'absolute',
        visibility: 'hidden',
        border: 'none'
    });
    document.body.appendChild(div);
    var scrollbarWidth = div.offsetWidth - div.clientWidth;
    document.body.removeChild(div);
    return scrollbarWidth;
}
exports.detectScrollbarWidth = detectScrollbarWidth;
function isElementOverflownX(element) {
    return element && element.clientWidth < element.scrollWidth;
}
exports.isElementOverflownX = isElementOverflownX;
function closest(element, selector) {
    if (element.closest) {
        return element.closest(selector);
    }
    var matches = Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;
    if (!matches) {
        return null;
    }
    var node = element;
    while (node) {
        if (matches.call(node, selector)) {
            return node;
        }
        node = node.parentElement;
    }
    return null;
}
exports.closest = closest;
/** n.b. in IE/Edge this method only inspects and adjusts vertical scrolling */
function scrollIntoView(elem, block) {
    if (block === void 0) { block = 'nearest'; }
    if (!elem) {
        return;
    }
    if (!(BrowserDetection_1.isIE || BrowserDetection_1.isEdge)) {
        elem.scrollIntoView({ block: block, behavior: 'auto' });
    }
    else {
        var scrollableParent = elem.parentElement;
        var overflowY = '';
        while (scrollableParent) {
            overflowY = getComputedStyle(scrollableParent).overflowY;
            if (overflowY === 'auto' || overflowY === 'scroll') {
                break;
            }
            scrollableParent = scrollableParent.parentElement;
        }
        if (scrollableParent) {
            var elemRect = elem.getBoundingClientRect();
            var scrollRect = scrollableParent.getBoundingClientRect();
            if (elemRect.bottom > scrollRect.bottom) {
                scrollableParent.scrollTop += elemRect.bottom - scrollRect.bottom;
            }
            else if (elemRect.top < scrollRect.top) {
                scrollableParent.scrollTop += elemRect.top - scrollRect.top;
            }
        }
    }
}
exports.scrollIntoView = scrollIntoView;
function findBlurRelatedTarget(e) {
    if (BrowserDetection_1.isIE) {
        // Blur doesn't have relatedTarget in IE11: https://github.com/facebook/react/issues/3751
        return (e.relatedTarget || document.activeElement);
    }
    else {
        return e.relatedTarget;
    }
}
exports.findBlurRelatedTarget = findBlurRelatedTarget;
// nasty hack to work around Safari bug which dispatches multiple focus events with
// as single click on trackpads: https://github.com/facebook/react/issues/10871
// credit to https://gist.github.com/pmacmillan/5e78836821ac22031567382dadd4a72e
function shouldIgnoreFocusEvent(e) {
    // tslint:disable:no-any
    var target = e.target;
    // tslint:disable:no-any
    var relatedTarget = e.relatedTarget;
    // test if we are ignoring the current event because we recevied another one too soon
    if (target.lastFocusEventMs && e.timeStamp < target.lastFocusEventMs + 100) {
        return true;
    }
    target.lastFocusEventMs = e.timeStamp;
    if (relatedTarget) {
        relatedTarget.lastFocusEventMs = e.timeStamp;
    }
    return false;
}
exports.shouldIgnoreFocusEvent = shouldIgnoreFocusEvent;
function selectInputText(input) {
    window.setTimeout(function () {
        // Defect 706678: only certain element types support setSelectionRange, but Safari prefers it
        try {
            if (input.value) {
                input.setSelectionRange(0, input.value.length);
            }
        }
        catch (e) {
            input.select();
        }
    });
}
exports.selectInputText = selectInputText;


/***/ }),

/***/ "./lib/src/utils/FindIndex.js":
/*!************************************!*\
  !*** ./lib/src/utils/FindIndex.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// tslint:disable:no-any
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Returns the first index in the array in which the element satisfies the provided testing function.
 * Otherwise -1 is returned if no elements satisfy it.
 * Wraps around array and starts at the given startIndex.
 */
var findIndex = function (array, testingFn, startIndex, thisArg) {
    if (startIndex === void 0) { startIndex = 0; }
    for (var i = startIndex; i < array.length + startIndex; i++) {
        var index = i % array.length;
        if (testingFn.call(thisArg, array[index], index)) {
            return index;
        }
    }
    return -1;
};
exports.findIndex = findIndex;


/***/ }),

/***/ "./lib/src/utils/FocusIndicator.js":
/*!*****************************************!*\
  !*** ./lib/src/utils/FocusIndicator.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var DomUtil_1 = __webpack_require__(/*! ./DomUtil */ "./lib/src/utils/DomUtil.js");
var FocusIndicators_1 = __webpack_require__(/*! ../styles/FocusIndicators */ "./lib/src/styles/FocusIndicators.js");
exports.FocusVisibleClassName = 'focus-visible';
var MakeFocusIndicatorStyles = function (color, inset) {
    if (color === void 0) { color = FocusIndicators_1.FocusBlue; }
    if (inset === void 0) { inset = false; }
    return Object.freeze({
        borderColor: color,
        boxShadow: inset ? "inset 0 0 0 1px " + color : "0 0 4px 0 " + color,
    });
};
var StandardIndicatorStyleName = TypeStyle.style({
    $nest: {
        '&:focus, & :focus': { outline: 'none', },
        '&::-moz-focus-inner, & ::-moz-focus-inner': { $unique: true, border: 'none' },
        '&.focus-visible:focus': MakeFocusIndicatorStyles(FocusIndicators_1.FocusBlue),
        '&.focus-visible :focus': MakeFocusIndicatorStyles(FocusIndicators_1.FocusBlue),
    },
});
/** @private This is an experimental component which may be broken or removed without notice.
 * If you believe you have a need for it, please contact #dev-shared-widgets so we may explore your use case together.
 */
// tslint:disable-next-line:class-name
var __UNSTABLE__INTERNAL__FocusIndicator = /** @class */ (function (_super) {
    tslib_1.__extends(__UNSTABLE__INTERNAL__FocusIndicator, _super);
    function __UNSTABLE__INTERNAL__FocusIndicator() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = { focusVisible: true };
        _this.handleBlur = function (e) {
            var _a, _b;
            var currentTarget = e.currentTarget;
            var focusTarget = DomUtil_1.findBlurRelatedTarget(e);
            _this.setState(function (prevState) { return ({ focusVisible: prevState.focusVisible || !currentTarget.contains(focusTarget) }); });
            (_b = (_a = _this.props.children.props).onBlurCapture) === null || _b === void 0 ? void 0 : _b.call(_a, e);
        };
        _this.handleKeyDown = function (e) {
            var _a, _b;
            /* Nav keys we care about:
             * 9 Tab
             * 27 Esc
             * 33 PgUp
             * 34 PgDn
             * 35 End
             * 36 Home
             * 37 Left
             * 38 Up
             * 39 Right
             * 40 Down
             */
            var keyCode = e.keyCode, shiftKey = e.shiftKey;
            if (shiftKey || keyCode === /*tab*/ 9 || keyCode === /*esc*/ 27 || (keyCode >= 33 && keyCode <= 40)) {
                _this.setState({ focusVisible: true });
            }
            (_b = (_a = _this.props.children.props).onKeyDownCapture) === null || _b === void 0 ? void 0 : _b.call(_a, e);
        };
        _this.handleMouseDown = function (e) {
            var _a, _b;
            _this.setState({ focusVisible: !!_this.props.showForPointer });
            (_b = (_a = _this.props.children.props).onMouseDownCapture) === null || _b === void 0 ? void 0 : _b.call(_a, e);
        };
        return _this;
    }
    __UNSTABLE__INTERNAL__FocusIndicator.prototype.render = function () {
        var _a;
        var _b = this.props, children = _b.children, showForPointer = _b.showForPointer, rest = tslib_1.__rest(_b, ["children", "showForPointer"]);
        return React.cloneElement(React.Children.only(children), tslib_1.__assign(tslib_1.__assign({}, rest), { className: TypeStyle.classes(children.props.className, StandardIndicatorStyleName, (_a = {},
                _a[exports.FocusVisibleClassName] = this.state.focusVisible,
                _a)), onKeyDownCapture: this.handleKeyDown, 
            // TODO does this need PointerEventWrapper to work in VizClient? ugh hope not
            onMouseDownCapture: this.handleMouseDown, onBlurCapture: this.handleBlur }));
    };
    return __UNSTABLE__INTERNAL__FocusIndicator;
}(React.PureComponent));
exports.__UNSTABLE__INTERNAL__FocusIndicator = __UNSTABLE__INTERNAL__FocusIndicator;


/***/ }),

/***/ "./lib/src/utils/FocusTrap.js":
/*!************************************!*\
  !*** ./lib/src/utils/FocusTrap.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var DomUtil_1 = __webpack_require__(/*! ./DomUtil */ "./lib/src/utils/DomUtil.js");
function handleFocus(e) {
    e.stopPropagation(); // just for TFS 739813 and 740525, c.f. PortalEventTrap
}
function handleBlur(e, onTrap) {
    var relatedTarget = DomUtil_1.findBlurRelatedTarget(e);
    if (relatedTarget && !e.currentTarget.contains(relatedTarget)) {
        e.target.focus();
        e.stopPropagation();
        if (onTrap) {
            onTrap(e);
        }
    }
}
exports.FocusTrap = function (props) {
    var onTrap = props.onTrap, divProps = tslib_1.__rest(props, ["onTrap"]);
    var handleBlurCallback = React.useCallback(function (e) {
        handleBlur(e, onTrap);
    }, [onTrap]);
    return React.createElement("div", tslib_1.__assign({}, divProps, { onBlur: handleBlurCallback, onFocus: handleFocus }));
};


/***/ }),

/***/ "./lib/src/utils/Geometry.js":
/*!***********************************!*\
  !*** ./lib/src/utils/Geometry.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Interfaces for common geometric quantities and helpers for common geometric calculations.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Returns the position of the center of the rect.
 */
function computeCenter(rect) {
    return {
        top: rect.top + (rect.height / 2),
        left: rect.left + (rect.width / 2)
    };
}
exports.computeCenter = computeCenter;
/**
 * Returns first - second.
 */
function subtractPositions(first, second) {
    return {
        top: first.top - second.top,
        left: first.left - second.left
    };
}
exports.subtractPositions = subtractPositions;
/**
 * Returns the max width and height from the two sizes.
 */
function getMaxWidthAndHeight(first, second) {
    return {
        width: Math.max(first.width, second.width),
        height: Math.max(first.height, second.height)
    };
}
exports.getMaxWidthAndHeight = getMaxWidthAndHeight;
/**
 * Returns the position that will center the area within the bounds.
 */
function computePositionToCenterAreaInBounds(area, bounds) {
    var boundsCenter = computeCenter(bounds);
    return {
        top: boundsCenter.top - (area.height / 2),
        left: boundsCenter.left - (area.width / 2)
    };
}
exports.computePositionToCenterAreaInBounds = computePositionToCenterAreaInBounds;
/**
 * Returns a position that places the "bounded" region entirely within the "container" region. (i.e. so that
 * the "bounded" region will be bounded by the "container").
 * The returned position will as close as possible to the "bounded" region's current position.
 * If the "bounded" region is too large in a dimension to fit within the "container" region, the returned
 * position will align with the "container" region's top or left boundary.
 */
function computePositionToContainBounds(bounded, container) {
    var containerBottom = container.top + container.height;
    var containerRight = container.left + container.width;
    return {
        top: Math.max(container.top, Math.min(bounded.top, containerBottom - bounded.height)),
        left: Math.max(container.left, Math.min(bounded.left, containerRight - bounded.width))
    };
}
exports.computePositionToContainBounds = computePositionToContainBounds;
/**
 * Builds a ClientRect from a position and size.
 */
function makeClientRect(pos, size) {
    return {
        top: pos.top,
        left: pos.left,
        bottom: pos.top + size.height,
        right: pos.left + size.width,
        width: size.width,
        height: size.height
    };
}
exports.makeClientRect = makeClientRect;
/**
 * Checks whether a point is contained inside a rectangle.  If the point is on the edges of the rectangle, it is
 * considered inside the rectangle.
 */
function doesRectangleContainPoint(rect, point) {
    return (point.left >= rect.left && point.left <= (rect.left + rect.width))
        && (point.top >= rect.top && point.top <= (rect.top + rect.height));
}
exports.doesRectangleContainPoint = doesRectangleContainPoint;
/**
 * This returns a NEW ClientRect (does not update the one passed in), by adding the passed value to the left edge.
 * The right edge is unchanged.
 */
function addClientRectLeft(rect, difference) {
    return makeClientRect({ left: rect.left + difference, top: rect.top }, { width: rect.width - difference, height: rect.height });
}
exports.addClientRectLeft = addClientRectLeft;
/**
 * This returns a NEW ClientRect (does not update the one passed in), by adding the passed value to the right edge.
 * The left edge is unchanged.
 */
function addClientRectRight(rect, difference) {
    return makeClientRect({ left: isNaN(difference) ? NaN : rect.left, top: rect.top }, { width: rect.width + difference, height: rect.height });
}
exports.addClientRectRight = addClientRectRight;


/***/ }),

/***/ "./lib/src/utils/GlobalPointerDownOutsideListener.js":
/*!***********************************************************!*\
  !*** ./lib/src/utils/GlobalPointerDownOutsideListener.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * A singleton class used to trigger a handler when a pointer-down event occurs outside of a set of subscribing element(s).
 * When the user pointer-downs outside of the subscribed elements, their handlers are called.
 * Pointer-down events on iframes require special care, so this class exists to abstract those details.
 *
 * Maps 1 handler to many elements, e.g. for common use-case: clicking outside of a dropdown or its popup, causes the dropdown to close.
 * In this case the dropdown element and the popup are DOM-distant, so both elements are associated with the handler.
 */
var GlobalPointerDownOutsideListener = /** @class */ (function () {
    function GlobalPointerDownOutsideListener() {
    }
    /**
     * Subscribes the passed in element to a given handler, for any mousedowns/touchstarts that occur
     * outside of the handler's subscribing element(s).
     *
     * @returns a function which unsubscribes the passed in element from the passed in handler.
     */
    GlobalPointerDownOutsideListener.subscribe = function (element, handler) {
        var _this = this;
        var currentSubscriptions = this.subscriptionMap.get(handler) || [];
        if (currentSubscriptions.indexOf(element) === -1) {
            currentSubscriptions.push(element);
            this.subscriptionMap.set(handler, currentSubscriptions);
        }
        this.addOrRemoveEventListenersToDocument(document, true);
        return function () { return _this.unsubscribe(element, handler); };
    };
    /**
     * Unsubscribes an element from a particular handler.
     * Also removes the global listener from the document if there are no subscriptions left.
     */
    GlobalPointerDownOutsideListener.unsubscribe = function (elementToRemove, handler) {
        var currentSubscriptions = this.subscriptionMap.get(handler);
        if (currentSubscriptions && currentSubscriptions.indexOf(elementToRemove) !== -1) {
            currentSubscriptions = currentSubscriptions.filter(function (element) { return element !== elementToRemove; });
            this.subscriptionMap.set(handler, currentSubscriptions);
        }
        if (currentSubscriptions && currentSubscriptions.length === 0) {
            this.subscriptionMap.delete(handler);
        }
        // if there are no more subscriptions anywhere, remove the global listener
        if (this.subscriptionMap.size === 0) {
            this.addOrRemoveEventListenersToDocument(document, false);
        }
    };
    GlobalPointerDownOutsideListener.addOrRemoveEventListenersToDocument = function (doc, subscribe) {
        var _this = this;
        try {
            if (subscribe) {
                doc.addEventListener('mousedown', this.handlePointerDown);
                doc.addEventListener('touchstart', this.handlePointerDown);
            }
            else {
                doc.removeEventListener('mousedown', this.handlePointerDown);
                doc.removeEventListener('touchstart', this.handlePointerDown);
            }
            var iframes = doc.getElementsByTagName('iframe');
            [].forEach.call(iframes, function (iframe) {
                _this.addOrRemoveEventListenersToDocument(iframe.contentDocument, subscribe);
            });
        }
        catch (e) {
            /*
             * If the document is an iframe from a different source we can't add event listeners.
             * IE, Firefox, and Chrome throw different exceptions, so this just assumes
             * that is the error being thrown.
             */
        }
    };
    GlobalPointerDownOutsideListener.handlePointerDown = function (e) {
        var target = e.target;
        GlobalPointerDownOutsideListener.subscriptionMap.forEach(function (domNodes, handler) {
            var subscribersContainTarget = false;
            domNodes.some(function (domNode, index) {
                if (domNode && domNode.contains(target)) {
                    subscribersContainTarget = true;
                    return true;
                }
                // If the target is not contained by any of the handler's subscribers, trigger that handler
                if (index === domNodes.length - 1 && !subscribersContainTarget) {
                    handler(e);
                }
                return false;
            });
        });
    };
    GlobalPointerDownOutsideListener.subscriptionMap = new Map();
    return GlobalPointerDownOutsideListener;
}());
exports.GlobalPointerDownOutsideListener = GlobalPointerDownOutsideListener;


/***/ }),

/***/ "./lib/src/utils/GlobalPointerEventCapturer.js":
/*!*****************************************************!*\
  !*** ./lib/src/utils/GlobalPointerEventCapturer.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * This class manages adding and removing global (window) event handler's for touch/mouse move and up and capturing
 * the events if need be (on IE).
 *
 * This is useful for implementing drag behavior.  If you rely on element level move and up events, you will only
 * get those if the user's mouse pointer or finger stayed within the bounds of the element.  As soon as they move
 * outside the element (or outside the browser) you won't get them.
 */
var GlobalPointerEventCapturer = /** @class */ (function () {
    function GlobalPointerEventCapturer(
    // We need this elementRef solely for IE, see comments about set and release capture below
    elementRef, onPointerMove, onPointerUp) {
        this.listenersAdded = false;
        this.elementRef = elementRef;
        this.onPointerMove = onPointerMove;
        this.onPointerUp = onPointerUp;
    }
    GlobalPointerEventCapturer.prototype.addListeners = function () {
        if (this.listenersAdded) {
            return;
        }
        window.addEventListener('touchend', this.onPointerUp, true);
        window.addEventListener('mouseup', this.onPointerUp, true);
        // `passive: false` necessary for TFSID 798261 + https://bugs.webkit.org/show_bug.cgi?id=182521
        window.addEventListener('touchmove', this.onPointerMove, { capture: true, passive: false });
        window.addEventListener('mousemove', this.onPointerMove, { capture: true, passive: false });
        // On IE we have to setCapture the element so that if the mouse goes outside the bounds of the page, we will still
        // get mousemove and mouseup events.
        // tslint:disable-next-line:no-any
        if (this.elementRef.setCapture) {
            // tslint:disable-next-line:no-any
            this.elementRef.setCapture();
        }
        this.listenersAdded = true;
    };
    GlobalPointerEventCapturer.prototype.removeListeners = function () {
        if (!this.listenersAdded) {
            return;
        }
        window.removeEventListener('touchend', this.onPointerUp, true);
        window.removeEventListener('mouseup', this.onPointerUp, true);
        window.removeEventListener('touchmove', this.onPointerMove, { capture: true });
        window.removeEventListener('mousemove', this.onPointerMove, { capture: true });
        // We have to releaseCapture on IE since we setCapture there
        // tslint:disable-next-line:no-any
        if (this.elementRef.releaseCapture) {
            // tslint:disable-next-line:no-any
            this.elementRef.releaseCapture();
        }
        this.listenersAdded = false;
    };
    return GlobalPointerEventCapturer;
}());
exports.GlobalPointerEventCapturer = GlobalPointerEventCapturer;


/***/ }),

/***/ "./lib/src/utils/GlobalPointerUpListener.js":
/*!**************************************************!*\
  !*** ./lib/src/utils/GlobalPointerUpListener.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var GlobalPointerUpListener = /** @class */ (function () {
    function GlobalPointerUpListener() {
    }
    GlobalPointerUpListener.subscribeOrUnsubscribeWindows = function (window, subscribe, callback) {
        if (subscribe) {
            window.addEventListener('mouseup', callback, true);
            window.addEventListener('touchend', callback, true);
        }
        else {
            window.removeEventListener('mouseup', callback, true);
            window.removeEventListener('touchend', callback, true);
        }
        var iframes = window.document.getElementsByTagName('iframe');
        for (var i = 0; i < iframes.length; i++) {
            GlobalPointerUpListener.trySubscribeOrUnscribeWindows(iframes[i].contentWindow, subscribe, callback);
        }
    };
    /**
     * We do a try/except because we may try to add event listeners to iframes that are not from the same source. If
     * that is the case we catch it and continue without adding the listeners.
     */
    GlobalPointerUpListener.trySubscribeOrUnscribeWindows = function (window, subscribe, callback) {
        try {
            GlobalPointerUpListener.subscribeOrUnsubscribeWindows(window, subscribe, callback);
        }
        catch (e) {
            /**
             * If the document is an iframe from a different source we can't add event listeners.
             * IE, Firefox, and Chrome seem to be throwing different exceptions, so this just assumes
             * that is the error being thrown.
             */
        }
    };
    GlobalPointerUpListener.subscribe = function (callback) {
        GlobalPointerUpListener.trySubscribeOrUnscribeWindows(window, true, callback);
        return function () {
            GlobalPointerUpListener.trySubscribeOrUnscribeWindows(window, false, callback);
        };
    };
    return GlobalPointerUpListener;
}());
exports.GlobalPointerUpListener = GlobalPointerUpListener;


/***/ }),

/***/ "./lib/src/utils/InteractiveDom.js":
/*!*****************************************!*\
  !*** ./lib/src/utils/InteractiveDom.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var PointerEvents_1 = __webpack_require__(/*! ./PointerEvents */ "./lib/src/utils/PointerEvents.js");
var ReactHelpers_1 = __webpack_require__(/*! ./ReactHelpers */ "./lib/src/utils/ReactHelpers.js");
var GlobalPointerUpListener_1 = __webpack_require__(/*! ./GlobalPointerUpListener */ "./lib/src/utils/GlobalPointerUpListener.js");
function reactElementIsDomElement(type) {
    // per JSX API, when `type` is a string that starts with a lower-case letter, it's a DOM element
    // maybe not all children are JSX elements, but checking that the type is a string rather than a symbol is a safe-enough assumption
    // https://reactjs.org/docs/jsx-in-depth.html#user-defined-components-must-be-capitalized
    return typeof type === 'string' && type.charAt(0) === type.charAt(0).toLowerCase();
}
/**
 * This returns a combined styling with style as it's base. Depending upon the state of the component it assigns
 * onto it the hover, focus, and active styling while overwriting in that order. If disabled, the
 * hover/active/focus styles do not get assigned, but the disabled styling gets assigned.
 */
function resolveInteractiveStyles(style, component) {
    var _a = component.props, disabled = _a.disabled, interactiveStyles = _a.interactiveStyles;
    if (!interactiveStyles) {
        return style;
    }
    return tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, style), (component.state.hover && !disabled && interactiveStyles.hover)), (component.state.focus && !disabled && interactiveStyles.focus)), (component.state.active && !disabled && interactiveStyles.active)), (disabled && interactiveStyles.disabled));
}
/**
 * We must add the pointerUp styling events to the window instead of the element so that the
 * user can mouse down on the element, move off it, mouseUp, and the element can be
 * made to have inactive styling.
 */
var attachPointerUpListener = function (component) {
    var handlePointerUp = function () {
        var _a, _b;
        if (!component.interactiveIsMounted) {
            return;
        }
        component.setState({ active: false });
        if (component.props.handleActive) {
            component.props.handleActive(false);
        }
        (_b = (_a = component).removePointerUpListener) === null || _b === void 0 ? void 0 : _b.call(_a);
        component.removePointerUpListener = undefined;
    };
    component.removePointerUpListener = GlobalPointerUpListener_1.GlobalPointerUpListener.subscribe(handlePointerUp);
};
function renderInteractiveComponent(component, domElement) {
    var _a = component.props, disabled = _a.disabled, pointerDown = _a.pointerDown;
    var pointerEventProps = disabled ? {} : {
        pointerDown: ReactHelpers_1.mergeEventHandlers(pointerDown, function () {
            if (!component.interactiveIsMounted) {
                return;
            }
            component.setState({ active: true });
            if (component.props.handleActive) {
                component.props.handleActive(true);
            }
            if (!component.removePointerUpListener) {
                attachPointerUpListener(component);
            }
        })
    };
    // hack to reach down another layer in the situation that multiple HOCs are stacked
    var childProps = reactElementIsDomElement(domElement.type) || !domElement.props.children ?
        domElement.props :
        React.Children.only(domElement.props.children).props;
    var onMouseOver = childProps.onMouseOver, onMouseOut = childProps.onMouseOut, onKeyDown = childProps.onKeyDown, onKeyUp = childProps.onKeyUp, onFocus = childProps.onFocus, onBlur = childProps.onBlur;
    var domEventProps = disabled ? {} : {
        onMouseOver: ReactHelpers_1.mergeEventHandlers(onMouseOver, function () {
            if (!component.interactiveIsMounted) {
                return;
            }
            component.setState({ hover: true });
            if (component.props.handleHover) {
                component.props.handleHover(true);
            }
        }),
        onMouseOut: ReactHelpers_1.mergeEventHandlers(onMouseOut, function () {
            if (!component.interactiveIsMounted) {
                return;
            }
            component.setState({ hover: false });
            if (component.props.handleHover) {
                component.props.handleHover(false);
            }
        }),
        onKeyDown: ReactHelpers_1.mergeEventHandlers(onKeyDown, function (e) {
            if (!component.interactiveIsMounted) {
                return;
            }
            if (e.key === ' ' || e.key === 'Enter') {
                component.setState({ active: true });
                if (component.props.handleActive) {
                    component.props.handleActive(true);
                }
            }
        }),
        onKeyUp: ReactHelpers_1.mergeEventHandlers(onKeyUp, function (e) {
            if (!component.interactiveIsMounted) {
                return;
            }
            if (e.key === ' ' || e.key === 'Enter') {
                component.setState({ active: false });
                if (component.props.handleActive) {
                    component.props.handleActive(false);
                }
            }
        }),
        onFocus: ReactHelpers_1.mergeEventHandlers(onFocus, function () {
            if (!component.interactiveIsMounted) {
                return;
            }
            component.setState({ focus: true });
            if (component.props.handleFocus) {
                component.props.handleFocus(true);
            }
        }),
        onBlur: ReactHelpers_1.mergeEventHandlers(onBlur, function () {
            if (!component.interactiveIsMounted) {
                return;
            }
            component.setState({ focus: false });
            if (component.props.handleFocus) {
                component.props.handleFocus(false);
            }
        }),
    };
    var resolvedStyles = resolveInteractiveStyles(domElement.props.style, component);
    var resolvedProps = tslib_1.__assign({ style: resolvedStyles, disabled: disabled }, domEventProps);
    var resolvedPointerEventProps = tslib_1.__assign(tslib_1.__assign({}, component.props), pointerEventProps);
    return (React.createElement(PointerEvents_1.PointerEventWrapper, tslib_1.__assign({}, resolvedPointerEventProps), React.cloneElement(domElement, resolvedProps)));
}
/**
 * Wrap a DOM component to give it interactive styles and pointer events. All events from the PointerEventWrapper can also be used here.
 * Example that attaches a click to a div and gives different styling on hover:
 *
 *    const interactiveProps = {
 *      pointerClick: () => console.log('click'),
 *      interactiveStyles: {
 *        hover: { color: 'salmon' }
 *      }
 *    };
 *
 *    // DOM attributes should go straight to the DOM element
 *    const domProps = {
 *      style: { color: 'fallow' },
 *      onBlur: () => console.log('blur')
 *    };
 *
 *    <InteractiveDomWrapper {...props}>
 *      <div {...domProps} />
 *    </InteractiveDomWrapper>
 *
 * When using, you can only have one child and it must render its props to a DOM component.
 * If there is not exactly one child an exception will be thrown.
 */
var InteractiveDomWrapper = /** @class */ (function (_super) {
    tslib_1.__extends(InteractiveDomWrapper, _super);
    function InteractiveDomWrapper(props) {
        var _this = _super.call(this, props) || this;
        _this.state = tslib_1.__assign(tslib_1.__assign({}, _this.state), { hover: false, active: false, focus: false });
        _this.interactiveIsMounted = true;
        return _this;
    }
    InteractiveDomWrapper.getDerivedStateFromProps = function (props, state) {
        if (props.disabled && (state.active || state.focus || state.hover)) {
            return {
                active: false,
                focus: false,
                hover: false,
            };
        }
        return null;
    };
    InteractiveDomWrapper.prototype.componentWillUnmount = function () {
        this.interactiveIsMounted = false;
        if (this.removePointerUpListener) {
            this.removePointerUpListener();
        }
    };
    InteractiveDomWrapper.prototype.render = function () {
        // reuse the child. It could be anything - div, ul, button, etc.
        return renderInteractiveComponent(this, React.Children.only(this.props.children));
    };
    return InteractiveDomWrapper;
}(React.Component));
exports.InteractiveDomWrapper = InteractiveDomWrapper;
/**
 * Higher order component providing CSS :pseudo classes behavior and pointer events. All events from the PointerEventWrapper
 * can also be used here.
 *
 * You can use this to wrap either stateless components or component classes. To use as a @Decorator,
 * use the InteractiveDomHoCDecorator
 */
exports.InteractiveDomHoC = function (componentType) {
    var _a;
    var componentClass = ReactHelpers_1.convertToStatefulComponentClass(componentType);
    var newComponentClass = (_a = /** @class */ (function (_super) {
            tslib_1.__extends(class_1, _super);
            function class_1(props) {
                var _this = _super.call(this, props) || this;
                _this.state = tslib_1.__assign(tslib_1.__assign({}, _this.state), { hover: false, active: false, focus: false });
                _this.interactiveIsMounted = true;
                return _this;
            }
            class_1.getDerivedStateFromProps = function (props, state) {
                if (props.disabled && (state.active || state.focus || state.hover)) {
                    return {
                        active: false,
                        focus: false,
                        hover: false,
                    };
                }
                return null;
            };
            /**
             * Why no super?  React.Component does not actually implement the component lifecycle methods, but checks the instance
             * at runtime to see if they are defined.  Therefore super.componentWillUnmount property does not exist at compile time.
             * Instead we look to see if componentWillUnmount exists on the componentClass by looking at it's prototype and calling it
             * if so.
             */
            class_1.prototype.callComponentClassWillUnmount = function () {
                // tslint:disable-next-line:no-string-literal
                var componentClassWillUnmount = componentClass.prototype['componentWillUnmount'];
                if (componentClassWillUnmount) {
                    componentClassWillUnmount.apply(this);
                }
            };
            class_1.prototype.componentWillUnmount = function () {
                this.callComponentClassWillUnmount();
                this.interactiveIsMounted = false;
                if (this.removePointerUpListener) {
                    this.removePointerUpListener();
                }
            };
            class_1.prototype.render = function () {
                return renderInteractiveComponent(this, _super.prototype.render.call(this));
            };
            return class_1;
        }(componentClass)),
        _a.displayName = "InteractiveDom(" + ReactHelpers_1.getComponentName(componentType) + ")",
        _a);
    return newComponentClass;
};
/** Do some type magic so this can be used as a @Decorator on a component class */
// tslint:disable:no-any
exports.InteractiveDomHoCDecorator = exports.InteractiveDomHoC;


/***/ }),

/***/ "./lib/src/utils/Math.js":
/*!*******************************!*\
  !*** ./lib/src/utils/Math.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Returns the value or the min or max if the value is outside those bounds (which are inclusive).
 */
function clamp(value, min, max) {
    if (max < min) {
        return NaN;
    }
    return Math.min(Math.max(value, min), max);
}
exports.clamp = clamp;


/***/ }),

/***/ "./lib/src/utils/OrientationChange.js":
/*!********************************************!*\
  !*** ./lib/src/utils/OrientationChange.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var PendingOrientationChangeTimeoutMs = 250;
exports.PendingOrientationChangeTimeoutMs = PendingOrientationChangeTimeoutMs;
var PendingResizeTimeoutMs = 200;
exports.PendingResizeTimeoutMs = PendingResizeTimeoutMs;
/**
 * Helper class that "re-fires" an orientation change event only after we think the window has resized, which helps bridge differences
 * between how orientation change is handled on different platforms.
 * There is no guarantee that every orientation change event fired from the window will be mirrored here.
 *
 * Notes on how the eventing works in different scenarios:
 * In iOS, the order is resize -> orientation change.
 * In Android, the order is orientation change -> resize.
 * When in an iframe, either OS will propagate the orientation change event to the iframe's window. The resize only occurs if the
 * parent document happens to resize the iframe, so the order and timing of the two events will depend on how the parent document
 * responds to the event. Currently we won't fire if no resize occurs, which prevents false alarms in the iframe case.
 */
var OrientationChange = /** @class */ (function () {
    function OrientationChange() {
    }
    OrientationChange.init = function () {
        window.addEventListener('orientationchange', OrientationChange.handleOrientationChange);
        window.addEventListener('resize', OrientationChange.handleResize);
    };
    OrientationChange.handleOrientationChange = function () {
        if (OrientationChange.latestPendingResizeTimestamp !== null &&
            Date.now() - OrientationChange.latestPendingResizeTimestamp <= PendingResizeTimeoutMs) {
            /* Resize occurred recently, assume this is the iOS case and fire. */
            OrientationChange.fireOrientationChange();
        }
        else {
            /* No resize occurred recently, but record the timestamp for the Android case where a resize is about to occur. */
            OrientationChange.latestPendingOrientationChangeTimestamp = Date.now();
        }
    };
    OrientationChange.handleResize = function () {
        if (OrientationChange.latestPendingOrientationChangeTimestamp !== null &&
            Date.now() - OrientationChange.latestPendingOrientationChangeTimestamp <= PendingOrientationChangeTimeoutMs) {
            /* Orientation change occurred recently, assume this is the Android case and fire. */
            OrientationChange.fireOrientationChange();
        }
        else {
            /**
             * No orientation change occurred recently, but record the timestamp for the iOS case where an orientation change is about
             * to occur.
             */
            OrientationChange.latestPendingResizeTimestamp = Date.now();
        }
    };
    /**
     * Public only for testing convenience.
     * Notify listeners that an orientation change has occurred and the window has resized already.
     */
    OrientationChange.fireOrientationChange = function () {
        OrientationChange.latestPendingOrientationChangeTimestamp = null;
        OrientationChange.latestPendingResizeTimestamp = null;
        OrientationChange.listeners.forEach(function (callback) { callback(); });
    };
    /**
     * Register a callback when an orientation change occurs.
     */
    OrientationChange.addListener = function (callback) {
        if (callback) {
            OrientationChange.listeners.push(callback);
        }
    };
    /**
     * Unregister a callback that has been previously registered.
     */
    OrientationChange.removeListener = function (callback) {
        OrientationChange.listeners = OrientationChange.listeners.filter(function (element) {
            return element !== callback;
        });
    };
    OrientationChange.latestPendingOrientationChangeTimestamp = null;
    OrientationChange.latestPendingResizeTimestamp = null;
    OrientationChange.listeners = [];
    return OrientationChange;
}());
exports.OrientationChange = OrientationChange;
OrientationChange.init();


/***/ }),

/***/ "./lib/src/utils/Overlay.js":
/*!**********************************!*\
  !*** ./lib/src/utils/Overlay.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
// tslint:disable:deprecation
var throttle = __webpack_require__(/*! lodash/throttle */ "./node_modules/lodash/throttle.js");
var React = __webpack_require__(/*! react */ "react");
var ReactDOM = __webpack_require__(/*! react-dom */ "react-dom");
var tabbable = __webpack_require__(/*! tabbable */ "./node_modules/tabbable/index.js");
var StackingComponent_1 = __webpack_require__(/*! ./StackingComponent */ "./lib/src/utils/StackingComponent.js");
var ViewportHelpers = __webpack_require__(/*! ./ViewportHelpers */ "./lib/src/utils/ViewportHelpers.js");
var ResizeThrottleTime = 100;
var ScrollThrottleTime = 15;
var VerticalOriginOption;
(function (VerticalOriginOption) {
    VerticalOriginOption["top"] = "top";
    VerticalOriginOption["centerY"] = "centerY";
    VerticalOriginOption["bottom"] = "bottom";
})(VerticalOriginOption = exports.VerticalOriginOption || (exports.VerticalOriginOption = {}));
var HorizontalOriginOption;
(function (HorizontalOriginOption) {
    HorizontalOriginOption["left"] = "left";
    HorizontalOriginOption["centerX"] = "centerX";
    HorizontalOriginOption["right"] = "right";
})(HorizontalOriginOption = exports.HorizontalOriginOption || (exports.HorizontalOriginOption = {}));
exports.ScrollingRootContext = React.createContext(document.body);
exports.ScrollingRootContext.displayName = 'ScrollingRootContext';
function getScrollingRootElement(scrollingRootId, context) {
    var scrollingRoot = document.getElementById(scrollingRootId) || context || document.body;
    if (!scrollingRoot) {
        throw new Error('Could not find scrolling root.');
    }
    return scrollingRoot;
}
var Overlay = /** @class */ (function (_super) {
    tslib_1.__extends(Overlay, _super);
    function Overlay() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.scrollingRootElement = null;
        _this.onResize = throttle(function () { return _this.setPlacement(); }, ResizeThrottleTime);
        /**
         * Once the stacking wrapper mounts it returns itself and we set the placement in case the stacked element is already open
         */
        _this.setStackingWrapper = function (stackingWrapper) {
            _this.stackingWrapper = stackingWrapper;
            _this.setPlacement();
        };
        return _this;
    }
    Overlay.prototype.componentDidMount = function () {
        this.addScrollingRootBehavior();
        window.addEventListener('resize', this.onResize);
        if (this.props.autoFocus && this.stackingWrapper) {
            var wrapperNode = ReactDOM.findDOMNode(this.stackingWrapper);
            var tabbables = tabbable(wrapperNode);
            var node = tabbables[0] || wrapperNode.querySelector('[tabindex]');
            if (node) {
                node.focus();
            }
        }
    };
    Overlay.prototype.componentWillUnmount = function () {
        this.removeScrollingRootBehavior();
        window.removeEventListener('resize', this.onResize);
    };
    Overlay.prototype.componentDidUpdate = function (prevProps) {
        this.resetScrollingRootBehaviorIfNeeded(prevProps);
        this.setPlacement();
    };
    /**
     * This adds the scrolling event listeners to the scrolling root if onScroll is not null.
     */
    Overlay.prototype.addScrollingRootBehavior = function () {
        this.setOnScroll();
        if (!!this.onScroll) {
            this.scrollingRootElement = getScrollingRootElement(this.props.scrollingRootId, this.context);
            this.scrollingRootElement.addEventListener('scroll', this.onScroll);
            this.scrollingRootElement.addEventListener('wheel', this.onScroll);
        }
    };
    /**
     * This removes the scrolling event listeners to the scrolling root if onScroll is not null.
     */
    Overlay.prototype.removeScrollingRootBehavior = function () {
        var _a, _b;
        if (!!this.onScroll) {
            (_a = this.scrollingRootElement) === null || _a === void 0 ? void 0 : _a.removeEventListener('scroll', this.onScroll);
            (_b = this.scrollingRootElement) === null || _b === void 0 ? void 0 : _b.removeEventListener('wheel', this.onScroll);
            this.scrollingRootElement = null;
        }
    };
    /**
     * This resets the scrolling root behavior if handleScrollOnScrollingRoot or shouldAutoPositionOnScrollingRootScroll has changed.
     */
    Overlay.prototype.resetScrollingRootBehaviorIfNeeded = function (prevProps) {
        if (prevProps.handleScrollOnScrollingRoot !== this.props.handleScrollOnScrollingRoot ||
            prevProps.shouldAutoPositionOnScrollingRootScroll !== this.props.shouldAutoPositionOnScrollingRootScroll) {
            this.removeScrollingRootBehavior();
            this.addScrollingRootBehavior();
        }
    };
    /**
     * Assigns onScroll to a method if shouldAutoPositionOnScrollingRootScroll is true or handleScrollOnScrollingRoot is not null.
     * Otherwise assign it to null.
     */
    Overlay.prototype.setOnScroll = function () {
        var _this = this;
        if (this.props.shouldAutoPositionOnScrollingRootScroll || !!this.props.handleScrollOnScrollingRoot) {
            var onScroll = function () {
                if (_this.props.shouldAutoPositionOnScrollingRootScroll) {
                    _this.setPlacement();
                }
                if (!!_this.props.handleScrollOnScrollingRoot) {
                    _this.props.handleScrollOnScrollingRoot();
                }
            };
            this.onScroll = throttle(onScroll, ScrollThrottleTime);
        }
        else {
            this.onScroll = null;
        }
    };
    /**
     * Returns the position of the anchor element
     */
    Overlay.prototype.getAnchorPosition = function () {
        var anchorClientRect = undefined;
        if (this.props.getAnchorClientRect) {
            anchorClientRect = this.props.getAnchorClientRect();
        }
        if (anchorClientRect === undefined) {
            // This will allow stacked elements to be placed locally if no anchor element is provided
            var anchorEl = this.props.anchorEl || ReactDOM.findDOMNode(this);
            anchorClientRect = anchorEl.getBoundingClientRect();
        }
        var left = anchorClientRect.left, top = anchorClientRect.top, right = anchorClientRect.right, bottom = anchorClientRect.bottom;
        return {
            top: top,
            centerY: top + (bottom - top) / 2,
            bottom: bottom,
            left: left,
            centerX: left + (right - left) / 2,
            right: right,
        };
    };
    /**
     * Returns the shape of the element that has been stacked in position coordinates. So the top left of the shape
     * is top: 0, left: 0, the right corner is top: 0, right: width, and so on.
     */
    Overlay.prototype.getStackedElCurrentShapeInPositionCoords = function () {
        var stackedEl = this.getStackedEl();
        return {
            top: 0,
            centerY: stackedEl.offsetHeight / 2,
            bottom: stackedEl.offsetHeight,
            left: 0,
            centerX: stackedEl.offsetWidth / 2,
            right: stackedEl.offsetWidth,
        };
    };
    /**
     * Returns the rectangle of the container
     */
    Overlay.prototype.getContainerRect = function () {
        return this.stackingWrapper.getStackingRoot().getBoundingClientRect();
    };
    /**
     * Sets the stacked element position
     */
    Overlay.prototype.setPlacement = function () {
        if (!this.stackingWrapper || !this.stackingWrapper.getMountPoint()) {
            return;
        }
        // TFSID 1083485: Some elements change their size when positioned absolutely.
        // In order to accurately set their position, we need to position them absolutely first.
        var stackedEl = this.getStackedEl();
        stackedEl.style.position = 'absolute';
        var stackedElAdjustedPosition = this.getStackedElAdjustedPosition();
        stackedEl.style.top = stackedElAdjustedPosition.top + "px";
        stackedEl.style.left = stackedElAdjustedPosition.left + "px";
        if (this.props.disablePointerEvents) {
            stackedEl.style.pointerEvents = 'none';
        }
    };
    /**
     * Gets the stacked element from stacking wrapper
     */
    Overlay.prototype.getStackedEl = function () {
        return this.stackingWrapper.getMountPoint().firstChild;
    };
    /**
     * Returns the Stacked Element position that has been autopositioned if necessary and adjusted to position
     * relative to the container
     */
    Overlay.prototype.getStackedElAdjustedPosition = function () {
        var viewportPosition = this.getDefaultStackedElViewportPosition();
        if (this.props.allowAutoPosition) {
            viewportPosition = this.getAutoPositionIfNeeded(viewportPosition);
        }
        return this.getAdjustStackedElPositionForContainer(viewportPosition);
    };
    /**
     * Returns the stacked element viewport position from the given and default origin option props
     */
    Overlay.prototype.getDefaultStackedElViewportPosition = function () {
        var stackedElPosition = this.getStackedElViewportPosition(this.props.anchorOrigin, this.props.stackedOrigin);
        if (!this.props.getAnchorClientRect) {
            stackedElPosition.top += (this.props.topFromOverlaidPosition || 0);
            stackedElPosition.left += (this.props.leftFromOverlaidPosition || 0);
        }
        return stackedElPosition;
    };
    /**
     * Adjusts the viewport position so that it can be absolutely positioned relative to the container
     */
    Overlay.prototype.getAdjustStackedElPositionForContainer = function (viewportPosition) {
        var containerRect = this.getContainerRect();
        var newPosition = {
            top: viewportPosition.top - containerRect.top,
            left: viewportPosition.left - containerRect.left
        };
        return newPosition;
    };
    /**
     * Using the given origins return the adjusted stacked element viewport position
     */
    Overlay.prototype.getStackedElViewportPosition = function (anchorOriginOptions, stackedElOriginOptions) {
        var anchorPosition = this.getAnchorPosition();
        var stackedElShape = this.getStackedElCurrentShapeInPositionCoords();
        // This gets the origin strings from the enum (eg 'top', 'left', etc)
        var anchorVerticalOriginOption = VerticalOriginOption[anchorOriginOptions.vertical];
        var anchorHorizontalOriginOption = HorizontalOriginOption[anchorOriginOptions.horizontal];
        var stackedElVerticalOriginOption = VerticalOriginOption[stackedElOriginOptions.vertical];
        var stackedElHorizontalOriginOption = HorizontalOriginOption[stackedElOriginOptions.horizontal];
        // This gets the top/left for the anchor/stackedEl origins,
        // similar to OriginPositionCoordinates.left, OriginPositionCoordinates.top, etc
        var anchorOriginTop = anchorPosition[anchorVerticalOriginOption];
        var anchorOriginLeft = anchorPosition[anchorHorizontalOriginOption];
        var stackedElOriginTop = stackedElShape[stackedElVerticalOriginOption];
        var stackedElOriginLeft = stackedElShape[stackedElHorizontalOriginOption];
        var adjustedStackedPosition = {
            top: anchorOriginTop - stackedElOriginTop,
            left: anchorOriginLeft - stackedElOriginLeft,
        };
        return adjustedStackedPosition;
    };
    /**
     * This will try to autoposition the stacked element if the stacked element will appear off screen.
     * It autopositions by using the opposite origin options and getting that viewport position
     *
     * Example:
     * Anchor is at the bottom right of the screen with the anchor origin as {top, right} and the stacked el origin as {top, left}
     * Detects that it's vertically offscreen and changes the anchor origin to {bottom, right} and stacked el origin as {bottom, left}
     * Method sees that it is now not below the screen and sets the adjusted top position
     * Detects that it's horizontally offscreen and changes the anchor origin to {top, left} and stacked el origin as {top, right}
     * Method sees that it is now not to the right of the screen and sets the adjusted left position
     */
    Overlay.prototype.getAutoPositionIfNeeded = function (adjustedStackedElPosition) {
        var stackedElShape = this.getStackedElCurrentShapeInPositionCoords();
        var oppositeOriginPosition = this.getOppositeOriginPosition();
        var layoutViewportSize = ViewportHelpers.getLayoutViewportSize();
        var isVerticallyOffscreen = adjustedStackedElPosition.top < 0 ||
            adjustedStackedElPosition.top + stackedElShape.bottom > layoutViewportSize.height;
        var isHorizontallyOffscreen = adjustedStackedElPosition.left < 0 ||
            adjustedStackedElPosition.left + stackedElShape.right > layoutViewportSize.width;
        if (isVerticallyOffscreen) {
            if (oppositeOriginPosition.top + stackedElShape.bottom <= layoutViewportSize.height) {
                adjustedStackedElPosition.top = Math.max(0, oppositeOriginPosition.top);
            }
            else if (stackedElShape.bottom <= layoutViewportSize.height) {
                adjustedStackedElPosition.top = Math.max(0, layoutViewportSize.height - stackedElShape.bottom);
            }
        }
        if (isHorizontallyOffscreen) {
            if (oppositeOriginPosition.left + stackedElShape.right <= layoutViewportSize.width) {
                adjustedStackedElPosition.left = Math.max(0, oppositeOriginPosition.left);
            }
            else if (stackedElShape.right <= layoutViewportSize.width) {
                adjustedStackedElPosition.left = Math.max(0, layoutViewportSize.width - stackedElShape.right);
            }
        }
        return adjustedStackedElPosition;
    };
    /**
     * Uses the opposite origins for the anchor and stacked element to return the viewport position
     */
    Overlay.prototype.getOppositeOriginPosition = function () {
        var oppositeAnchorOriginOptions = this.getOppositeOriginsOptions(this.props.anchorOrigin);
        var oppositeStackedElOriginOptions = this.getOppositeOriginsOptions(this.props.stackedOrigin);
        var stackedElPosition = this.getStackedElViewportPosition(oppositeAnchorOriginOptions, oppositeStackedElOriginOptions);
        if (!this.props.getAnchorClientRect) {
            stackedElPosition.top -= (this.props.topFromOverlaidPosition || 0);
            stackedElPosition.left -= (this.props.leftFromOverlaidPosition || 0);
        }
        return stackedElPosition;
    };
    /**
     * Returns the opposite origin options
     */
    Overlay.prototype.getOppositeOriginsOptions = function (originOptions) {
        return {
            horizontal: this.getOppositeHorizontalOption(originOptions.horizontal),
            vertical: this.getOppositeVerticalOption(originOptions.vertical)
        };
    };
    /**
     * Returns the opposite VerticalOriginOption, unless it is center.
     */
    Overlay.prototype.getOppositeVerticalOption = function (verticalOriginOption) {
        if (verticalOriginOption === VerticalOriginOption.centerY) {
            return VerticalOriginOption.centerY;
        }
        return verticalOriginOption === VerticalOriginOption.top ? VerticalOriginOption.bottom : VerticalOriginOption.top;
    };
    /**
     * Returns the opposite HorizontalOriginOption, unless it is center.
     */
    Overlay.prototype.getOppositeHorizontalOption = function (horizontalOriginOption) {
        if (horizontalOriginOption === HorizontalOriginOption.centerX) {
            return HorizontalOriginOption.centerX;
        }
        return horizontalOriginOption === HorizontalOriginOption.left ? HorizontalOriginOption.right : HorizontalOriginOption.left;
    };
    Overlay.prototype.render = function () {
        var wrapperId = this.props.stackingRootId ? this.props.stackingRootId + "-" : '';
        wrapperId = this.props.scrollingRootId ? "" + wrapperId + this.props.scrollingRootId + "-" : wrapperId;
        return React.createElement(StackingComponent_1.StackingComponentWrapper, { children: this.props.children, portalEventTrapOverrides: this.props.portalEventTrapOverrides, ref: this.setStackingWrapper, stackingRootId: this.props.stackingRootId, wrapperTestId: wrapperId + "Overlay", zIndex: this.props.zIndex });
    };
    Overlay.defaultProps = {
        anchorOrigin: {
            vertical: VerticalOriginOption.top,
            horizontal: HorizontalOriginOption.left
        },
        stackedOrigin: {
            vertical: VerticalOriginOption.top,
            horizontal: HorizontalOriginOption.left
        }
    };
    return Overlay;
}(React.Component));
exports.Overlay = Overlay;
Overlay.contextType = exports.ScrollingRootContext;


/***/ }),

/***/ "./lib/src/utils/PointerEventAdapter.js":
/*!**********************************************!*\
  !*** ./lib/src/utils/PointerEventAdapter.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/**
 * The default adapter does a direct mapping from pointer events to mouse event handlers. We can modify this to make
 * shared widgets more touch-friendly out of the box.
 */
var DefaultPointerEventAdapter = /** @class */ (function () {
    function DefaultPointerEventAdapter() {
    }
    // tslint:disable-next-line:max-line-length
    DefaultPointerEventAdapter.prototype.getHtmlAttributes = function (_a) {
        var disabled = _a.disabled, pointerClick = _a.pointerClick, pointerDoubleClick = _a.pointerDoubleClick, pointerDown = _a.pointerDown, pointerUp = _a.pointerUp;
        return tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, (pointerDoubleClick && { onDoubleClick: function (e) { if (!disabled) {
                pointerDoubleClick(e);
            } } })), (pointerDown && { onMouseDown: function (e) { if (!disabled) {
                pointerDown(e);
            } } })), (pointerUp && { onMouseUp: function (e) { if (!disabled) {
                pointerUp(e);
            } } })), (pointerClick && { onClick: function (e) { if (!disabled) {
                pointerClick(e);
            } } }));
    };
    return DefaultPointerEventAdapter;
}());
var PointerEventAdapterManager = /** @class */ (function () {
    function PointerEventAdapterManager() {
    }
    /**
     * Clients with custom pointer event systems should override the default factory
     */
    PointerEventAdapterManager.adapterFactory = function () { return new DefaultPointerEventAdapter(); };
    return PointerEventAdapterManager;
}());
exports.PointerEventAdapterManager = PointerEventAdapterManager;


/***/ }),

/***/ "./lib/src/utils/PointerEvents.js":
/*!****************************************!*\
  !*** ./lib/src/utils/PointerEvents.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var ReactDOM = __webpack_require__(/*! react-dom */ "react-dom");
var PointerEventAdapter_1 = __webpack_require__(/*! ./PointerEventAdapter */ "./lib/src/utils/PointerEventAdapter.js");
var ReactHelpers_1 = __webpack_require__(/*! ./ReactHelpers */ "./lib/src/utils/ReactHelpers.js");
/**
 * Wrap a DOM component to give it pointer events. Example that attaches a click to a div:
 *
 *    React.createElement(PointerEventWrapper, { pointerClick: () => console.log('click') },
 *      React.createElement('div')
 *    )
 *
 * When using, you can only have one child and it must render its props to a DOM component or events will not be attached.
 * If there is more than one child an exception will be thrown.
 */
var PointerEventWrapper = /** @class */ (function (_super) {
    tslib_1.__extends(PointerEventWrapper, _super);
    function PointerEventWrapper(props) {
        var _this = _super.call(this, props) || this;
        _this.pointerEventAdapter = PointerEventAdapter_1.PointerEventAdapterManager.adapterFactory();
        return _this;
    }
    PointerEventWrapper.prototype.componentDidMount = function () {
        var _a, _b;
        (_b = (_a = this.pointerEventAdapter).didMount) === null || _b === void 0 ? void 0 : _b.call(_a, ReactDOM.findDOMNode(this), this.props);
    };
    PointerEventWrapper.prototype.componentDidUpdate = function () {
        var _a, _b;
        (_b = (_a = this.pointerEventAdapter).didUpdate) === null || _b === void 0 ? void 0 : _b.call(_a, ReactDOM.findDOMNode(this), this.props);
    };
    PointerEventWrapper.prototype.componentWillUnmount = function () {
        if (this.pointerEventAdapter.willUnmount) {
            this.pointerEventAdapter.willUnmount();
        }
    };
    PointerEventWrapper.prototype.render = function () {
        var eventAttributes = this.pointerEventAdapter.getHtmlAttributes(this.props);
        // reuse the child. It could be anything - div, ul, button, etc.
        var child = React.Children.only(this.props.children);
        var mergedEventAttributes = {};
        Object.keys(eventAttributes).forEach(function (eventName) {
            mergedEventAttributes[eventName] = ReactHelpers_1.mergeEventHandlers(eventAttributes[eventName], child.props[eventName]);
        });
        var clonedElement = React.cloneElement(child, mergedEventAttributes);
        return clonedElement;
    };
    return PointerEventWrapper;
}(React.PureComponent));
exports.PointerEventWrapper = PointerEventWrapper;


/***/ }),

/***/ "./lib/src/utils/PortalEventTrap.js":
/*!******************************************!*\
  !*** ./lib/src/utils/PortalEventTrap.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var stop = function (e) { return e.stopPropagation(); };
var blockEverything = {
    // Clipboard Events
    onCopy: stop,
    onCut: stop,
    onPaste: stop,
    // Input Events
    onCompositionEnd: stop,
    onCompositionStart: stop,
    onCompositionUpdate: stop,
    onSelect: stop,
    // Mouse Events
    onAuxClick: stop,
    onClick: stop,
    onContextMenu: stop,
    onDoubleClick: stop,
    onDrag: stop,
    onDragEnd: stop,
    onDragEnter: stop,
    onDragExit: stop,
    onDragLeave: stop,
    onDragOver: stop,
    onDragStart: stop,
    onDrop: stop,
    onMouseDown: stop,
    onMouseEnter: stop,
    onMouseLeave: stop,
    onMouseMove: stop,
    onMouseOut: stop,
    onMouseOver: stop,
    onMouseUp: stop,
    // Key Events
    onKeyDown: stop,
    onKeyPress: stop,
    onKeyUp: stop,
    // Touch Events
    onTouchCancel: stop,
    onTouchEnd: stop,
    onTouchMove: stop,
    onTouchStart: stop,
    // Pointer Events
    onPointerDown: stop,
    onPointerMove: stop,
    onPointerUp: stop,
    onPointerCancel: stop,
    onPointerEnter: stop,
    onPointerLeave: stop,
    onPointerOver: stop,
    onPointerOut: stop,
    // Focus Events (they bubble in React!)
    // disabled for TFSID 739813 and 740525 onFocus: stop,
    onBlur: stop,
    // Form Events
    onBeforeInput: stop,
    onChange: stop,
    onInput: stop,
    onReset: stop,
    onSubmit: stop,
    // Wheel Events
    onWheel: stop,
    // Animation Events
    onAnimationStart: stop,
    onAnimationEnd: stop,
    onAnimationIteration: stop,
    onTransitionEnd: stop,
};
/** Prevents https://reactjs.org/docs/portals.html#event-bubbling-through-portals */
exports.PortalEventTrap = function (props) { return React.createElement("div", tslib_1.__assign({}, blockEverything, props, { "data-portal-trap": true })); };
exports.PortalEventTrap.displayName = 'PortalEventTrap';


/***/ }),

/***/ "./lib/src/utils/ReactHelpers.js":
/*!***************************************!*\
  !*** ./lib/src/utils/ReactHelpers.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var _a;
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
function isSFC(type) {
    return !type.prototype.render;
}
function convertToStatefulComponentClass(componentType) {
    var _a;
    if (isSFC(componentType)) {
        var statelessComponent_1 = componentType;
        return _a = /** @class */ (function (_super) {
                tslib_1.__extends(StatefulSFCWrapper, _super);
                function StatefulSFCWrapper() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                StatefulSFCWrapper.prototype.render = function () {
                    return statelessComponent_1(this.props);
                };
                return StatefulSFCWrapper;
            }(React.Component)),
            _a.displayName = getComponentName(statelessComponent_1),
            _a;
    }
    else {
        return componentType;
    }
}
exports.convertToStatefulComponentClass = convertToStatefulComponentClass;
function mergeEventHandlers(h1, h2) {
    return (h1 && h2 && function (e) { h1(e); h2(e); })
        || h1 || h2;
}
exports.mergeEventHandlers = mergeEventHandlers;
function isCallbackRef(ref) {
    return typeof ref === 'function';
}
exports.mergeRefs = function () {
    var refs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        refs[_i] = arguments[_i];
    }
    return function (value) {
        refs.forEach(function (resolvableRef) { return assignRef(resolvableRef, value); });
    };
};
function assignRef(ref, value) {
    if (isCallbackRef(ref)) {
        ref(value);
    }
    else if (!!ref) {
        ref.current = value;
    }
}
exports.assignRef = assignRef;
// tslint:disable-next-line:no-any
function getComponentName(componentType) {
    return componentType.displayName || componentType.name || 'AnonymousComponent';
}
exports.getComponentName = getComponentName;
/** Adding this prop tells VizClient's event-utils to completely ignore the element */
exports.EventUtilsOptOutAttr = 'data-eventutils-optout';
exports.EventUtilsOptOut = Object.freeze((_a = {},
    _a[exports.EventUtilsOptOutAttr] = true,
    _a));


/***/ }),

/***/ "./lib/src/utils/StackingComponent.js":
/*!********************************************!*\
  !*** ./lib/src/utils/StackingComponent.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var ReactDOM = __webpack_require__(/*! react-dom */ "react-dom");
var Declarative_1 = __webpack_require__(/*! ./Declarative */ "./lib/src/utils/Declarative.js");
var PortalEventTrap_1 = __webpack_require__(/*! ./PortalEventTrap */ "./lib/src/utils/PortalEventTrap.js");
var ReactHelpers_1 = __webpack_require__(/*! ./ReactHelpers */ "./lib/src/utils/ReactHelpers.js");
/**
 * The stacking root is the element container into which the mount point for Portals will be appended.
 */
exports.StackingRootContext = React.createContext(null);
exports.StackingRootContext.displayName = 'StackingRootContext';
function getStackingRootElement(stackingRootId, context) {
    var stackingRoot = document.getElementById(stackingRootId) || context || document.body;
    if (!stackingRoot) {
        throw new Error('Could not find stacking root.');
    }
    return stackingRoot;
}
var StackingComponentWrapper = /** @class */ (function (_super) {
    tslib_1.__extends(StackingComponentWrapper, _super);
    function StackingComponentWrapper(props, context) {
        var _this = _super.call(this, props) || this;
        // tslint:disable-next-line:deprecation
        var stackingRootId = props.stackingRootId;
        if (stackingRootId) {
            console.warn('`stackingRootId` is deprecated and no longer necessary for the vast majority of cases.');
        }
        _this.stackingRoot = getStackingRootElement(stackingRootId, context);
        /*
         * Create the mount point where the stacked element will be mounted and append it to the stacking root.  It should align
         * with the top/left of the stacking root as to align the positioning of stacked elements with the stacking root.  This prevents
         * cases where there are relatively positioned elements above the mount point, thus making the top of the mount point below the top
         * of the stacking root.
         */
        _this.mountPoint = document.createElement('div');
        _this.mountPoint.style.position = 'absolute';
        _this.mountPoint.style.top = '0';
        _this.mountPoint.style.left = '0';
        _this.updateMountPoint();
        return _this;
    }
    StackingComponentWrapper.prototype.componentDidMount = function () {
        this.stackingRoot.appendChild(this.mountPoint);
    };
    StackingComponentWrapper.prototype.componentDidUpdate = function (prevProps) {
        // tslint:disable-next-line:deprecation
        var _a = this.props, stackingRootId = _a.stackingRootId, wrapperTestId = _a.wrapperTestId, zIndex = _a.zIndex;
        var stackingRoot = getStackingRootElement(stackingRootId, this.context);
        if (stackingRoot !== this.stackingRoot) {
            this.stackingRoot = stackingRoot;
            this.stackingRoot.appendChild(this.mountPoint);
        }
        if (wrapperTestId !== prevProps.wrapperTestId || zIndex !== prevProps.zIndex) {
            this.updateMountPoint();
        }
    };
    StackingComponentWrapper.prototype.componentWillUnmount = function () {
        this.stackingRoot.removeChild(this.mountPoint);
    };
    StackingComponentWrapper.prototype.getMountPoint = function () {
        return this.mountPoint;
    };
    StackingComponentWrapper.prototype.getStackingRoot = function () {
        return this.stackingRoot;
    };
    StackingComponentWrapper.prototype.updateMountPoint = function () {
        this.mountPoint.style.zIndex = "" + this.props.zIndex;
        this.mountPoint.setAttribute('data-tb-test-id', Declarative_1.makeTestId(this.props.wrapperTestId, 'Root'));
    };
    StackingComponentWrapper.prototype.render = function () {
        return ReactDOM.createPortal(React.createElement(exports.StackingRootContext.Provider, { value: this.mountPoint },
            React.createElement(PortalEventTrap_1.PortalEventTrap, tslib_1.__assign({}, this.props.portalEventTrapOverrides, { children: this.props.children }))), this.mountPoint);
    };
    return StackingComponentWrapper;
}(React.Component));
exports.StackingComponentWrapper = StackingComponentWrapper;
StackingComponentWrapper.contextType = exports.StackingRootContext;
exports.StackingComponentHOC = function (componentType) {
    var componentClass = ReactHelpers_1.convertToStatefulComponentClass(componentType);
    var newComponentClass = /** @class */ (function (_super) {
        tslib_1.__extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.render = function () {
            return React.createElement(StackingComponentWrapper, tslib_1.__assign({}, this.props, { children: _super.prototype.render.call(this) }));
        };
        return class_1;
    }(componentClass));
    newComponentClass.displayName = "StackingComponentHOC(" + ReactHelpers_1.getComponentName(componentType) + ")";
    return newComponentClass;
};


/***/ }),

/***/ "./lib/src/utils/StackingComponentHost.js":
/*!************************************************!*\
  !*** ./lib/src/utils/StackingComponentHost.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ReactDOM = __webpack_require__(/*! react-dom */ "react-dom");
/**
 * The HostedStackedElementContainer allows clients to instantiate stacked elements from contexts
 * outside of a React component, allowing that stacked element to outlive its parent.
 *
 * The container can be reused; once the element is removed, another element can be passed in to
 * render. However, each container can hold only one stacked element at a time.
 *
 * The element passed to the container must involve the StackingComponent, otherwise it will not be
 * visibly rendered in the document.
 *
 * A common use case is a dialog box triggered from a menu; the menu action instantiates a container
 * and uses it to invoke the dialog. The container continues to live in memory even after the menu
 * item closes, providing a way for the dialog to be closed:
 *
 *   const container = new HostedStackedElementContainer();
 *   const dialogProps = {
 *     onCloseRequest: () => container.remove()
 *   };
 *   const dialogElement = el(DialogWidget, dialogProps);
 *   container.render(dialogElement);
 *
 * This component is not necessary when the parent component will outlive the stacked component; in
 * that case, the parent can simply render the stacked component as one of its children and remove
 * it when it should no longer be displayed.
 */
var HostedStackedElementContainer = /** @class */ (function () {
    function HostedStackedElementContainer() {
        var _this = this;
        this.internalEncapsulatedIsShown = false;
        /**
         * Renders the given stacked element into the document, hosted by this container
         */
        this.render = function (stackedReactElement) {
            if (_this.internalEncapsulatedIsShown) {
                throw new Error('Cannot render the element; it is already shown');
            }
            _this.anchor = document.createElement('div');
            ReactDOM.render(stackedReactElement, _this.anchor);
            _this.internalEncapsulatedIsShown = true;
        };
        /**
         * Removes the hosted element from the document
         */
        this.remove = function () {
            if (_this.internalEncapsulatedIsShown) {
                ReactDOM.unmountComponentAtNode(_this.anchor);
                _this.anchor = null;
            }
            _this.internalEncapsulatedIsShown = false;
        };
        this.isShown = function () {
            return _this.internalEncapsulatedIsShown;
        };
    }
    return HostedStackedElementContainer;
}());
exports.HostedStackedElementContainer = HostedStackedElementContainer;


/***/ }),

/***/ "./lib/src/utils/Unicode.js":
/*!**********************************!*\
  !*** ./lib/src/utils/Unicode.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Unicode = {
    NonBreakingSpace: '\u00a0',
    ZeroWidthSpace: '\u200b',
};


/***/ }),

/***/ "./lib/src/utils/UserInteraction.js":
/*!******************************************!*\
  !*** ./lib/src/utils/UserInteraction.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// tslint:disable-next-line:no-any
function isMouseEvent(event) {
    var e = event;
    return typeof e.clientX === 'number';
}
exports.isMouseEvent = isMouseEvent;
// tslint:disable-next-line:no-any
function isTouchEvent(event) {
    var e = event;
    return !!e.touches;
}
exports.isTouchEvent = isTouchEvent;
/**
 * Gets the client position from either the mouse event or the first touch from a touch event
 */
// tslint:disable-next-line:no-any
function getClientPosition(event) {
    if (isMouseEvent(event)) {
        return { x: event.clientX, y: event.clientY };
    }
    if (isTouchEvent(event)) {
        return { x: event.touches[0].clientX, y: event.touches[0].clientY };
    }
    throw Error('Could not identify event as either MouseEvent or TouchEvent');
}
exports.getClientPosition = getClientPosition;


/***/ }),

/***/ "./lib/src/utils/ViewportConstrainedDom.js":
/*!*************************************************!*\
  !*** ./lib/src/utils/ViewportConstrainedDom.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var react_1 = __webpack_require__(/*! react */ "react");
var Declarative_1 = __webpack_require__(/*! ./Declarative */ "./lib/src/utils/Declarative.js");
var ViewportHelpers = __webpack_require__(/*! ./ViewportHelpers */ "./lib/src/utils/ViewportHelpers.js");
/**
 * Wraps a component in a container that will size intelligently to its contents and the viewport. The size constraints
 * are determined once when the component is constructed and need to be manually updated with updateSize().
 *
 * The default behavior is to allow its children to determine the container size, but when
 * (a) zoomed out, restrict the container size to be less than the visual viewport size or
 * (b) zoomed in/no zoom, restrict the container size to be less than the page's initial containing block
 */
var ViewportConstrainedDomWrapper = /** @class */ (function (_super) {
    tslib_1.__extends(ViewportConstrainedDomWrapper, _super);
    function ViewportConstrainedDomWrapper(props) {
        var _this = _super.call(this, props) || this;
        _this.state = _this.getStateForCurrentViewport();
        return _this;
    }
    ViewportConstrainedDomWrapper.prototype.getStateForCurrentViewport = function () {
        var visualViewport = ViewportHelpers.getVisualViewport();
        return {
            visualViewportSize: {
                width: visualViewport.width,
                height: visualViewport.height
            },
            layoutViewportSize: ViewportHelpers.getLayoutViewportSize()
        };
    };
    ViewportConstrainedDomWrapper.prototype.getMaxSize = function () {
        /**
         * Generally we want the element to be no larger than the visual viewport.
         * But when zoomed in, the contents may get squished as a result if we limit the size purely on the visual viewport.
         * If a min-width/min-height value is set on the wrapper we assume that this case has been handled, otherwise we
         * set a floor value on max-width/max-height.
         */
        var baseMaxSize = { width: this.state.visualViewportSize.width, height: this.state.visualViewportSize.height };
        var isMinWidthSpecified = this.props.style && this.props.style.minWidth;
        if (!isMinWidthSpecified) {
            baseMaxSize.width = Math.max(baseMaxSize.width, this.state.layoutViewportSize.width);
        }
        var isMinHeightSpecified = this.props.style && this.props.style.minHeight;
        if (!isMinHeightSpecified) {
            baseMaxSize.height = Math.max(baseMaxSize.height, this.state.layoutViewportSize.height);
        }
        if (this.props.horizontalMargins) {
            baseMaxSize.width -= this.props.horizontalMargins;
        }
        if (this.props.verticalMargins) {
            baseMaxSize.height -= this.props.verticalMargins;
        }
        return baseMaxSize;
    };
    /**
     * Updates size so that the size constraints reflect the current viewport size. Triggers a re-render.
     */
    ViewportConstrainedDomWrapper.prototype.updateSize = function () {
        this.setState(this.getStateForCurrentViewport());
    };
    ViewportConstrainedDomWrapper.prototype.render = function () {
        var maxSize = this.getMaxSize();
        var divProps = {
            style: tslib_1.__assign(tslib_1.__assign({ maxWidth: maxSize.width, maxHeight: maxSize.height }, this.props.style), Declarative_1.conditional(this.props.isMaximized, { width: maxSize.width, height: maxSize.height })),
            'data-tb-test-id': this.props.testId
        };
        return react_1.createElement('div', divProps, this.props.children);
    };
    return ViewportConstrainedDomWrapper;
}(React.Component));
exports.ViewportConstrainedDomWrapper = ViewportConstrainedDomWrapper;


/***/ }),

/***/ "./lib/src/utils/ViewportHelpers.js":
/*!******************************************!*\
  !*** ./lib/src/utils/ViewportHelpers.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Geometry = __webpack_require__(/*! ./Geometry */ "./lib/src/utils/Geometry.js");
// TFSID 1162647: We want to use `window.top` whenever possible, but cross-origin frame sandboxing can prevent that
// TFSID 1192035: This broke more than it fixed, so temporarily reverting for now until we can figure out how to differentiate the cases
// export const topWindow: Window = function crossFrameSafeWindowGetter(): Window {
//   try {
//     if (window.top.innerWidth || true) {
//       return window.top;
//     }
//   } catch {
//     return window;
//   }
// }();
/**
 * Returns the element position relative to the origin of the layout viewport.
 */
function getElementPositionRelativeToLayoutViewport(element) {
    return element.getBoundingClientRect();
}
exports.getElementPositionRelativeToLayoutViewport = getElementPositionRelativeToLayoutViewport;
/**
 * Returns the position of the layout viewport relative to the origin of the page.
 */
function getLayoutViewportPositionRelativeToPage() {
    var documentClientRect = document.documentElement.getBoundingClientRect();
    return { top: -documentClientRect.top, left: -documentClientRect.left };
}
exports.getLayoutViewportPositionRelativeToPage = getLayoutViewportPositionRelativeToPage;
/**
 * Returns the size of the layout viewport.
 */
function getLayoutViewportSize() {
    return { width: document.documentElement.clientWidth, height: document.documentElement.clientHeight };
}
exports.getLayoutViewportSize = getLayoutViewportSize;
/**
 * Returns the rectangle representing the visual viewport in the layout viewport's coordinate system.
 * For browsers that do not support the visual viewport API, the rectangle will include the space taken
 * by scroll bars if present.
 */
function getVisualViewportRectRelativeToLayoutViewport() {
    var visualViewport = getVisualViewport();
    var pos = {
        left: visualViewport.offsetLeft,
        top: visualViewport.offsetTop
    };
    var size = {
        width: visualViewport.width,
        height: visualViewport.height
    };
    return Geometry.makeClientRect(pos, size);
}
exports.getVisualViewportRectRelativeToLayoutViewport = getVisualViewportRectRelativeToLayoutViewport;
var VisualViewportPolyfill = /** @class */ (function () {
    function VisualViewportPolyfill() {
    }
    Object.defineProperty(VisualViewportPolyfill.prototype, "offsetLeft", {
        get: function () {
            var layoutPosInPageCoords = getLayoutViewportPositionRelativeToPage();
            return window.pageXOffset - layoutPosInPageCoords.left;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VisualViewportPolyfill.prototype, "offsetTop", {
        get: function () {
            var layoutPosInPageCoords = getLayoutViewportPositionRelativeToPage();
            return window.pageYOffset - layoutPosInPageCoords.top;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VisualViewportPolyfill.prototype, "pageLeft", {
        get: function () {
            return window.pageXOffset;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VisualViewportPolyfill.prototype, "pageTop", {
        get: function () {
            return window.pageYOffset;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VisualViewportPolyfill.prototype, "width", {
        // This polyfill doesn't work perfectly -- it will include the space taken by scroll bars if present
        get: function () {
            return window.innerWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VisualViewportPolyfill.prototype, "height", {
        // This polyfill doesn't work perfectly -- it will include the space taken by scroll bars if present
        get: function () {
            return window.innerHeight;
        },
        enumerable: true,
        configurable: true
    });
    return VisualViewportPolyfill;
}());
/**
 * Returns Window.visualViewport if the API is available, otherwise returns our polyfill.
 * Note that this only exposes the portion of the Visual Viewport API that we have polyfilled.
 * See https://github.com/WICG/ViewportAPI for details on the Visual Viewport API.
 */
function getVisualViewport() {
    // tslint:disable-next-line:no-any
    return ('visualViewport' in window) ? window.visualViewport : new VisualViewportPolyfill();
}
exports.getVisualViewport = getVisualViewport;


/***/ }),

/***/ "./lib/src/widgets/ActivitySpinnerWidget.js":
/*!**************************************************!*\
  !*** ./lib/src/widgets/ActivitySpinnerWidget.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tableau_ui_1 = __webpack_require__(/*! @tableau/tableau-ui */ "./node_modules/@tableau/tableau-ui/dist/tableau-ui.min.js");
var React = __webpack_require__(/*! react */ "react");
var Localize_1 = __webpack_require__(/*! ../../gen-src/Localize */ "./lib/gen-src/Localize.js");
var Declarative_1 = __webpack_require__(/*! ../utils/Declarative */ "./lib/src/utils/Declarative.js");
var ActivitySpinnerSize;
(function (ActivitySpinnerSize) {
    ActivitySpinnerSize[ActivitySpinnerSize["Large"] = 50] = "Large";
    ActivitySpinnerSize[ActivitySpinnerSize["Small"] = 14] = "Small";
})(ActivitySpinnerSize = exports.ActivitySpinnerSize || (exports.ActivitySpinnerSize = {}));
/**
 * An inline activity spinner.
 *
 * NOTE: A DOM ancestor of the ActivitySpinnerWidget should have `aria-busy=true`
 */
exports.ActivitySpinnerWidget = React.forwardRef(function (props, ref) {
    return React.createElement(tableau_ui_1.Spinner, { alt: Localize_1.Messages.waitIndicatorLabel(), color: props.onDarkBackground ? 'light' : 'dark', "data-tb-test-id": Declarative_1.makeTestId(props.testId, 'Spinner'), dimension: props.spinnerSize, ref: ref, role: 'img', showUnderlay: props.shouldShowUnderlay });
});
exports.ActivitySpinnerWidget.defaultProps = { spinnerSize: ActivitySpinnerSize.Large };
exports.ActivitySpinnerWidget.displayName = 'ActivitySpinnerWidget';


/***/ }),

/***/ "./lib/src/widgets/Button/AutoResetButtonWidget.js":
/*!*********************************************************!*\
  !*** ./lib/src/widgets/Button/AutoResetButtonWidget.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var SharedWidgets_1 = __webpack_require__(/*! ../../SharedWidgets */ "./lib/src/SharedWidgets.js");
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var DelayStyleOverrides = Object.freeze({
    backgroundColor: TabStyles_1.TabStyles.Colors.L8,
    borderColor: TabStyles_1.TabStyles.Colors.L8,
    color: TabStyles_1.TabStyles.Colors.White
});
var AutoResetButton = /** @class */ (function (_super) {
    tslib_1.__extends(AutoResetButton, _super);
    function AutoResetButton() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = { label: undefined };
        _this.timeoutId = undefined;
        _this.handleClick = function (e) {
            var _a, _b;
            _this.setState({ label: _this.props.delayLabel });
            _this.timeoutId = window.setTimeout(_this.handleReset, _this.props.delay);
            // tslint:disable-next-line:deprecation
            (_b = (_a = _this.props).handleClick) === null || _b === void 0 ? void 0 : _b.call(_a, e);
        };
        _this.handleReset = function () {
            _this.timeoutId = undefined;
            _this.setState({ label: undefined });
            _this.props.handleReset();
        };
        return _this;
    }
    AutoResetButton.prototype.componentWillUnmount = function () {
        window.clearTimeout(this.timeoutId);
    };
    AutoResetButton.prototype.render = function () {
        // tslint:disable-next-line:max-line-length deprecation
        var _a = this.props, children = _a.children, delay = _a.delay, delayLabel = _a.delayLabel, handleClick = _a.handleClick, handleReset = _a.handleReset, label = _a.label, onKeyDown = _a.onKeyDown, onKeyPress = _a.onKeyPress, onKeyUp = _a.onKeyUp, onMouseDown = _a.onMouseDown, onMouseUp = _a.onMouseUp, style = _a.style, rest = tslib_1.__rest(_a, ["children", "delay", "delayLabel", "handleClick", "handleReset", "label", "onKeyDown", "onKeyPress", "onKeyUp", "onMouseDown", "onMouseUp", "style"]);
        var interactiveEvents = { onClick: this.handleClick, onKeyDown: onKeyDown, onKeyPress: onKeyPress, onKeyUp: onKeyUp, onMouseDown: onMouseDown, onMouseUp: onMouseUp };
        var isPushed = !!this.state.label;
        return (React.createElement(SharedWidgets_1.ButtonWidget, tslib_1.__assign({}, rest, (!isPushed && interactiveEvents), { "aria-disabled": rest.disabled || isPushed, "aria-live": 'assertive' // aria-live tells AT to re-announce the button when the text changes (i.e. after it gets clicked)
            , style: tslib_1.__assign(tslib_1.__assign({}, style), (isPushed && DelayStyleOverrides)) }),
            this.state.label || label,
            children));
    };
    AutoResetButton.defaultProps = { delay: 5000 };
    return AutoResetButton;
}(React.PureComponent));
exports.AutoResetButton = AutoResetButton;


/***/ }),

/***/ "./lib/src/widgets/Button/ButtonWidget.js":
/*!************************************************!*\
  !*** ./lib/src/widgets/Button/ButtonWidget.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ButtonType;
(function (ButtonType) {
    ButtonType[ButtonType["Destructive"] = 0] = "Destructive";
    /** @deprecated use `Destructive` */ ButtonType[ButtonType["Attention"] = 0] = "Attention";
    /** @deprecated use `Destructive` */ ButtonType[ButtonType["OutlineAttention"] = 6] = "OutlineAttention";
    ButtonType[ButtonType["Primary"] = 2] = "Primary";
    /** @deprecated use `Primary` */ ButtonType[ButtonType["Go"] = 2] = "Go";
    /** @deprecated use `Primary` */ ButtonType[ButtonType["OutlineGo"] = 5] = "OutlineGo";
    ButtonType[ButtonType["Outline"] = 3] = "Outline";
    /** @deprecated use `Outline` */ ButtonType[ButtonType["Grey"] = 1] = "Grey";
    ButtonType[ButtonType["OutlineDark"] = 4] = "OutlineDark";
    /** @deprecated use `OutlineDark` */ ButtonType[ButtonType["LightOutline"] = 4] = "LightOutline";
    ButtonType[ButtonType["LowEmphasis"] = 9] = "LowEmphasis";
    /** @deprecated use `LowEmphasis` */ ButtonType[ButtonType["Text"] = 7] = "Text";
    /** @deprecated use `LowEmphasis` */ ButtonType[ButtonType["DarkText"] = 8] = "DarkText";
    /** @deprecated use `LowEmphasis` */ ButtonType[ButtonType["DarkBoldText"] = 9] = "DarkBoldText";
    ButtonType[ButtonType["Icon"] = 10] = "Icon";
    ButtonType[ButtonType["IconOutline"] = 11] = "IconOutline";
})(ButtonType = exports.ButtonType || (exports.ButtonType = {}));


/***/ }),

/***/ "./lib/src/widgets/Button/ButtonWidgetShim.js":
/*!****************************************************!*\
  !*** ./lib/src/widgets/Button/ButtonWidgetShim.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var TableauUI = __webpack_require__(/*! @tableau/tableau-ui */ "./node_modules/@tableau/tableau-ui/dist/tableau-ui.min.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var InteractiveDom_1 = __webpack_require__(/*! ../../utils/InteractiveDom */ "./lib/src/utils/InteractiveDom.js");
var ReactHelpers_1 = __webpack_require__(/*! ../../utils/ReactHelpers */ "./lib/src/utils/ReactHelpers.js");
var ButtonWidget_1 = __webpack_require__(/*! ./ButtonWidget */ "./lib/src/widgets/Button/ButtonWidget.js");
exports.ButtonType = ButtonWidget_1.ButtonType;
// tslint:disable:deprecation
var ButtonKindMap = Object.freeze((_a = {},
    _a[ButtonWidget_1.ButtonType.Destructive] = 'destructive',
    _a[ButtonWidget_1.ButtonType.Attention] = 'destructive',
    _a[ButtonWidget_1.ButtonType.Grey] = 'outline',
    _a[ButtonWidget_1.ButtonType.Primary] = 'primary',
    _a[ButtonWidget_1.ButtonType.Go] = 'primary',
    _a[ButtonWidget_1.ButtonType.Outline] = 'outline',
    _a[ButtonWidget_1.ButtonType.OutlineDark] = 'outlineDark',
    _a[ButtonWidget_1.ButtonType.LightOutline] = 'outlineDark',
    _a[ButtonWidget_1.ButtonType.OutlineGo] = 'primary',
    _a[ButtonWidget_1.ButtonType.OutlineAttention] = 'destructive',
    _a[ButtonWidget_1.ButtonType.Text] = 'lowEmphasis',
    _a[ButtonWidget_1.ButtonType.DarkText] = 'lowEmphasis',
    _a[ButtonWidget_1.ButtonType.DarkBoldText] = 'lowEmphasis',
    _a[ButtonWidget_1.ButtonType.Icon] = 'outline',
    _a[ButtonWidget_1.ButtonType.IconOutline] = 'outline',
    _a));
// tslint:enable:deprecation
// Once Icon buttons are first-class button kinds in Tableau UI, can delete from here...
var IconButtonStyle = Object.freeze({
    alignItems: 'center',
    borderColor: 'transparent',
    boxSizing: 'border-box',
    color: TabStyles_1.TabStyles.Typography.Color.PrimaryLight,
    display: 'inline-flex',
    fontWeight: 'normal',
    height: 'auto',
    justifyContent: 'center',
    minHeight: 20,
    minWidth: 20,
    padding: 0,
    whiteSpace: 'nowrap',
});
var ButtonStyleOverrides = Object.freeze((_b = {},
    _b[ButtonWidget_1.ButtonType.Icon] = TypeStyle.style(tslib_1.__assign(tslib_1.__assign({}, IconButtonStyle), { $nest: {
            '&:hover:enabled, &:focus': { backgroundColor: TabStyles_1.TabStyles.Colors.F3, color: TabStyles_1.TabStyles.Typography.Color.Primary },
            '&&&:active': { backgroundColor: TabStyles_1.TabStyles.Colors.F5, color: TabStyles_1.TabStyles.Typography.Color.Primary },
            '&:disabled': { borderColor: 'transparent !important', opacity: TabStyles_1.TabStyles.Opacity.Disabled },
        } })),
    _b[ButtonWidget_1.ButtonType.IconOutline] = TypeStyle.style(tslib_1.__assign(tslib_1.__assign({}, IconButtonStyle), { border: 'none', position: 'relative', $nest: {
            '&:hover:enabled, &:focus, &&&:active': { backgroundColor: 'transparent' },
            '&:focus::after': {
                content: "\"\"",
                position: 'absolute',
                left: 0,
                top: 0,
                bottom: 0,
                right: 0,
                border: "1px solid " + TabStyles_1.TabStyles.Colors.Focus,
                borderRadius: 2,
                pointerEvents: 'none',
            },
            '&:disabled': { borderColor: 'transparent !important', opacity: TabStyles_1.TabStyles.Opacity.Disabled },
        } })),
    _b));
// ...to here
var ButtonWidget = /** @class */ (function (_super) {
    tslib_1.__extends(ButtonWidget, _super);
    function ButtonWidget() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = { active: false, focus: false, hover: false };
        _this.handleActive = function (active) { return _this.setState({ active: active }); };
        _this.handleFocus = function (focus) { return _this.setState({ focus: focus }); };
        _this.handleHover = function (hover) { return _this.setState({ hover: hover }); };
        // tslint:disable:deprecation
        _this.handleClick = function (e) {
            if (_this.props.disabled) {
                return;
            }
            else if (_this.props.handleClick) {
                _this.props.handleClick(e);
            }
            else if (_this.props.onClick) {
                _this.props.onClick(e);
            }
        };
        return _this;
    }
    ButtonWidget.getDerivedStateFromProps = function (props) {
        if (props.disabled) {
            return { active: false, focus: false, hover: false };
        }
        return null;
    };
    // tslint:enable:deprecation
    ButtonWidget.prototype.render = function () {
        // tslint:disable-next-line:max-line-length deprecation
        var _a = this.props, buttonRef = _a.buttonRef, buttonType = _a.buttonType, children = _a.children, className = _a.className, density = _a.density, disabled = _a.disabled, disableTabAccessibility = _a.disableTabAccessibility, getContent = _a.getContent, handleClick = _a.handleClick, interactiveStyle = _a.interactiveStyle, onClick = _a.onClick, onDoubleClick = _a.onDoubleClick, onMouseDown = _a.onMouseDown, onMouseUp = _a.onMouseUp, role = _a.role, selected = _a.selected, style = _a.style, tabIndex = _a.tabIndex, testId = _a.testId, title = _a.title, rest = tslib_1.__rest(_a, ["buttonRef", "buttonType", "children", "className", "density", "disabled", "disableTabAccessibility", "getContent", "handleClick", "interactiveStyle", "onClick", "onDoubleClick", "onMouseDown", "onMouseUp", "role", "selected", "style", "tabIndex", "testId", "title"]);
        var button = React.createElement(TableauUI.Button, tslib_1.__assign({ "aria-checked": role === 'radio' ? selected : undefined, "aria-pressed": role === 'radio' ? undefined : selected, "data-tb-test-id": Declarative_1.makeTestId(testId, 'Button') }, rest, { children: getContent ? getContent(tslib_1.__assign(tslib_1.__assign({}, this.state), { disabled: disabled, selected: selected })) : children, className: TypeStyle.classes(ButtonStyleOverrides[buttonType], className), density: density, disabled: disabled, kind: ButtonKindMap[buttonType], ref: buttonRef, role: role, style: style, tabIndex: disabled ? undefined : (this.props.disableTabAccessibility ? -1 : (tabIndex || 0)), title: title }));
        var buttonWithNativeHandlers = React.cloneElement(button, tslib_1.__assign(tslib_1.__assign({}, ReactHelpers_1.EventUtilsOptOut), { onClick: this.handleClick, onDoubleClick: onDoubleClick,
            onMouseDown: onMouseDown,
            onMouseUp: onMouseUp }));
        if (getContent) {
            return React.createElement(InteractiveDom_1.InteractiveDomWrapper, { children: buttonWithNativeHandlers, disabled: disabled, handleActive: this.handleActive, handleFocus: this.handleFocus, handleHover: this.handleHover, interactiveStyles: interactiveStyle });
        }
        else {
            return buttonWithNativeHandlers;
        }
    };
    ButtonWidget.defaultProps = { buttonType: ButtonWidget_1.ButtonType.Outline, density: 'low' };
    return ButtonWidget;
}(React.Component));
exports.ButtonWidget = ButtonWidget;


/***/ }),

/***/ "./lib/src/widgets/Button/CloseButtonWidget.js":
/*!*****************************************************!*\
  !*** ./lib/src/widgets/Button/CloseButtonWidget.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var Localize_1 = __webpack_require__(/*! ../../../gen-src/Localize */ "./lib/gen-src/Localize.js");
var Icons_1 = __webpack_require__(/*! ../../icons/Icons */ "./lib/src/icons/Icons.js");
var SharedWidgets_1 = __webpack_require__(/*! ../../SharedWidgets */ "./lib/src/SharedWidgets.js");
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var PointerEvents_1 = __webpack_require__(/*! ../../utils/PointerEvents */ "./lib/src/utils/PointerEvents.js");
// tslint:disable:max-line-length
var CloseButtonSvg = function (fillColor) {
    if (fillColor === void 0) { fillColor = '#666'; }
    return "<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"$state$\" width=\"14\" height=\"14\">\n<path fill=\"" + fillColor + "\" d=\"M7.7 7l4.7-4.7c.2-.2.2-.5 0-.7s-.5-.2-.7 0L7 6.3 2.3 1.6c-.2-.2-.5-.2-.7 0s-.2.5 0 .7L6.3 7l-4.7 4.7c-.2.2-.2.5 0 .7s.5.2.7 0L7 7.7l4.7 4.7c.2.2.5.2.7 0s.2-.5 0-.7L7.7 7z\"/>\n</svg>";
};
// tslint:enable:max-line-length
var CloseButtonStyleName = TypeStyle.style({
    $nest: {
        '&&': { minHeight: 18, minWidth: 18, height: 18, width: 18 },
        '&::before': {
            content: "url(" + Icons_1.encodeSvg(CloseButtonSvg('#666')) + ")",
            display: 'inline-block',
            height: 14,
            width: 14,
        },
        '&:active::before, &:hover::before': {
            content: "url(" + Icons_1.encodeSvg(CloseButtonSvg('#333')) + ")",
        },
        '&.prominent::before': {
            content: "url(" + Icons_1.encodeSvg(CloseButtonSvg('#333')) + ")",
        },
        '&.prominent:active::before, &.prominent:hover::before': {
            content: "url(" + Icons_1.encodeSvg(CloseButtonSvg('#000')) + ")",
        },
        '&.dark::before': {
            content: "url(" + Icons_1.encodeSvg(CloseButtonSvg('#fff')) + ") !important",
        }
    }
});
exports.CloseButtonWidget = React.forwardRef(function (props, ref) {
    var useDarkStyling = props.useDarkStyling, buttonProps = tslib_1.__rest(props, ["useDarkStyling"]);
    return React.createElement(SharedWidgets_1.ButtonWidget, tslib_1.__assign({}, buttonProps, { buttonType: SharedWidgets_1.ButtonType.IconOutline, className: TypeStyle.classes(props.className, CloseButtonStyleName, useDarkStyling && 'dark'), ref: ref, title: props.title || Localize_1.Messages.close() }));
});
exports.CloseButtonWidget.displayName = 'CloseButtonWidget';
var TapTargetStyleName = TypeStyle.style({
    alignItems: 'center',
    backgroundClip: 'content-box',
    boxSizing: 'border-box',
    cursor: 'auto',
    display: 'flex',
    flexShrink: 0,
    height: 30,
    justifyContent: 'center',
    outline: 'none',
    padding: 6,
    width: 30,
    $nest: {
        '&:hover': { backgroundColor: TabStyles_1.TabStyles.Colors.F3 },
        '&:hover>button::before': {
            content: "url(" + Icons_1.encodeSvg(CloseButtonSvg('#333')) + ")",
        },
        // hacks to hide the focus indicator for mouse
        '& > button:active': { boxShadow: 'none !important' },
        '& > button:active::after': { display: 'none !important' },
    }
});
exports.DialogCloseButtonWidget = React.forwardRef(function (props, ref) {
    return React.createElement(PointerEvents_1.PointerEventWrapper, { pointerClick: props.onClick },
        React.createElement("div", { className: TypeStyle.classes(TapTargetStyleName), ref: ref },
            React.createElement(exports.CloseButtonWidget, tslib_1.__assign({}, props, { "data-tb-test-id": Declarative_1.makeTestId(props.testId, 'CloseButton'), onClick: function (e) { var _a, _b; e.stopPropagation(); (_b = (_a = props).onClick) === null || _b === void 0 ? void 0 : _b.call(_a, e); }, testId: null }))));
});
exports.DialogCloseButtonWidget.displayName = 'DialogCloseButtonWidget';


/***/ }),

/***/ "./lib/src/widgets/Button/MenuButtonWidget.js":
/*!****************************************************!*\
  !*** ./lib/src/widgets/Button/MenuButtonWidget.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var TableauUI = __webpack_require__(/*! @tableau/tableau-ui */ "./node_modules/@tableau/tableau-ui/dist/tableau-ui.min.js");
var React = __webpack_require__(/*! react */ "react");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var ReactHelpers_1 = __webpack_require__(/*! ../../utils/ReactHelpers */ "./lib/src/utils/ReactHelpers.js");
/**
 * An Outline-style button with an arrow indicating the availability of a popup menu, along with WAI-ARIA attributes
 * as specified at https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton.
 *
 * The display of e.g. a dropdown menu is intentionally left to the code consuming the widget.
 */
exports.MenuButtonWidget = React.forwardRef(function (props, ref) {
    var isOpen = props.isOpen, testId = props.testId, buttonProps = tslib_1.__rest(props, ["isOpen", "testId"]);
    return (React.createElement(TableauUI.Button, tslib_1.__assign({}, ReactHelpers_1.EventUtilsOptOut, { "aria-haspopup": 'menu', kind: 'outline' }, buttonProps, { "aria-controls": isOpen ? buttonProps['aria-controls'] : undefined, "aria-expanded": isOpen, "data-tb-test-id": Declarative_1.makeTestId(testId, 'MenuButton'), onKeyDown: function (e) {
            if (e.key === 'ArrowDown' && props.onClick) {
                e.preventDefault();
                props.onClick(e);
            }
            if (props.onKeyDown) {
                props.onKeyDown(e);
            }
        }, ref: ref })));
});
exports.MenuButtonWidget.displayName = 'MenuButtonWidget';
exports.MenuButtonWidget.defaultProps = { 'aria-haspopup': 'menu', density: 'high' };


/***/ }),

/***/ "./lib/src/widgets/Button/SplitButtonWidget.js":
/*!*****************************************************!*\
  !*** ./lib/src/widgets/Button/SplitButtonWidget.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var SharedWidgets_1 = __webpack_require__(/*! ../../SharedWidgets */ "./lib/src/SharedWidgets.js");
var ButtonStyleName = TypeStyle.style({
    borderTopRightRadius: 0,
    borderBottomRightRadius: 0,
    marginRight: "0 !important",
    position: 'relative',
    $nest: {
        '&::after': {
            background: 'currentColor',
            bottom: -1,
            content: "\"\"",
            position: 'absolute',
            right: -1,
            top: -1,
            width: 1,
        }
    }
});
var MenuButtonStyleName = TypeStyle.style({
    borderBottomLeftRadius: 0,
    borderLeft: 'none',
    borderTopLeftRadius: 0,
    marginLeft: "0 !important",
    minWidth: "24px !important",
    padding: "0 5px !important",
    $nest: {
        '&:empty::after': {
            marginLeft: -6,
            marginRight: -6,
        }
    }
});
exports.SplitButtonWidget = function (props) {
    if (!(props.menuButton.props['aria-label'] || props.menuButton.props['aria-labelledby'])) {
        throw new Error('aria-label or aria-labelledby must be set on `menuButton` props.');
    }
    return React.createElement("div", { style: { display: 'inline-flex', whiteSpace: 'nowrap' } },
        React.cloneElement(props.button, {
            buttonType: SharedWidgets_1.ButtonType.Primary,
            className: TypeStyle.classes(props.button.props.className, ButtonStyleName),
            density: props.button.props.density || 'medium',
        }),
        React.cloneElement(props.menuButton, {
            kind: 'primary',
            className: TypeStyle.classes(props.menuButton.props.className, MenuButtonStyleName),
            density: 'high',
        }));
};
exports.SplitButtonWidget.displayName = 'SplitButtonWidget';


/***/ }),

/***/ "./lib/src/widgets/ChipPicker/ChipPicker.js":
/*!**************************************************!*\
  !*** ./lib/src/widgets/ChipPicker/ChipPicker.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var Colors_1 = __webpack_require__(/*! ../../styles/Colors */ "./lib/src/styles/Colors.js");
var FocusIndicators_1 = __webpack_require__(/*! ../../styles/FocusIndicators */ "./lib/src/styles/FocusIndicators.js");
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var BrowserDetection_1 = __webpack_require__(/*! ../../utils/BrowserDetection */ "./lib/src/utils/BrowserDetection.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var DomUtil_1 = __webpack_require__(/*! ../../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var ReactHelpers_1 = __webpack_require__(/*! ../../utils/ReactHelpers */ "./lib/src/utils/ReactHelpers.js");
var Combobox_1 = __webpack_require__(/*! ./Combobox */ "./lib/src/widgets/ChipPicker/Combobox.js");
var RowHeight = TabStyles_1.TabStyles.Sizing.RowHeight;
var FontSize = TabStyles_1.TabStyles.Typography.Sizing.Default;
var BorderWidth = 1;
var PickerPadding = 3;
var ChipMargin = 4;
var LabelStyleName = TypeStyle.style({
    color: Colors_1.TextColors.Secondary,
    display: 'inline-block',
    fontSize: FontSize,
    marginBottom: 4,
    $nest: {
        '&:empty': { display: 'none' },
        '&.disabled': { color: Colors_1.TextColors.Disabled },
    }
});
var ChipPickerStyleName = TypeStyle.style({
    alignContent: 'flex-start',
    alignItems: 'flex-start',
    border: BorderWidth + "px solid #cbcbcb",
    borderRadius: 1,
    boxSizing: 'border-box',
    display: 'flex',
    flexWrap: 'wrap',
    fontSize: FontSize,
    lineHeight: RowHeight - 2 + "px",
    overflowY: 'auto',
    padding: PickerPadding,
    paddingRight: 18,
    position: 'relative',
    $nest: {
        '&:not([aria-disabled="true"])': {
            cursor: 'text',
            $nest: {
                '&:hover': { backgroundColor: Colors_1.TextFieldHoverColor, borderColor: Colors_1.TextFieldBorderColors.Hover },
                '&&[aria-invalid="true"]': { borderColor: '#c41723' },
            }
        },
        '&&.focus-within': tslib_1.__assign(tslib_1.__assign({}, FocusIndicators_1.DefaultFocusIndicator), { backgroundColor: 'transparent', $nest: { '&[aria-invalid="true"]': { boxShadow: "0 0 4px 0 #E62835" } } }),
        '& > *': { margin: ChipMargin },
        '& > input': {
            fontSize: 'inherit',
            lineHeight: FontSize + "px",
            marginLeft: 0,
            marginRight: -1,
            outline: 'none',
        },
        '& > input:focus': BrowserDetection_1.isEdge ? { marginLeft: -1, marginRight: -3 } : { marginRight: -2 },
        '& > input:focus:first-child': { marginLeft: 4 },
        '& > .drag-indicator': {
            background: '#EB8F50',
            height: RowHeight + (2 * ChipMargin),
            margin: "0 -1px",
            pointerEvents: 'none',
            width: 2,
        }
    }
});
/* Chip multi-selection disabled until after SP1
type ListContentCache = { [key: string]: React.ReactNode };

export function buildContentCache(listItems: ChipPickerProps['listItems']): ListContentCache {
  return listItems.reduce((cache: ListContentCache, value) => (cache[value.value] = value.content || value.value, cache), {});
}

export function buildSelectionCache(selectedValues: string[]): ChipPickerState['selectedChips'] {
  return selectedValues.reduce((cache: ChipPickerState['selectedChips'], value) => (cache[value] = true, cache), {});
}

export function reduceSelectionCache(cache: ChipPickerState['selectedChips']): string[] {
  return Object.keys(cache).filter(key => cache[key] === true);
}
*/
// function cloneAndInsert<T>(values: Readonly<T[]>, value: T, index: number): T[] {
//   const newValues = [...values];
//   newValues.splice(index, 0, value);
//   return newValues;
// }
var getPixelHeight = function (lines) {
    return ((BorderWidth + PickerPadding) * 2 + (ChipMargin * 2 + RowHeight) * Math.max(1, lines));
};
var ChipPicker = /** @class */ (function (_super) {
    tslib_1.__extends(ChipPicker, _super);
    function ChipPicker() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.domRef = React.createRef();
        _this.inputElement = null;
        _this.inputId = DomUtil_1.generateId();
        _this.labelId = DomUtil_1.generateId();
        _this.findIndexOfChipValue = function (value) { return _this.props.children.findIndex(function (chip) { return chip.props.value === value; }); };
        _this.getChipElemAtIndex = function (chipIndex) { var _a; return (_a = _this.domRef.current) === null || _a === void 0 ? void 0 : _a.querySelector("[role=\"option\"][aria-posinset=\"" + (chipIndex + 1) + "\"]"); };
        _this.getChipValue = function (index) { return (_this.props.children[index] || { props: { value: undefined } }).props.value; };
        _this.getChipValues = function () { return _this.props.children.map(function (child) { return child.props.value; }); };
        _this.getLastChipValue = function () { return _this.getChipValue(_this.props.children.length - 1); };
        _this.state = {
            activeChipValue: _this.getLastChipValue(),
            cursorOffset: 1,
            dragIndex: -1,
            focusWithin: false,
            selectedChips: {}
        };
        /** used for positioning the list popup */
        _this.getAnchorClientRect = function () { return _this.domRef.current.getBoundingClientRect(); };
        /* Chip multi-selection disabled until after SP1
        // private selectAllChips = (): void => this.setState({ selectedChips: buildSelectionCache(this.getChipValues()) });
        // private clearSelectedChips = () => this.setState({ selectedChips: {} });
        */
        _this.chipKeyDownHandlers = Object.freeze({
            'ArrowLeft': function () { return _this.setState({ cursorOffset: 0 }, _this.focusInput); },
            'ArrowRight': function () { return _this.setState({ cursorOffset: 1 }, _this.focusInput); },
            'Home': function () { return _this.setState({ activeChipValue: _this.getChipValue(0), cursorOffset: 0 }, _this.focusInput); },
            'End': function () { return _this.setState({ activeChipValue: _this.getLastChipValue(), cursorOffset: 1 }, _this.focusInput); },
            'Backspace': function (currentIndex) { return _this.removeValueAtIndex(currentIndex); },
            'Delete': function (currentIndex) { return _this.removeValueAtIndex(currentIndex); },
            'Ctrl+a': function () { return; },
        });
        _this.inputKeyDownHandlers = Object.freeze({
            'ArrowLeft': function (focusables, currentIndex) {
                var nextIndex = Math.max(currentIndex - 1, 0);
                _this.setState({ cursorOffset: currentIndex > 0 ? 1 : 0 }, function () { return focusables[nextIndex].focus(); });
            },
            'ArrowRight': function (focusables, currentIndex) {
                var nextIndex = Math.min(currentIndex + 1, focusables.length - 1);
                _this.setState({ cursorOffset: currentIndex < focusables.length - 1 ? 0 : 1 }, function () { return focusables[nextIndex].focus(); });
            },
            'Home': function () { return _this.setState({ activeChipValue: _this.getChipValue(0), cursorOffset: 0 }, _this.focusInput); },
            'End': function () { return _this.setState({ activeChipValue: _this.getLastChipValue(), cursorOffset: 1 }, _this.focusInput); },
            'Backspace': function (focusables, currentIndex) { return _this.inputKeyDownHandlers.ArrowLeft(focusables, currentIndex); },
            'Delete': function (focusables, currentIndex) { return _this.inputKeyDownHandlers.ArrowRight(focusables, currentIndex); },
        });
        _this.handleKeyDown = ReactHelpers_1.mergeEventHandlers(function (e) {
            var targetIsChip = function (target) { return target.getAttribute('role') === 'option'; };
            var targetIsInput = function (target) { return target.tagName === 'INPUT'; };
            var key = (BrowserDetection_1.isCtrl(e) ? 'Ctrl+' : '') + e.key;
            if (targetIsChip(e.target) && _this.chipKeyDownHandlers[key]) {
                _this.chipKeyDownHandlers[key](_this.findIndexOfChipValue(_this.state.activeChipValue));
                e.preventDefault();
                e.stopPropagation();
            }
            else if (targetIsInput(e.target) && e.target.value === '' && _this.inputKeyDownHandlers[key]) {
                var focusables = Array.from(e.currentTarget.querySelectorAll('[role="option"], input'));
                var currentIndex = focusables.indexOf(e.target);
                _this.inputKeyDownHandlers[key](focusables, currentIndex);
                e.preventDefault();
                e.stopPropagation();
            }
        }, function (e) { var _a, _b; return (_b = (_a = _this.props).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        _this.getDragIndexFromDragEvent = function (e) {
            var dragOnContainer = e.target === e.currentTarget;
            var inLeftGutter = dragOnContainer && e.nativeEvent.offsetX < (BorderWidth + PickerPadding + ChipMargin);
            var nearbyChip = dragOnContainer ?
                _this.findNearbyChipFromMouseEvent(e, !inLeftGutter) :
                DomUtil_1.closest(e.target, "[role=\"option\"]");
            return nearbyChip ? parseInt(nearbyChip.getAttribute('aria-posinset'), 10) - (inLeftGutter ? 1 : 0) : _this.getChipValues().length;
        };
        _this.handleDragOver = ReactHelpers_1.mergeEventHandlers(function (e) {
            e.preventDefault();
            e.dataTransfer.dropEffect = 'move';
            var dragIndex = _this.getDragIndexFromDragEvent(e);
            if (dragIndex >= 0 && dragIndex <= _this.getChipValues().length) {
                _this.setState({ dragIndex: dragIndex });
            }
        }, function (e) { var _a, _b; return (_b = (_a = _this.props).onDragOver) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        _this.handleDragLeave = ReactHelpers_1.mergeEventHandlers(function (e) {
            _this.setState({ dragIndex: -1 });
        }, function (e) { var _a, _b; return (_b = (_a = _this.props).onDragExit) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        _this.handleDrop = ReactHelpers_1.mergeEventHandlers(function (e) {
            var to = _this.state.dragIndex;
            var data = e.dataTransfer.getData('Text');
            _this.setState({ dragIndex: -1 });
            if (!_this.props.onValuesChange || !data) {
                return;
            }
            var from = _this.findIndexOfChipValue(data);
            var values = tslib_1.__spreadArrays(_this.getChipValues());
            if (!isFinite(to) || from >= values.length || to > values.length) {
                return;
            }
            e.preventDefault();
            if (from < 0 && _this.props.onValueAdd && _this.props.listItems.findIndex(function (item) { return item.value === data; })) {
                _this.props.onValueAdd(data, to);
            }
            else {
                values.splice(to - (from >= to ? 0 : 1), 0, values.splice(from, 1)[0]);
                _this.props.onValuesChange(values);
            }
        }, function (e) { var _a, _b; return (_b = (_a = _this.props).onDrop) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        /** pseudo-simulate a `<textarea>` by allowing mouse clicks to move the "cursor" around (i.e. between chips) */
        _this.handleMouseDown = ReactHelpers_1.mergeEventHandlers(function (e) {
            if (e.currentTarget !== e.target) {
                return;
            }
            var inLeftGutter = e.nativeEvent.offsetX < (BorderWidth + PickerPadding + ChipMargin);
            var nearbyChip = _this.findNearbyChipFromMouseEvent(e, !inLeftGutter);
            if (nearbyChip) {
                nearbyChip.focus();
                _this.setState({ cursorOffset: inLeftGutter ? 0 : 1 }, _this.focusInput);
            }
            else {
                _this.setState({ activeChipValue: _this.getLastChipValue(), cursorOffset: 1 });
            }
        }, function (e) { var _a, _b; return (_b = (_a = _this.props).onMouseDown) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        _this.handleBlur = ReactHelpers_1.mergeEventHandlers(function (e) {
            if (!e.currentTarget.contains(DomUtil_1.findBlurRelatedTarget(e))) {
                _this.setState({ focusWithin: false });
            }
        }, function (e) { var _a, _b; return (_b = (_a = _this.props).onBlur) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        _this.handleFocus = ReactHelpers_1.mergeEventHandlers(function (e) {
            if (e.currentTarget === e.target) {
                _this.focusInput();
            }
            if (!_this.state.focusWithin) {
                _this.setState({ focusWithin: true });
            }
        }, function (e) { var _a, _b; return (_b = (_a = _this.props).onFocus) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        _this.handleInputRef = function (ref) { return _this.inputElement = ref; };
        _this.handleSelectValue = function (value) {
            if (_this.props.onValueAdd) {
                var insertionIndex = Math.max(0, _this.findIndexOfChipValue(_this.state.activeChipValue) + _this.state.cursorOffset);
                _this.props.onValueAdd(value, insertionIndex);
            }
        };
        _this.removeValueAtIndex = function (index) {
            var onValuesChange = _this.props.onValuesChange;
            var newValues = _this.getChipValues();
            newValues.splice(index, 1);
            if (onValuesChange) {
                onValuesChange(newValues);
            }
        };
        return _this;
    }
    ChipPicker.prototype.componentDidUpdate = function (prevProps, prevState) {
        var _a = this.props, children = _a.children, disabled = _a.disabled;
        var prevChildren = prevProps.children;
        if (!prevProps.disabled && disabled) {
            this.setState({ dragIndex: -1, focusWithin: false });
            return; // return early so that references to state below will be updated with these new values in the next call
        }
        if (children.length < prevChildren.length) {
            // when a chip is removed, put the cursor in its prior position
            var removedIndex = prevChildren.findIndex(function (chip) { return chip.props.value === prevState.activeChipValue; });
            var activeChipValue = this.getChipValue(removedIndex) || this.getLastChipValue();
            this.setState({ activeChipValue: activeChipValue, cursorOffset: removedIndex === children.length ? 1 : 0 }, this.state.focusWithin ? this.focusInput : undefined);
        }
        else if (this.state.focusWithin && children.length === prevChildren.length + 1) {
            // when a single chip is added while picker is focused, assume chip was added by the user and put the cursor after it
            var activeChipIndex = 0;
            while (activeChipIndex < children.length - 1 && this.getChipValue(activeChipIndex) === prevChildren[activeChipIndex].props.value) {
                activeChipIndex++;
            }
            this.setState({ activeChipValue: this.getChipValue(activeChipIndex), cursorOffset: 1 });
        }
        else if (children.length > prevChildren.length) {
            // otherwise just put the cursor at the end, e.g. if the parent component just added a bunch of chips
            this.setState({ activeChipValue: this.getLastChipValue(), cursorOffset: 1 });
        }
        // make sure the most recent change is visible, unless actively dragging
        if (this.state.dragIndex < 0 && this.state.focusWithin) {
            if (children.length !== prevChildren.length) {
                DomUtil_1.scrollIntoView(this.inputElement);
                this.focusInput();
            }
            else {
                var chipIndex = this.findIndexOfChipValue(this.state.activeChipValue);
                DomUtil_1.scrollIntoView(this.getChipElemAtIndex(chipIndex));
            }
        }
    };
    ChipPicker.prototype.focusChipAtIndex = function (chipIndex) {
        var chipElem = this.getChipElemAtIndex(chipIndex);
        if (chipElem) {
            chipElem.focus();
        }
    };
    ChipPicker.prototype.focusInput = function () {
        if (this.inputElement) {
            this.inputElement.focus();
        }
    };
    ChipPicker.prototype.findNearbyChipFromMouseEvent = function (e, searchBackwards) {
        if (searchBackwards === void 0) { searchBackwards = true; }
        var _a;
        if (e.currentTarget.querySelector('[role="option"]') === null) {
            return null;
        }
        var node = e.currentTarget;
        var clientX = e.clientX, clientY = e.clientY;
        while (node === e.currentTarget || ((_a = node) === null || _a === void 0 ? void 0 : _a.tagName) === 'INPUT') {
            searchBackwards ? --clientX : ++clientX;
            node = document.elementFromPoint(clientX, clientY);
        }
        return DomUtil_1.closest(node, "[role=\"option\"]");
    };
    ChipPicker.prototype.renderChips = function () {
        var _this = this;
        var _a = this.props, children = _a.children, disabled = _a.disabled;
        var chipCount = React.Children.count(children);
        return React.Children.map(children, function (child, index) {
            var value = child.props.value;
            return React.cloneElement(child, tslib_1.__assign({ 'aria-atomic': true, 'aria-disabled': disabled || child.props['aria-disabled'], 'aria-posinset': index + 1, 'aria-selected': _this.state.selectedChips[value], 'aria-setsize': chipCount, key: value, role: 'option' }, (!disabled && tslib_1.__assign(tslib_1.__assign({}, (BrowserDetection_1.isIE && { onMouseDown: function () { return setTimeout(function () { return _this.focusChipAtIndex(index); }); } })), { 
                /* Chip multi-selection disabled until after SP1
                // onClick: () => this.setState(prevState => ({
                  selectedChips: { ...prevState.selectedChips, [value]: !prevState.selectedChips[value] }
                })),
                */
                draggable: true, onDragStart: function (e) {
                    e.dataTransfer.setData('Text', value);
                    e.dataTransfer.effectAllowed = 'move';
                }, onFocus: function () { return _this.setState({ activeChipValue: value }); }, onRemove: function () { return _this.removeValueAtIndex(index); }, tabIndex: -1 }))));
        });
    };
    ChipPicker.prototype.renderCombobox = function (props) {
        return React.createElement(Combobox_1.Combobox, tslib_1.__assign({}, props, { getAnchorClientRect: this.getAnchorClientRect, id: this.inputId, inputRef: this.handleInputRef, key: 'combobox', onSelectValue: this.handleSelectValue, testId: Declarative_1.makeTestId(props.testId, 'ChipPicker') }));
    };
    ChipPicker.prototype.render = function () {
        // tslint:disable:max-line-length deprecation
        var _a = this.props, children = _a.children, className = _a.className, disabled = _a.disabled, onFilterItems = _a.onFilterItems, label = _a.label, maxLines = _a.maxLines, listItems = _a.listItems, listMaxHeight = _a.listMaxHeight, onMouseDown = _a.onMouseDown, onValueAdd = _a.onValueAdd, onValuesChange = _a.onValuesChange, placeholder = _a.placeholder, stackingRootId = _a.stackingRootId, style = _a.style, testId = _a.testId, zIndex = _a.zIndex, htmlProps = tslib_1.__rest(_a, ["children", "className", "disabled", "onFilterItems", "label", "maxLines", "listItems", "listMaxHeight", "onMouseDown", "onValueAdd", "onValuesChange", "placeholder", "stackingRootId", "style", "testId", "zIndex"]);
        var _b = this.state, activeChipValue = _b.activeChipValue, cursorOffset = _b.cursorOffset, dragIndex = _b.dragIndex;
        var chips = this.renderChips();
        if (!disabled) {
            if (dragIndex < 0) {
                // insert the combobox between chips so the whole control feels like a big text field with discrete chips
                var activeChipIndex = this.findIndexOfChipValue(activeChipValue);
                var placeholderText = chips.length > 0 ? undefined : placeholder;
                var combobox = this.renderCombobox({ 'aria-label': htmlProps['aria-label'], 'aria-labelledby': htmlProps['aria-labelledby'], disabled: disabled, listItems: listItems, listMaxHeight: listMaxHeight, onFilterItems: onFilterItems, placeholder: placeholderText, stackingRootId: stackingRootId, testId: testId, zIndex: zIndex });
                var comboIndex = activeChipIndex + cursorOffset;
                chips.splice(comboIndex, 0, combobox);
            }
            else {
                // insert the drag indicator at the current dragIndex
                var dragIndicator = React.createElement("div", { className: 'drag-indicator', key: 'drag-indicator' });
                chips.splice(dragIndex, 0, dragIndicator);
            }
        }
        // tslint:enable:max-line-length deprecation
        return React.createElement(React.Fragment, null,
            React.createElement("label", { children: label, className: TypeStyle.classes(LabelStyleName, { disabled: disabled }), "data-tb-test-id": Declarative_1.makeTestId(testId, 'ChipPicker', 'Label'), htmlFor: this.inputId, id: this.labelId }),
            React.createElement("div", tslib_1.__assign({}, ReactHelpers_1.EventUtilsOptOut, { "aria-disabled": disabled, "aria-labelledby": this.labelId, "aria-orientation": 'horizontal', "data-tb-test-id": Declarative_1.makeTestId(testId, 'ChipPicker'), spellCheck: false }, htmlProps, { children: chips, className: TypeStyle.classes(ChipPickerStyleName, className, { 'focus-within': this.state.focusWithin && !disabled }) }, (!disabled && {
                onBlur: this.handleBlur,
                onDragLeave: this.handleDragLeave,
                onDragOver: this.handleDragOver,
                onDrop: this.handleDrop,
                onFocus: this.handleFocus,
                onKeyDown: this.handleKeyDown,
                onMouseDown: this.handleMouseDown,
                tabIndex: -1,
            }), { ref: this.domRef, role: 'listbox', style: tslib_1.__assign({ maxHeight: getPixelHeight(maxLines) }, style) })));
    };
    ChipPicker.defaultProps = {
        children: [],
        maxLines: 3,
    };
    return ChipPicker;
}(React.PureComponent));
exports.ChipPicker = ChipPicker;


/***/ }),

/***/ "./lib/src/widgets/ChipPicker/Combobox.js":
/*!************************************************!*\
  !*** ./lib/src/widgets/ChipPicker/Combobox.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var Localize_1 = __webpack_require__(/*! ../../../gen-src/Localize */ "./lib/gen-src/Localize.js");
var SharedWidgets_1 = __webpack_require__(/*! ../../SharedWidgets */ "./lib/src/SharedWidgets.js");
var Standard_1 = __webpack_require__(/*! ../../styles/Standard */ "./lib/src/styles/Standard.js");
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var BrowserDetection_1 = __webpack_require__(/*! ../../utils/BrowserDetection */ "./lib/src/utils/BrowserDetection.js");
var DomUtil_1 = __webpack_require__(/*! ../../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var Overlay_1 = __webpack_require__(/*! ../../utils/Overlay */ "./lib/src/utils/Overlay.js");
var List_1 = __webpack_require__(/*! ../List/List */ "./lib/src/widgets/List/List.js");
var ListItemUtils_1 = __webpack_require__(/*! ../List/ListItemUtils */ "./lib/src/widgets/List/ListItemUtils.js");
var TextFieldInputWidget_1 = __webpack_require__(/*! ../TextField/TextFieldInputWidget */ "./lib/src/widgets/TextField/TextFieldInputWidget.js");
var Colors_1 = __webpack_require__(/*! ../../styles/Colors */ "./lib/src/styles/Colors.js");
var TextFieldStyleName = TypeStyle.style({
    backgroundColor: 'transparent',
    border: 'none',
    color: Colors_1.TextColors.Primary,
    fontSize: TabStyles_1.TabStyles.Typography.Sizing.Default,
    height: TabStyles_1.TabStyles.Sizing.RowHeight,
    lineHeight: TabStyles_1.TabStyles.Sizing.RowHeight + "px",
    padding: 0,
});
var PlaceholderStyleName = TypeStyle.style({
    color: Colors_1.TextColors.Neutral,
    lineHeight: TabStyles_1.TabStyles.Sizing.RowHeight + "px",
    pointerEvents: 'none',
    position: 'absolute',
    $nest: {
        '[aria-disabled="true"] &': { color: Colors_1.TextColors.Disabled },
    }
});
var DefaultState = Object.freeze({ inputText: '', isOpen: false, selectedItemIndex: -1 });
var OverlayPosition = Object.freeze({ horizontal: Overlay_1.HorizontalOriginOption.left, vertical: Overlay_1.VerticalOriginOption.bottom });
/**
 * Internal implementation of an ARIA-spec combobox for use with the ChipPicker widget.
 * Not exported separately in SharedWidgets.ts as it is not Tableau-styled and has some ChipPicker-specific concerns baked in.
 */
var Combobox = /** @class */ (function (_super) {
    tslib_1.__extends(Combobox, _super);
    function Combobox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.inputElement = null;
        _this.listId = DomUtil_1.generateId();
        _this.measureRef = React.createRef();
        _this.state = tslib_1.__assign({}, DefaultState);
        _this.handleSelectValue = function (value) {
            _this.setState(DefaultState, function () { var _a, _b; return (_b = (_a = _this.props).onSelectValue) === null || _b === void 0 ? void 0 : _b.call(_a, value); });
        };
        _this.handleInputChange = function (inputText, isComposing) {
            _this.setState({ inputText: inputText, isOpen: _this.state.isOpen || !!inputText });
        };
        /** https://www.w3.org/TR/wai-aria-practices-1.1/#combobox */
        _this.inputKeyDownHandlers = Object.freeze({
            'ArrowUp': function (e) {
                if (_this.state.isOpen) {
                    if (e.altKey) {
                        _this.inputKeyDownHandlers.Escape(e);
                    }
                    else {
                        _this.setState({ selectedItemIndex: ListItemUtils_1.findSelectableItemIndex(_this.props.listItems, _this.state.selectedItemIndex, -1) });
                    }
                }
            },
            'ArrowDown': function (e) {
                if (!_this.state.isOpen) {
                    _this.setState({ isOpen: true });
                }
                if (!e.altKey) {
                    _this.setState({ selectedItemIndex: ListItemUtils_1.findSelectableItemIndex(_this.props.listItems, _this.state.selectedItemIndex, +1) });
                }
            },
            'Enter': function () {
                if (_this.state.isOpen && _this.state.selectedItemIndex >= 0) {
                    _this.handleSelectValue(_this.props.listItems[_this.state.selectedItemIndex].value);
                }
            },
            'Escape': function (e) {
                if (_this.state.isOpen) {
                    if (!e.repeat) {
                        _this.inputKeyUpHandlers[e.key] = function () { return _this.setState({ isOpen: false, selectedItemIndex: -1 }, function () { return _this.inputElement.focus(); }); };
                    }
                    return false;
                }
                return true;
            },
            'Ctrl+Home': function () {
                if (_this.state.isOpen) {
                    _this.setState({ selectedItemIndex: ListItemUtils_1.findSelectableItemIndex(_this.props.listItems, -1, 1) });
                }
            },
            'Ctrl+End': function () {
                if (_this.state.isOpen) {
                    _this.setState({ selectedItemIndex: ListItemUtils_1.findSelectableItemIndex(_this.props.listItems, _this.props.listItems.length, -1) });
                }
            }
        });
        _this.handleInputKeyDown = function (e) {
            var key = (BrowserDetection_1.isCtrl(e) ? 'Ctrl+' : '') + e.key;
            if (_this.inputKeyDownHandlers[key]) {
                if (!_this.inputKeyDownHandlers[key](e)) { // handler returning falsy means the event was handled
                    e.stopPropagation();
                    e.preventDefault();
                }
            }
            else if (_this.state.selectedItemIndex >= 0 && e.which >= 32) { // 32 is SPACE
                // resets aria-activedescendant
                _this.setState({ selectedItemIndex: -1 });
            }
        };
        /** Useful for responding to full down-then-up key presses, rather than just down. */
        _this.inputKeyUpHandlers = {};
        _this.handleInputKeyUp = function (e) {
            var key = (BrowserDetection_1.isCtrl(e) ? 'Ctrl+' : '') + e.key;
            if (_this.inputKeyUpHandlers[key]) {
                _this.inputKeyUpHandlers[key](e);
                delete _this.inputKeyUpHandlers[key];
                e.stopPropagation();
                e.preventDefault();
            }
        };
        _this.handleInputBlur = function (e) {
            var _a;
            var clickingIntoList = _this.state.isOpen && ((_a = document.getElementById(_this.listId)) === null || _a === void 0 ? void 0 : _a.contains(e.relatedTarget));
            if (!clickingIntoList) {
                _this.setState(DefaultState);
            }
        };
        _this.handleInputFocus = function (focus) {
            _this.updateInputWidth(focus);
        };
        _this.handleInputRef = function (ref) {
            var _a, _b;
            _this.inputElement = ref;
            (_b = (_a = _this.props).inputRef) === null || _b === void 0 ? void 0 : _b.call(_a, ref);
        };
        _this.handlePortalKey = function (e) {
            // allow Escape events from the popup to close the popup
            if (e.key === 'Escape') {
                e.type === 'keydown' ? _this.handleInputKeyDown(e) : _this.handleInputKeyUp(e);
            }
        };
        _this.portalEventTrapOverrides = { onKeyDown: _this.handlePortalKey, onKeyUp: _this.handlePortalKey };
        _this.getAnchorClientRect = function () {
            if (_this.props.getAnchorClientRect) {
                return _this.props.getAnchorClientRect();
            }
            else {
                return _this.inputElement.getBoundingClientRect();
            }
        };
        // fake a placeholder with a positioned div because the text field is usually too narrow to fit any real placeholder text
        _this.renderPlaceholderText = function (placeholder) {
            return React.createElement("span", { "aria-hidden": true, className: PlaceholderStyleName }, placeholder);
        };
        // hidden div used to measure the input field text, used to resize the field as the user types
        _this.renderMeasurementDiv = function (inputText) {
            return React.createElement("span", { ref: _this.measureRef, style: { whiteSpace: 'pre', position: 'absolute', visibility: 'hidden' } }, inputText);
        };
        return _this;
    }
    Combobox.prototype.componentDidMount = function () {
        this.updateInputWidth();
    };
    Combobox.prototype.componentDidUpdate = function (prevProps, prevState) {
        var _a, _b, _c;
        var _d = this.state, inputText = _d.inputText, isOpen = _d.isOpen, selectedItemIndex = _d.selectedItemIndex;
        // close and clear if disabled
        if (!prevProps.disabled && this.props.disabled) {
            this.setState(DefaultState);
            return;
        }
        // reset aria-activedescendant after filtering
        if (isOpen && prevProps.listItems !== this.props.listItems) {
            var firstItem = this.props.listItems[0];
            this.setState({
                selectedItemIndex: ListItemUtils_1.isSelectableItem(firstItem) && firstItem.value === inputText ? 0 : -1
            });
        }
        // filter items as the user types
        if (inputText !== prevState.inputText) {
            (_b = (_a = this.props).onFilterItems) === null || _b === void 0 ? void 0 : _b.call(_a, inputText);
            // done here rather than `render` because otherwise the measurement will always be one character behind
            this.updateInputWidth();
        }
        // scroll the selected popup item into view
        if (isOpen && prevState.selectedItemIndex !== selectedItemIndex && selectedItemIndex >= 0) {
            var itemElem = (_c = document.getElementById(this.listId)) === null || _c === void 0 ? void 0 : _c.querySelector('[aria-selected="true"]');
            DomUtil_1.scrollIntoView(itemElem);
        }
    };
    // dynamically size the `<input>` to its contents; this is ChipPicker-specific but messy to pull it out
    Combobox.prototype.updateInputWidth = function (isFocused) {
        if (isFocused === void 0) { isFocused = true; }
        // ios 11 will not show the keyboard if the input has a width of 0
        var minWidth = isFocused ? (BrowserDetection_1.isEdge ? 4 : 2) : 1;
        this.inputElement.style.width = ((this.measureRef.current || { scrollWidth: 0 }).scrollWidth + minWidth) + 'px';
    };
    Combobox.prototype.render = function () {
        var _a;
        // tslint:disable-next-line:deprecation
        var _b = this.props, className = _b.className, disabled = _b.disabled, listItems = _b.listItems, id = _b.id, listMaxHeight = _b.listMaxHeight, placeholder = _b.placeholder, stackingRootId = _b.stackingRootId, testId = _b.testId, zIndex = _b.zIndex;
        var _c = this.state, inputText = _c.inputText, isOpen = _c.isOpen, selectedItemIndex = _c.selectedItemIndex;
        var selectedValue = listItems[selectedItemIndex] && listItems[selectedItemIndex].value;
        var activeItemId = (isOpen && selectedItemIndex >= 0) ? this.listId + "-" + selectedItemIndex : undefined;
        var renderItems = listItems.length === 0 ?
            [{ value: Localize_1.Messages.noMatches(), disabled: true }] :
            ListItemUtils_1.standardItemFilter(listItems, ''); // filter out e.g. consecutive separators
        // follows the ARIA 1.0 Combobox design pattern; the ARIA 1.1 pattern is designed around a "composite" widget which this is not
        // see: https://www.levelaccess.com/differences-aria-1-0-1-1-changes-rolecombobox/
        return React.createElement(React.Fragment, null,
            React.createElement(TextFieldInputWidget_1.TextFieldInputWidget, { "aria-activedescendant": activeItemId, "aria-autocomplete": 'list', "aria-controls": isOpen ? this.listId : undefined, "aria-expanded": isOpen, "aria-haspopup": 'listbox', "aria-label": this.props['aria-label'], "aria-labelledby": this.props['aria-labelledby'], "aria-placeholder": placeholder, className: TypeStyle.classes(TextFieldStyleName, className), disabled: disabled, handleBlur: this.handleInputBlur, handleChange: this.handleInputChange, handleFocus: this.handleInputFocus, id: id, inputRef: this.handleInputRef, onKeyDown: this.handleInputKeyDown, onKeyUp: this.handleInputKeyUp, role: 'combobox', testId: testId, text: inputText }),
            inputText ? this.renderMeasurementDiv(inputText) : (placeholder && this.renderPlaceholderText(placeholder)),
            !disabled && isOpen &&
                React.createElement(Overlay_1.Overlay, { allowAutoPosition: true, anchorOrigin: OverlayPosition, getAnchorClientRect: this.getAnchorClientRect, portalEventTrapOverrides: this.portalEventTrapOverrides, stackingRootId: stackingRootId, zIndex: zIndex },
                    React.createElement(List_1.List, { disableTabAccessibility: true, id: this.listId, items: renderItems, onSelect: this.handleSelectValue, selectedValue: selectedValue, style: tslib_1.__assign(tslib_1.__assign({}, Standard_1.PopupStyle), { maxHeight: listMaxHeight, minWidth: (_a = this.getAnchorClientRect()) === null || _a === void 0 ? void 0 : _a.width }), testId: SharedWidgets_1.testId(testId, 'List') })));
    };
    Combobox.defaultProps = { listItems: [] };
    return Combobox;
}(React.PureComponent));
exports.Combobox = Combobox;


/***/ }),

/***/ "./lib/src/widgets/Chips/Chip.js":
/*!***************************************!*\
  !*** ./lib/src/widgets/Chips/Chip.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var Localize_1 = __webpack_require__(/*! ../../../gen-src/Localize */ "./lib/gen-src/Localize.js");
var ClickBusting_1 = __webpack_require__(/*! ../../config/ClickBusting */ "./lib/src/config/ClickBusting.js");
var Icons_1 = __webpack_require__(/*! ../../icons/Icons */ "./lib/src/icons/Icons.js");
var Colors_1 = __webpack_require__(/*! ../../styles/Colors */ "./lib/src/styles/Colors.js");
var PreventUserSelect_1 = __webpack_require__(/*! ../../styles/PreventUserSelect */ "./lib/src/styles/PreventUserSelect.js");
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var ChipStyleName = TypeStyle.style(PreventUserSelect_1.PreventUserSelect, {
    alignItems: 'center',
    backgroundColor: '#ebebeb',
    border: "1px solid #d4d4d4",
    borderRadius: 1,
    boxSizing: 'border-box',
    color: Colors_1.TextColors.Primary,
    display: 'inline-flex',
    fontFamily: 'inherit',
    fontSize: TabStyles_1.TabStyles.Typography.Sizing.Default,
    lineHeight: 'inherit',
    overflow: 'hidden',
    padding: '0 3px',
    position: 'relative',
    transition: 'border-color 75ms',
    $nest: {
        '&:hover': { backgroundColor: '#f5f5f5' },
        '&[aria-selected="true"]': { backgroundColor: '#cccccc' },
        '&:focus': {
            borderColor: TabStyles_1.TabStyles.Colors.Focus,
            boxShadow: 'none !important',
            outline: 'none',
        },
        '&:active': { backgroundColor: '#d4d4d4' },
        '&[aria-disabled="true"]': { backgroundColor: 'transparent !important', color: Colors_1.TextColors.Disabled + " !important" },
        '&[aria-busy="true"]::after': {
            backgroundColor: 'rgba(255,255,255,0.6)',
            bottom: 0,
            content: "\"\"",
            left: 0,
            pointerEvents: 'none',
            position: 'absolute',
            right: 0,
            top: 0,
        }
    }
});
// tslint:disable:max-line-length
var RemoveChipIcon = function (fill) {
    if (fill === void 0) { fill = '#666'; }
    return "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"8\">\n<path fill=\"" + fill + "\" d=\"M4.78873239 4L7.83098592.95774648c.22535211-.22535211.22535211-.56338028 0-.7887324-.22535212-.2253521-.56338029-.2253521-.7887324 0L4 3.21126762.95774648.16901408c-.22535211-.2253521-.56338028-.2253521-.7887324 0-.2253521.22535212-.2253521.56338029 0 .7887324L3.21126762 4 .16901408 7.04225352c-.2253521.22535211-.2253521.56338028 0 .7887324.22535212.22535211.56338029.22535211.7887324 0L4 4.78873239l3.04225352 3.04225353c.22535211.22535211.56338028.22535211.7887324 0 .22535211-.22535212.22535211-.56338029 0-.7887324L4.78873239 4z\"/>\n</svg>";
};
// tslint:enable:max-line-length
var RemoveButtonStyleName = TypeStyle.style({
    background: "center no-repeat url(" + Icons_1.encodeSvg(RemoveChipIcon()) + ")",
    boxSizing: 'border-box',
    flexShrink: 0,
    height: 22,
    marginLeft: 5,
    marginRight: -3,
    width: 22,
    $nest: {
        '&:hover': { backgroundImage: "url(" + Icons_1.encodeSvg(RemoveChipIcon('#333')) + ")" },
        '&:active': { backgroundImage: "url(" + Icons_1.encodeSvg(RemoveChipIcon('#333')) + ")" }
    }
});
var RemoveButton = function (props) { return React.createElement("div", { "aria-hidden": true, className: RemoveButtonStyleName, "data-tb-test-id": 'remove-Button', onClick: props.onRemove && (function (e) { var _a, _b; (_b = (_a = props).onRemove) === null || _b === void 0 ? void 0 : _b.call(_a); e.stopPropagation(); }), role: 'button', title: Localize_1.Messages.remove() }); };
exports.Chip = React.forwardRef(function (props, ref) {
    var className = props.className, children = props.children, onRemove = props.onRemove, testId = props.testId, tooltip = props.tooltip, value = props.value, htmlProps = tslib_1.__rest(props, ["className", "children", "onRemove", "testId", "tooltip", "value"]);
    return (React.createElement("div", tslib_1.__assign({ "data-tb-test-id": Declarative_1.makeTestId(testId, 'Chip'), ref: ref, title: tooltip }, htmlProps, { className: TypeStyle.classes(ChipStyleName, ClickBusting_1.ClickBustingConfig.suppressionClassName, className) }),
        children,
        onRemove && React.createElement(RemoveButton, { onRemove: onRemove })));
});
exports.Chip.displayName = 'Chip';


/***/ }),

/***/ "./lib/src/widgets/Chips/FeedbackChips.js":
/*!************************************************!*\
  !*** ./lib/src/widgets/Chips/FeedbackChips.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var Localize_1 = __webpack_require__(/*! ../../../gen-src/Localize */ "./lib/gen-src/Localize.js");
var Icons_1 = __webpack_require__(/*! ../../icons/Icons */ "./lib/src/icons/Icons.js");
var Colors_1 = __webpack_require__(/*! ../../styles/Colors */ "./lib/src/styles/Colors.js");
var Chip_1 = __webpack_require__(/*! ./Chip */ "./lib/src/widgets/Chips/Chip.js");
// tslint:disable:max-line-length
var SuccessSvg = function (fill) { return "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"11\" height=\"11\">\n<path fill=\"" + fill + "\" d=\"M4.42528736,11 C4.17241379,11 3.91954023,10.8735632 3.79310345,10.7471264 L0,6.95402299 L1.3908046,5.56321839 L4.29885057,8.47126437 L9.35632184,0 L11,1.01149425 L5.31034483,10.6206897 C5.05747126,10.8735632 4.8045977,11 4.42528736,11 L4.42528736,11 Z\"/>\n</svg>\n"; };
var InfoSvg = function (fill) { return "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"13\">\n<path fill=\"" + fill + "\" d=\"M6.5,0 C10.1,0 13,2.9 13,6.5 C13,10.1 10.1,13 6.5,13 C2.9,13 0,10.1 0,6.5 C0,2.9 2.9,0 6.5,0 Z M5.9,2.9 L5.9,4.2 L7.2,4.2 L7.2,2.9 L5.9,2.9 Z M5.9,5 L5.9,10 L7.2,10 L7.2,5 L5.9,5 Z\"/>\n</svg>\n"; };
var WarningSvg = function (fill) { return "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\">\n<path fill=\"" + fill + "\" d=\"M12.4444444,14 L1.55555556,14 C0.7,14 0,13.3 0,12.4444444 L0,1.55555556 C0,0.7 0.7,0 1.55555556,0 L12.4444444,0 C13.3,0 14,0.7 14,1.55555556 L14,12.4444444 C14,13.3 13.3,14 12.4444444,14 Z M6.22222222,2.33333333 L6.22222222,8.55555556 L7.77777778,8.55555556 L7.77777778,2.33333333 L6.22222222,2.33333333 Z M6.22222222,10.1111111 L6.22222222,11.6666667 L7.77777778,11.6666667 L7.77777778,10.1111111 L6.22222222,10.1111111 Z\"/>\n</svg>\n"; };
var ErrorSvg = function (fill) { return "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"13\">\n<path fill=\"" + fill + "\" d=\"M6.20631136,0.486631016 C6.57745685,-0.162210339 7.50532059,-0.162210339 7.78367971,0.486631016 L13.9075804,11.6096257 C14.1859395,12.258467 13.814794,13 13.072503,13 L0.917488052,13 C0.267983436,13 -0.195948433,12.258467 0.0824106882,11.6096257 L6.20631136,0.486631016 Z M6.39188411,3.73083779 L6.39188411,9.29233512 L7.78367971,9.29233512 L7.78367971,3.73083779 L6.39188411,3.73083779 Z M6.39188411,10.2192513 L6.39188411,11.1461676 L7.78367971,11.1461676 L7.78367971,10.2192513 L6.39188411,10.2192513 Z\"/>\n</svg>\n"; };
var ResourceMap = {
    success: { bgColor: '#ACE5C8', iconFill: '#034235', icon: SuccessSvg, iconWidth: 11, getPrefix: Localize_1.Messages.successToastPrefix },
    info: { bgColor: '#D7ECF9', iconFill: '#0F445E', icon: InfoSvg, iconWidth: 13, getPrefix: Localize_1.Messages.infoToastPrefix },
    warning: { bgColor: '#FFD6BB', iconFill: '#A84010', icon: WarningSvg, iconWidth: 14, getPrefix: Localize_1.Messages.warningToastPrefix },
    error: { bgColor: '#F8C7CB', hoverBgColor: '#F4A4AA', iconFill: '#C93A47', icon: ErrorSvg, iconWidth: 14, getPrefix: Localize_1.Messages.errorToastPrefix }
};
/** Takes in a resource, returns a react function component for that type of chip. */
var FeedbackChipFactory = function (resource) {
    return React.forwardRef(function (props, ref) {
        var message = props.message, chipProps = tslib_1.__rest(props, ["message"]);
        var ariaLabel = "" + resource.getPrefix() + message;
        return React.createElement(Chip_1.Chip, tslib_1.__assign({ ref: ref, tooltip: message }, chipProps, { "aria-label": ariaLabel, className: TypeStyle.classes(props.className, TypeStyle.style({
                backgroundColor: resource.bgColor,
                backgroundImage: "url(" + Icons_1.encodeSvg(resource.icon(chipProps['aria-disabled'] ? Colors_1.IconFillColors.Disabled : resource.iconFill)) + ")",
                backgroundOrigin: 'border-box',
                backgroundPositionX: (24 - resource.iconWidth) / 2,
                backgroundPositionY: 'center',
                backgroundRepeat: 'no-repeat',
                paddingLeft: 24 - 1,
                $nest: { '&:hover': { backgroundColor: resource.hoverBgColor } }
            })) }));
    });
};
// export const SuccessChip = FeedbackChipFactory(ResourceMap.success);
// SuccessChip.displayName = 'SuccessChip';
// export const InfoChip = FeedbackChipFactory(ResourceMap.info);
// InfoChip.displayName = 'InfoChip';
// export const WarningChip = FeedbackChipFactory(ResourceMap.warning);
// WarningChip.displayName = 'WarningChip';
exports.ErrorChip = FeedbackChipFactory(ResourceMap.error);
exports.ErrorChip.displayName = 'ErrorChip';


/***/ }),

/***/ "./lib/src/widgets/ChromeTooltip/ChromeTooltipArrow.js":
/*!*************************************************************!*\
  !*** ./lib/src/widgets/ChromeTooltip/ChromeTooltipArrow.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(/*! react */ "react");
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var ChromeTooltipUtility_1 = __webpack_require__(/*! ./ChromeTooltipUtility */ "./lib/src/widgets/ChromeTooltip/ChromeTooltipUtility.js");
exports.Height = 12;
exports.Width = 6;
var Stroke = TabStyles_1.TabStyles.Colors.L5;
var Fill = TabStyles_1.TabStyles.Colors.White;
var StrokeWidth = TabStyles_1.TabStyles.Sizing.BorderWidth;
function ChromeTooltipArrow(_a) {
    var direction = _a.direction, style = _a.style;
    var points = getPoints(direction).map(function (_a) {
        var x = _a.x, y = _a.y;
        return x + ',' + y;
    }).join(' ');
    return (React.createElement("svg", { xmlns: 'http://www.w3.org/2000/svg', style: style, height: getHeight(direction), width: getWidth(direction) },
        React.createElement("polyline", { points: points, fill: Fill, stroke: Stroke, strokeWidth: StrokeWidth })));
}
exports.ChromeTooltipArrow = ChromeTooltipArrow;
function getHeight(direction) {
    return direction === 'Left' || direction === 'Right' ? exports.Height : exports.Width;
}
function getWidth(direction) {
    return direction === 'Left' || direction === 'Right' ? exports.Width : exports.Height;
}
function getPoints(direction) {
    switch (direction) {
        case 'Up': return [{ x: 0, y: exports.Width }, { x: exports.Height / 2, y: 0 }, { x: exports.Height, y: exports.Width }];
        case 'Down': return [{ x: 0, y: 0 }, { x: exports.Height / 2, y: exports.Width }, { x: exports.Height, y: 0 }];
        case 'Left': return [{ x: exports.Width, y: 0 }, { x: 0, y: exports.Height / 2 }, { x: exports.Width, y: exports.Height }];
        case 'Right': return [{ x: 0, y: 0 }, { x: exports.Width, y: exports.Height / 2 }, { x: 0, y: exports.Height }];
        default: return ChromeTooltipUtility_1.assertNever(direction);
    }
}


/***/ }),

/***/ "./lib/src/widgets/ChromeTooltip/ChromeTooltipBox.js":
/*!***********************************************************!*\
  !*** ./lib/src/widgets/ChromeTooltip/ChromeTooltipBox.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
exports.Padding = 8;
exports.BorderWidth = TabStyles_1.TabStyles.Sizing.BorderWidth;
exports.OuterMaxWidth = 250;
exports.OuterMaxHeight = 250;
exports.InnerMaxWidth = exports.OuterMaxWidth - 2 * (exports.Padding + exports.BorderWidth);
exports.InnerMaxHeight = exports.OuterMaxHeight - 2 * (exports.Padding + exports.BorderWidth);
var OuterStyle = {
    flexGrow: 0,
    padding: exports.Padding,
    borderWidth: exports.BorderWidth,
    borderStyle: 'solid',
    borderColor: TabStyles_1.TabStyles.Colors.L5,
    borderRadius: TabStyles_1.TabStyles.Sizing.BorderRadius,
    boxShadow: TabStyles_1.TabStyles.Shadow.Standard,
    backgroundColor: TabStyles_1.TabStyles.Colors.White,
};
// NOTE inner div handles content overflow so that scroll bars appear within padding of outer div
var InnerStyle = {
    maxWidth: exports.InnerMaxWidth,
    maxHeight: exports.InnerMaxHeight,
    overflowY: 'auto'
};
function ChromeTooltipBox(props) {
    return (React.createElement("div", { style: OuterStyle },
        React.createElement("div", { style: getInnerStyle(props.width) }, props.content)));
}
exports.ChromeTooltipBox = ChromeTooltipBox;
function getInnerStyle(width) {
    return tslib_1.__assign(tslib_1.__assign({}, InnerStyle), { width: width });
}


/***/ }),

/***/ "./lib/src/widgets/ChromeTooltip/ChromeTooltipDisplay.js":
/*!***************************************************************!*\
  !*** ./lib/src/widgets/ChromeTooltip/ChromeTooltipDisplay.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(/*! react */ "react");
var Overlay_1 = __webpack_require__(/*! ../../utils/Overlay */ "./lib/src/utils/Overlay.js");
var ChromeTooltipUtility_1 = __webpack_require__(/*! ./ChromeTooltipUtility */ "./lib/src/widgets/ChromeTooltip/ChromeTooltipUtility.js");
var ChromeTooltipBox_1 = __webpack_require__(/*! ./ChromeTooltipBox */ "./lib/src/widgets/ChromeTooltip/ChromeTooltipBox.js");
var ChromeTooltipArrow_1 = __webpack_require__(/*! ./ChromeTooltipArrow */ "./lib/src/widgets/ChromeTooltip/ChromeTooltipArrow.js");
function ChromeTooltipDisplay(props) {
    var getAnchorClientRect = function () {
        var rect = props.targetElement.getBoundingClientRect();
        var y = getTopFromOverlaidPosition(props.side, props.offset);
        var x = getLeftFromOverlaidPosition(props.side, props.offset);
        return {
            top: rect.top + y,
            bottom: rect.bottom + y,
            left: rect.left + x,
            right: rect.right + x,
        };
    };
    return (React.createElement(Overlay_1.Overlay, { getAnchorClientRect: getAnchorClientRect, zIndex: props.zIndex, anchorOrigin: getAnchorOrigin(props.side), stackedOrigin: getStackedOrigin(props.side) },
        React.createElement("div", { ref: props.handleRef, onMouseLeave: props.close },
            React.createElement("div", { style: getContainerStyle(props.positioned, props.side) },
                React.createElement(ChromeTooltipBox_1.ChromeTooltipBox, { content: props.content, width: props.width }),
                React.createElement(ChromeTooltipArrow_1.ChromeTooltipArrow, { direction: getDirection(props.side), style: getArrowStyle(props.side, props.offset) })))));
}
exports.ChromeTooltipDisplay = ChromeTooltipDisplay;
function getAnchorOrigin(side) {
    switch (side) {
        case 'Top': return { horizontal: Overlay_1.HorizontalOriginOption.centerX, vertical: Overlay_1.VerticalOriginOption.top };
        case 'Bottom': return { horizontal: Overlay_1.HorizontalOriginOption.centerX, vertical: Overlay_1.VerticalOriginOption.bottom };
        case 'Left': return { horizontal: Overlay_1.HorizontalOriginOption.left, vertical: Overlay_1.VerticalOriginOption.centerY };
        case 'Right': return { horizontal: Overlay_1.HorizontalOriginOption.right, vertical: Overlay_1.VerticalOriginOption.centerY };
        default: return ChromeTooltipUtility_1.assertNever(side);
    }
}
function getStackedOrigin(side) {
    switch (side) {
        case 'Top': return { horizontal: Overlay_1.HorizontalOriginOption.left, vertical: Overlay_1.VerticalOriginOption.bottom };
        case 'Bottom': return { horizontal: Overlay_1.HorizontalOriginOption.left, vertical: Overlay_1.VerticalOriginOption.top };
        case 'Left': return { horizontal: Overlay_1.HorizontalOriginOption.right, vertical: Overlay_1.VerticalOriginOption.top };
        case 'Right': return { horizontal: Overlay_1.HorizontalOriginOption.left, vertical: Overlay_1.VerticalOriginOption.top };
        default: return ChromeTooltipUtility_1.assertNever(side);
    }
}
function getTopFromOverlaidPosition(side, offset) {
    return ChromeTooltipUtility_1.isHorizontalSide(side) ? -1 * offset : 0;
}
function getLeftFromOverlaidPosition(side, offset) {
    return ChromeTooltipUtility_1.isVerticalSide(side) ? -1 * offset : 0;
}
function getContainerStyle(positioned, side) {
    return {
        visibility: positioned ? 'visible' : 'hidden',
        display: 'flex',
        flexDirection: getFlexDirection(side),
        flexWrap: 'nowrap',
        justifyContent: 'flex-start',
        alignItems: 'center'
    };
}
function getFlexDirection(side) {
    switch (side) {
        case 'Top': return 'column';
        case 'Bottom': return 'column-reverse';
        case 'Left': return 'row';
        case 'Right': return 'row-reverse';
        default: return ChromeTooltipUtility_1.assertNever(side);
    }
}
function getDirection(side) {
    switch (side) {
        case 'Top': return 'Down';
        case 'Bottom': return 'Up';
        case 'Left': return 'Right';
        case 'Right': return 'Left';
        default: return ChromeTooltipUtility_1.assertNever(side);
    }
}
function getArrowStyle(side, offset) {
    var mainAxisOffset = -1.2;
    var crossAxisOffset = offset - ChromeTooltipArrow_1.Height / 2;
    var style = { alignSelf: 'flex-start' };
    switch (side) {
        case 'Top':
            style.marginTop = mainAxisOffset;
            style.marginLeft = crossAxisOffset;
            break;
        case 'Bottom':
            style.marginBottom = mainAxisOffset;
            style.marginLeft = crossAxisOffset;
            break;
        case 'Left':
            style.marginLeft = mainAxisOffset;
            style.marginTop = crossAxisOffset;
            break;
        case 'Right':
            style.marginRight = mainAxisOffset;
            style.marginTop = crossAxisOffset;
            break;
        default:
            ChromeTooltipUtility_1.assertNever(side);
    }
    return style;
}


/***/ }),

/***/ "./lib/src/widgets/ChromeTooltip/ChromeTooltipUtility.js":
/*!***************************************************************!*\
  !*** ./lib/src/widgets/ChromeTooltip/ChromeTooltipUtility.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/**
 * Asserts that a given value is of type `never`, which is the type left after all other cases have been removed, see
 * https://www.typescriptlang.org/docs/handbook/advanced-types.html.
 * @param x - The value that should never occur.
 */
function assertNever(x) {
    throw new Error('Unexpected object: ' + x);
}
exports.assertNever = assertNever;
/**
 * Number of sides of a rectangle.
 */
exports.NumberOfSides = 4;
/**
 * Checks if a given side is horizontal, i.e., left or right.
 * @param side - The side to check.
 */
function isHorizontalSide(side) {
    return side === 'Left' || side === 'Right';
}
exports.isHorizontalSide = isHorizontalSide;
/**
 * Checks if a given side is vertical, i.e., top or bottom.
 * @param side - The side to check.
 */
function isVerticalSide(side) {
    return !isHorizontalSide(side);
}
exports.isVerticalSide = isVerticalSide;
/**
 * Returns the side next to a given side in the clockwise direction.
 * @param side - The previous side.
 */
function getNextSideClockwise(side) {
    switch (side) {
        case 'Top': return 'Right';
        case 'Right': return 'Bottom';
        case 'Bottom': return 'Left';
        case 'Left': return 'Top';
        default: return assertNever(side);
    }
}
exports.getNextSideClockwise = getNextSideClockwise;
/**
 * Returns the side next to a given side in the counter-clockwise direction.
 * @param side - The previous side.
 */
function getNextSideCounterClockwise(side) {
    switch (side) {
        case 'Top': return 'Left';
        case 'Left': return 'Bottom';
        case 'Bottom': return 'Right';
        case 'Right': return 'Top';
        default: return assertNever(side);
    }
}
exports.getNextSideCounterClockwise = getNextSideCounterClockwise;
/**
 * Interval of real numbers.
 */
var Interval = /** @class */ (function () {
    /**
     * Constructs a new interval.
     * @param min - Greatest lower bound of interval.
     * @param max - Least upper bound of interval.
     */
    function Interval(min, max) {
        this.min = min;
        this.max = max;
        if (max < min) {
            throw new Error('max less than min');
        }
    }
    Interval.prototype.equals = function (i) {
        return this.containsInterval(i) && i.containsInterval(this);
    };
    return Interval;
}());
exports.Interval = Interval;
/**
 * Closed interval of real numbers.
 */
var ClosedInterval = /** @class */ (function (_super) {
    tslib_1.__extends(ClosedInterval, _super);
    function ClosedInterval() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ClosedInterval.prototype.containsNumber = function (n) {
        return this.min <= n && n <= this.max;
    };
    ClosedInterval.prototype.containsInterval = function (i) {
        return this.min <= i.min && i.max <= this.max;
    };
    return ClosedInterval;
}(Interval));
exports.ClosedInterval = ClosedInterval;
/**
 * Open interval of real numbers.
 */
var OpenInterval = /** @class */ (function (_super) {
    tslib_1.__extends(OpenInterval, _super);
    function OpenInterval() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OpenInterval.prototype.containsNumber = function (n) {
        return this.min < n && n < this.max;
    };
    OpenInterval.prototype.containsInterval = function (i) {
        var p = i.containsNumber(i.min) ? this.min < i.min : this.min <= i.min;
        var q = i.containsNumber(i.max) ? i.max < this.max : i.max <= this.max;
        return p && q;
    };
    return OpenInterval;
}(Interval));
exports.OpenInterval = OpenInterval;
/**
 * Rectangle in the plane.
 */
var Rectangle = /** @class */ (function () {
    function Rectangle() {
    }
    Rectangle.prototype.containsPoint = function (x, y) {
        return this.xInterval.containsNumber(x) && this.yInterval.containsNumber(y);
    };
    Rectangle.prototype.containsRectangle = function (r) {
        return this.xInterval.containsInterval(r.xInterval) && this.yInterval.containsInterval(r.yInterval);
    };
    Rectangle.prototype.equals = function (r) {
        return this.containsRectangle(r) && r.containsRectangle(this);
    };
    return Rectangle;
}());
exports.Rectangle = Rectangle;
/**
 * Closed rectangle in the plane.
 */
var ClosedRectangle = /** @class */ (function (_super) {
    tslib_1.__extends(ClosedRectangle, _super);
    function ClosedRectangle(minX, maxX, minY, maxY) {
        var _this = _super.call(this) || this;
        _this.xInterval = new ClosedInterval(minX, maxX);
        _this.yInterval = new ClosedInterval(minY, maxY);
        return _this;
    }
    return ClosedRectangle;
}(Rectangle));
exports.ClosedRectangle = ClosedRectangle;
/**
 * Checks if a given outer rectangle contains a given inner rectangle.
 * @param clientRect1 - The outer rectangle.
 * @param clientRect2 - The inner rectangle.
 */
function containsClientRect(clientRect1, clientRect2) {
    var rect1 = clientRectToClosedRectangle(clientRect1);
    var rect2 = clientRectToClosedRectangle(clientRect2);
    return rect1.containsRectangle(rect2);
}
exports.containsClientRect = containsClientRect;
function clientRectToClosedRectangle(_a) {
    var left = _a.left, right = _a.right, top = _a.top, bottom = _a.bottom;
    return new ClosedRectangle(left, right, top, bottom);
}


/***/ }),

/***/ "./lib/src/widgets/ChromeTooltip/ChromeTooltipWidget.js":
/*!**************************************************************!*\
  !*** ./lib/src/widgets/ChromeTooltip/ChromeTooltipWidget.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
// tslint:disable:deprecation
var React = __webpack_require__(/*! react */ "react");
var SharedWidgets_1 = __webpack_require__(/*! ../../SharedWidgets */ "./lib/src/SharedWidgets.js");
var ChromeTooltipArrow_1 = __webpack_require__(/*! ./ChromeTooltipArrow */ "./lib/src/widgets/ChromeTooltip/ChromeTooltipArrow.js");
var ChromeTooltipBox_1 = __webpack_require__(/*! ./ChromeTooltipBox */ "./lib/src/widgets/ChromeTooltip/ChromeTooltipBox.js");
var ChromeTooltipDisplay_1 = __webpack_require__(/*! ./ChromeTooltipDisplay */ "./lib/src/widgets/ChromeTooltip/ChromeTooltipDisplay.js");
var ChromeTooltipUtility_1 = __webpack_require__(/*! ./ChromeTooltipUtility */ "./lib/src/widgets/ChromeTooltip/ChromeTooltipUtility.js");
// extra space for mousing between target and tooltip
var MouseSpace = 1;
exports.DefaultOffset = ChromeTooltipBox_1.BorderWidth + ChromeTooltipBox_1.Padding + ChromeTooltipArrow_1.Height / 2;
var DefaultSide = 'Right';
var Style = {
    position: 'relative',
    display: 'inline-block'
};
/** @deprecated This widget is completely unsupported and has several known issues. Do not use it. */
var ChromeTooltipWidget = /** @class */ (function (_super) {
    tslib_1.__extends(ChromeTooltipWidget, _super);
    function ChromeTooltipWidget(props) {
        var _this = _super.call(this, props) || this;
        _this.setContent = function (content) {
            if (!_this.canceled) {
                _this.setState(function (prevState) { return prevState.content ? prevState : tslib_1.__assign(tslib_1.__assign({}, prevState), { content: content }); });
            }
        };
        _this.open = function () {
            // tslint:disable-next-line:no-floating-promises
            _this.props.getContent().then(_this.setContent);
        };
        _this.close = function () {
            _this.setState({ content: null, positioned: false });
        };
        _this.handleClick = function (e) {
            _this.state.content ? _this.close() : _this.open();
            e.preventDefault();
        };
        _this.handleMouseEnter = function (e) {
            if (!_this.state.content) {
                _this.canceled = false;
                _this.open();
            }
        };
        _this.handleMouseLeave = function (_a) {
            var clientX = _a.clientX, clientY = _a.clientY;
            if (!_this.state.content) {
                // TFSID 740766: cancel if mouse outside target before finished fetching content
                _this.canceled = true;
            }
            if (_this.tooltipElement) {
                var _b = _this.tooltipElement.getBoundingClientRect(), left = _b.left, right = _b.right, top_1 = _b.top, bottom = _b.bottom;
                // add offset based on side
                switch (_this.state.side) {
                    case 'Top':
                        bottom += MouseSpace;
                        break;
                    case 'Bottom':
                        top_1 -= MouseSpace;
                        break;
                    case 'Left':
                        right += MouseSpace;
                        break;
                    case 'Right':
                        left -= MouseSpace;
                        break;
                    default:
                        ChromeTooltipUtility_1.assertNever(_this.state.side);
                }
                // close if mouse outside of tooltip
                var rectangle = new ChromeTooltipUtility_1.ClosedRectangle(left, right, top_1, bottom);
                if (!rectangle.containsPoint(clientX, clientY)) {
                    _this.close();
                }
            }
        };
        _this.updateTargetRef = function (element) {
            _this.targetElement = element;
        };
        _this.updateTooltipRef = function (element) {
            _this.tooltipElement = element;
        };
        _this.state = {
            content: null,
            positioned: false,
            side: props.defaultSide || DefaultSide,
            offset: exports.DefaultOffset
        };
        return _this;
    }
    ChromeTooltipWidget.prototype.componentDidUpdate = function () {
        if (this.state.content && !this.state.positioned) {
            if (!this.targetElement || !this.tooltipElement) {
                throw new Error('reference to target or tooltip isn\'t set!');
            }
            var outerRect = (this.props.boundaryElement || document.body).getBoundingClientRect();
            var innerRect = this.targetElement.getBoundingClientRect();
            // try to position tooltip within outer rectangle
            var _a = this.tooltipElement.getBoundingClientRect(), width = _a.width, height = _a.height;
            // try default side first
            var side = this.props.defaultSide || DefaultSide;
            var offset = this.state.offset;
            var i = 0;
            // tslint:disable-next-line: deprecation
            var rect = ChromeTooltipWidget.computeTooltipRectangle(innerRect, width, height, side, offset);
            while (i < ChromeTooltipUtility_1.NumberOfSides && !ChromeTooltipUtility_1.containsClientRect(outerRect, rect)) {
                i++;
                side = ChromeTooltipUtility_1.getNextSideClockwise(side);
                // tslint:disable-next-line: deprecation
                rect = ChromeTooltipWidget.computeTooltipRectangle(innerRect, width, height, side, offset);
            }
            this.setState({ positioned: true, side: side });
        }
    };
    ChromeTooltipWidget.prototype.componentDidMount = function () {
        this.canceled = false;
    };
    // NOTE cancel any unresolved promise of content to avoid setting state on unmounted component,
    // see https://facebook.github.io/react/blog/2015/12/16/ismounted-antipattern.html for more information
    ChromeTooltipWidget.prototype.componentWillUnmount = function () {
        this.canceled = true;
    };
    ChromeTooltipWidget.prototype.render = function () {
        return (React.createElement(SharedWidgets_1.PointerEventWrapper, { pointerClick: this.handleClick },
            React.createElement("div", { ref: this.updateTargetRef, style: Style, onMouseEnter: this.handleMouseEnter, onMouseLeave: this.handleMouseLeave },
                this.props.children,
                this.renderTooltip())));
    };
    ChromeTooltipWidget.prototype.renderTooltip = function () {
        if (this.state.content && this.targetElement) {
            return React.createElement(ChromeTooltipDisplay_1.ChromeTooltipDisplay, { content: this.state.content, width: this.props.width, targetElement: this.targetElement, handleRef: this.updateTooltipRef, close: this.close, positioned: this.state.positioned, side: this.state.side, offset: this.state.offset, zIndex: this.props.zIndex });
        }
        else {
            return null;
        }
    };
    // tslint:disable-next-line:max-line-length
    ChromeTooltipWidget.computeTooltipRectangle = function (target, width, height, side, offset) {
        var top;
        var left;
        if (ChromeTooltipUtility_1.isHorizontalSide(side)) {
            top = target.top + target.height / 2 - offset;
            left = side === 'Left' ? target.left - width : target.right;
        }
        else {
            left = target.left + target.width / 2 - offset;
            top = side === 'Top' ? target.top - height : target.bottom;
        }
        return {
            top: top,
            bottom: top + height,
            left: left,
            right: left + width,
            width: width,
            height: height
        };
    };
    return ChromeTooltipWidget;
}(React.Component));
exports.ChromeTooltipWidget = ChromeTooltipWidget;


/***/ }),

/***/ "./lib/src/widgets/ColorPicker/ColorGridWidget.js":
/*!********************************************************!*\
  !*** ./lib/src/widgets/ColorPicker/ColorGridWidget.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var ReactHelpers_1 = __webpack_require__(/*! ../../utils/ReactHelpers */ "./lib/src/utils/ReactHelpers.js");
var ColorPickerPresets_1 = __webpack_require__(/*! ./ColorPickerPresets */ "./lib/src/widgets/ColorPicker/ColorPickerPresets.js");
var ColorSwatchSize = 15;
var ColorSwatchStyleName = TypeStyle.style({
    boxSizing: 'border-box',
    height: ColorSwatchSize,
    width: ColorSwatchSize,
    $nest: {
        '&:hover, &:active, &[aria-selected="true"]': { position: 'relative' },
        '&[aria-selected="true"]::after': { outline: "1px solid " + TabStyles_1.TabStyles.Colors.L8 },
        '&:hover::after, &:active::after': { outline: "1px solid " + TabStyles_1.TabStyles.Colors.L9 },
        '&:hover::after, &:active::after, &[aria-selected="true"]::after': {
            border: "1px solid white",
            bottom: -1,
            content: "\"\"",
            left: -1,
            pointerEvents: 'none',
            position: 'absolute',
            right: -1,
            top: -1,
        },
    }
});
exports.ColorSwatchWidget = React.forwardRef(function (props, ref) {
    var color = props.color.toLowerCase();
    var handleClick = React.useCallback(function (e) { return props.onClick(color); }, [color, props.onClick]);
    return (React.createElement("div", tslib_1.__assign({}, ReactHelpers_1.EventUtilsOptOut, { "aria-selected": props.selected, className: TypeStyle.classes(ColorSwatchStyleName, props.disabled && 'disabled'), "data-tb-test-id": Declarative_1.makeTestId(props.testId, 'ColorSwatch', color), onClick: props.disabled ? undefined : handleClick, ref: ref, style: {
            backgroundColor: color,
            height: props.size,
            width: props.size,
        } })));
});
exports.ColorSwatchWidget.displayName = 'ColorSwatchWidget';
var ColorGridType;
(function (ColorGridType) {
    ColorGridType[ColorGridType["Default"] = 0] = "Default";
    ColorGridType[ColorGridType["Minimal"] = 1] = "Minimal";
})(ColorGridType = exports.ColorGridType || (exports.ColorGridType = {}));
var ColorGridPreset;
(function (ColorGridPreset) {
    ColorGridPreset[ColorGridPreset["Dark"] = 0] = "Dark";
    ColorGridPreset[ColorGridPreset["Light"] = 1] = "Light";
    ColorGridPreset[ColorGridPreset["MaestroFlowColors"] = 2] = "MaestroFlowColors";
})(ColorGridPreset = exports.ColorGridPreset || (exports.ColorGridPreset = {}));
function getPreset(presetType) {
    switch (presetType) {
        default:
        case ColorGridPreset.Dark: return ColorPickerPresets_1.ColorPickerPresets.Dark;
        case ColorGridPreset.Light: return ColorPickerPresets_1.ColorPickerPresets.Light;
        case ColorGridPreset.MaestroFlowColors: return ColorPickerPresets_1.ColorPickerPresets.MaestroFlowColors;
    }
}
var GroupSpacingPx = 3;
var DividerHeightPx = 4;
var ColorGridWidget = /** @class */ (function (_super) {
    tslib_1.__extends(ColorGridWidget, _super);
    function ColorGridWidget() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.getColorSwatchGridBuilder = function (gridType) {
            switch (gridType) {
                default:
                case ColorGridType.Default:
                    return _this.buildDefaultColorSwatchGrid();
                case ColorGridType.Minimal:
                    return _this.buildMinimalColorSwatchGrid();
            }
        };
        return _this;
    }
    ColorGridWidget.prototype.render = function () {
        return React.createElement("div", { "data-tb-test-id": Declarative_1.makeTestId(this.props.testId, 'ColorGrid'), tabIndex: 0 }, this.getColorSwatchGridBuilder(this.props.gridType));
    };
    ColorGridWidget.prototype.buildMinimalColorSwatchGrid = function () {
        var colorsPerColumn = 4;
        var columns = [];
        var colors = getPreset(this.props.colorsPreset);
        var currentColumn = [];
        var currentGroup = [];
        var colorsInColumn = 0;
        for (var i = 0; i < colors.length; i++) {
            var color = colors[i].toLowerCase();
            var colorSwatchProps = {
                color: color,
                onClick: this.props.handleSwatchClicked,
                key: 'swatch-' + color,
                size: ColorSwatchSize,
                selected: this.props.selectedColor === color,
                disabled: this.props.disabled,
                testId: this.props.testId
            };
            currentGroup.push(React.createElement(exports.ColorSwatchWidget, tslib_1.__assign({}, colorSwatchProps)));
            colorsInColumn += 1;
            // when we reached the max number of colors in a column or we are about the add a divider, then we need to flush the group and render
            // as a div with gray borders
            if (colorsInColumn === colorsPerColumn) {
                currentColumn.push(React.createElement("div", { children: currentGroup, style: { border: "1px solid " + TabStyles_1.TabStyles.Colors.L6 }, key: 'group-' + i }));
                columns.push(React.createElement("div", { children: currentColumn, key: 'column-' + i, style: { float: 'left', marginTop: 0, marginRight: 0, marginBottom: 0, marginLeft: (columns.length ? GroupSpacingPx : 0) } }));
                currentColumn = [];
                colorsInColumn = 0;
                currentGroup = [];
            }
        }
        return React.createElement("div", { children: columns, style: { display: 'flex' } });
    };
    ColorGridWidget.prototype.buildDefaultColorSwatchGrid = function () {
        var colorsPerColumn = 6;
        var columns = [];
        var colors = getPreset(this.props.colorsPreset);
        var currentColumn = [];
        var currentGroup = [];
        var colorsInColumn = 0;
        for (var i = 0; i < colors.length; i++) {
            var color = colors[i].toLowerCase();
            var colorSwatchProps = {
                color: color,
                onClick: this.props.handleSwatchClicked,
                key: 'swatch-' + color,
                size: ColorSwatchSize,
                selected: this.props.selectedColor === color,
                disabled: this.props.disabled,
                testId: this.props.testId
            };
            currentGroup.push(React.createElement(exports.ColorSwatchWidget, tslib_1.__assign({}, colorSwatchProps)));
            colorsInColumn += 1;
            // for the first 2 columns (gray colors) we will have a divider after the first color swatch, after that the divider is after the 3rd
            var addDivider = colorsInColumn === 1 && columns.length < 2 || colorsInColumn === 3 && columns.length >= 2;
            // when we reached the max number of colors in a column or we are about the add a divider, then we need to flush the group and render
            // as a div with gray borders
            if (colorsInColumn === colorsPerColumn || addDivider) {
                currentColumn.push(React.createElement("div", { children: currentGroup, style: { border: "1px solid " + TabStyles_1.TabStyles.Colors.L6 }, key: 'group-' + i }));
                if (addDivider) {
                    currentColumn.push(React.createElement("div", { style: { width: ColorSwatchSize, height: DividerHeightPx }, key: 'divider-' + i }));
                }
                if (colorsInColumn === colorsPerColumn) {
                    columns.push(React.createElement("div", { children: currentColumn, key: 'column-' + i, style: { float: 'left', marginTop: 0, marginRight: 0, marginBottom: 0, marginLeft: (columns.length ? GroupSpacingPx : 0) } }));
                    currentColumn = [];
                    colorsInColumn = 0;
                }
                currentGroup = [];
            }
        }
        return React.createElement("div", { children: columns, style: { display: 'flex' } });
    };
    ColorGridWidget.defaultProps = { colorsPreset: ColorGridPreset.Dark };
    return ColorGridWidget;
}(React.Component));
exports.ColorGridWidget = ColorGridWidget;


/***/ }),

/***/ "./lib/src/widgets/ColorPicker/ColorPickerPresets.js":
/*!***********************************************************!*\
  !*** ./lib/src/widgets/ColorPicker/ColorPickerPresets.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var graysPreset = Object.freeze([
    '#000000', '#1B1B1B', '#333333', '#555555', '#666666', '#898989',
    '#FFFFFF', '#F5F5F5', '#E6E6E6', '#D4D4D4', '#C0C0C0', '#B4B4B4'
]);
var darkPreset = Object.freeze([
    '#F28E2B', '#F9A655', '#FFBE7D', '#B07AA1', '#C290B4', '#D4A6C8',
    '#B6992D', '#D3B348', '#F1CE63', '#D37295', '#E799B3', '#FABFD2',
    '#59A14F', '#72B966', '#8CD17D', '#E15759', '#F17B79', '#FF9D9A',
    '#499894', '#69AAA5', '#86BCB6', '#9D7660', '#BA9582', '#D7B5A6',
    '#4E79A7', '#75A1C7', '#A0CBE8', '#79706E', '#998F8C', '#BAB0AC',
    '#606B76', '#818B91', '#A7ACAD', '#76B7B2', '#FF9DA7', '#EDC948'
]);
var lightPreset = Object.freeze([
    '#EFEBE8', '#F5F1F0', '#F9F8F7', '#F0EAE8', '#F5F0EF', '#FAF5F4',
    '#F5EDDC', '#FAF4E7', '#FEFAF1', '#E9EBE0', '#F0F1E8', '#F7F7F0',
    '#EBEBEB', '#F2F2F2', '#F9F9F9', '#DFE7E8', '#E9F0F1', '#F2F9F9',
    '#F3EBF3', '#F7F1F6', '#FBF7FB', '#E2E6F0', '#E9EDF5', '#F0F3FA',
    '#E6ECF0', '#EEF1F3', '#F2F6F7', '#DDEBF0', '#E7F1F5', '#F0F7FA',
    '#DFEDEB', '#E9F3F2', '#F3FAF9', '#E8EDDA', '#EFF3E3', '#F7FAF0',
    '#F5EAD7', '#F6EEE3', '#FAF5F0', '#F9E9E0', '#F9EEE8', '#F9F3EF'
]);
var maestroFlowPreset = Object.freeze([
    '#4F6980', '#3D7FA6', '#8BC2CA', '#499893',
    '#62AEA1', '#7DC4AE', '#638B66', '#86AF6A',
    '#C3BB3D', '#EFC637', '#F6A035', '#F37941',
    '#F59A9A', '#CD677F', '#C497B7', '#845578',
    '#B9AA98', '#7E756D', '#9EB0A5', '#B56252'
]);
exports.ColorPickerPresets = Object.freeze({
    Dark: graysPreset.concat(darkPreset),
    Light: graysPreset.concat(lightPreset),
    MaestroFlowColors: maestroFlowPreset,
});


/***/ }),

/***/ "./lib/src/widgets/ColorPicker/ColorPickerWidget.js":
/*!**********************************************************!*\
  !*** ./lib/src/widgets/ColorPicker/ColorPickerWidget.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(/*! react */ "react");
var ReactDOM = __webpack_require__(/*! react-dom */ "react-dom");
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var DomUtil_1 = __webpack_require__(/*! ../../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var DropdownButton_1 = __webpack_require__(/*! ../Dropdown/DropdownButton */ "./lib/src/widgets/Dropdown/DropdownButton.js");
var ColorGridWidget_1 = __webpack_require__(/*! ./ColorGridWidget */ "./lib/src/widgets/ColorPicker/ColorGridWidget.js");
var ColorPickerPresets_1 = __webpack_require__(/*! ./ColorPickerPresets */ "./lib/src/widgets/ColorPicker/ColorPickerPresets.js");
var CustomColorInputWidget_1 = __webpack_require__(/*! ./CustomColorInputWidget */ "./lib/src/widgets/ColorPicker/CustomColorInputWidget.js");
function isSelectedColorCustom(presetGridColors, selectedColor) {
    for (var _i = 0, presetGridColors_1 = presetGridColors; _i < presetGridColors_1.length; _i++) {
        var color = presetGridColors_1[_i];
        if (color.toLowerCase() === selectedColor.toLowerCase()) {
            return false;
        }
    }
    return true;
}
function getCustomColorInput(selectedColor, colorsPreset) {
    if (!selectedColor) {
        return '';
    }
    var colors = colorsPreset === ColorGridWidget_1.ColorGridPreset.Light ?
        ColorPickerPresets_1.ColorPickerPresets.Light : ColorPickerPresets_1.ColorPickerPresets.Dark;
    return isSelectedColorCustom(colors, selectedColor) ? selectedColor : '';
}
exports.ColorPickerWidget = React.forwardRef(function (props, ref) {
    var dialogId = React.useState(DomUtil_1.generateId())[0];
    var closeFn = React.useRef(null);
    var colorGridElement = React.useRef();
    var onColorSelected = function (color) {
        var _a, _b, _c;
        (_b = (_a = closeFn).current) === null || _b === void 0 ? void 0 : _b.call(_a);
        // tslint:disable-next-line:deprecation
        (_c = (props.onColorSelected || props.handleColorSelected)) === null || _c === void 0 ? void 0 : _c(color.toLowerCase());
    };
    return React.createElement("div", { style: { display: 'inline-block' }, "data-tb-test-id": Declarative_1.makeTestId(props.testId, 'ColorPicker') },
        React.createElement(DropdownButton_1.DropdownButton, { "aria-controls": dialogId, "aria-haspopup": 'dialog', "data-tb-test-id": Declarative_1.makeTestId(props.testId, 'ColorPickerButton'), disabled: props.disabled, 
            // tslint:disable-next-line:deprecation
            focusOnClose: props.focusOnClose || props.shouldReturnFocusOnClose, label: props.label, onOpen: function (doneFn) { return closeFn.current = doneFn; }, popupAlignment: props.popupAlignment, popupContent: React.createElement(ColorGridPopupContent, { colorsPreset: props.colorsPreset, disabled: props.disabled, handleSwatchClicked: onColorSelected, id: dialogId, ref: function (gridRef) { return colorGridElement.current = ReactDOM.findDOMNode(gridRef); }, selectedColor: props.selectedColor, showCustomColorInput: props.showCustomColorInput, testId: props.testId }), ref: ref, 
            // tslint:disable-next-line:deprecation
            stackingRootId: props.stackingRootId, testId: null, title: props.title, type: DropdownButton_1.DropdownButtonType.Outline, 
            // tslint:disable-next-line:deprecation
            zIndex: props.zIndex || props.dropdownZIndex },
            React.createElement("div", { style: {
                    backgroundColor: (props.selectedColor || '').toLowerCase(),
                    boxSizing: 'border-box',
                    display: 'inline-block',
                    height: '50%',
                    width: props.colorLabelWidth || 40,
                } })));
});
exports.ColorPickerWidget.defaultProps = { colorsPreset: ColorGridWidget_1.ColorGridPreset.Dark, focusOnClose: true };
exports.ColorPickerWidget.displayName = 'ColorPickerWidget';
var ColorGridPopupContent = React.forwardRef(function (props, ref) {
    return React.createElement("div", { "data-tb-test-id": Declarative_1.makeTestId(props.testId, 'ColorGridWrapper'), id: props.id, role: 'dialog', style: { padding: TabStyles_1.TabStyles.Spacing.LargeSpace } },
        React.createElement(ColorGridWidget_1.ColorGridWidget, { colorsPreset: props.colorsPreset, disabled: props.disabled, handleSwatchClicked: props.handleSwatchClicked, ref: ref, selectedColor: (props.selectedColor || '').toLowerCase(), testId: 'colorgrid' }),
        props.showCustomColorInput && React.createElement(React.Fragment, null,
            React.createElement("hr", { style: { marginTop: TabStyles_1.TabStyles.Spacing.LargeSpace } }),
            React.createElement(CustomColorInputWidget_1.CustomColorInput, { color: getCustomColorInput(props.selectedColor, props.colorsPreset), onColorSelected: props.handleSwatchClicked, testId: props.testId })));
});
ColorGridPopupContent.displayName = 'ColorGridPopupContent';


/***/ }),

/***/ "./lib/src/widgets/ColorPicker/CustomColorInputWidget.js":
/*!***************************************************************!*\
  !*** ./lib/src/widgets/ColorPicker/CustomColorInputWidget.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(/*! react */ "react");
var Localize_1 = __webpack_require__(/*! ../../../gen-src/Localize */ "./lib/gen-src/Localize.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var HexColorInputWidget_1 = __webpack_require__(/*! ./HexColorInputWidget */ "./lib/src/widgets/ColorPicker/HexColorInputWidget.js");
exports.CustomColorInput = React.forwardRef(function (props, ref) {
    return React.createElement("div", { "data-tb-test-id": Declarative_1.makeTestId(props.testId, 'CustomColorInput'), ref: ref },
        React.createElement(HexColorInputWidget_1.HexColorInput, { color: props.color, label: Localize_1.Messages.customColor(), onConfirm: props.onColorSelected, testId: props.testId }));
});
exports.CustomColorInput.displayName = 'CustomColorInput';


/***/ }),

/***/ "./lib/src/widgets/ColorPicker/HexColorInputWidget.js":
/*!************************************************************!*\
  !*** ./lib/src/widgets/ColorPicker/HexColorInputWidget.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var SharedWidgets_1 = __webpack_require__(/*! ../../SharedWidgets */ "./lib/src/SharedWidgets.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var ColorGridWidget_1 = __webpack_require__(/*! ./ColorGridWidget */ "./lib/src/widgets/ColorPicker/ColorGridWidget.js");
var _a = SharedWidgets_1.TabStyles.Sizing, RowHeight = _a.RowHeight, BorderWidth = _a.BorderWidth;
var RootStyleName = TypeStyle.style({
    alignItems: 'flex-end',
    display: 'flex',
    paddingTop: SharedWidgets_1.TabStyles.Spacing.SmallSpace,
});
// we set min height/width so that IE doesn't shrink the width of the box to less than row height
// see Defect 736928 for more details
var PreviewSwatchStyleName = TypeStyle.style({
    borderColor: SharedWidgets_1.TabStyles.Colors.L6,
    borderStyle: 'solid',
    borderWidth: BorderWidth,
    boxSizing: 'border-box',
    height: RowHeight,
    marginRight: 12,
    minHeight: RowHeight,
    minWidth: RowHeight,
    width: RowHeight,
});
var TextFieldStyleName = TypeStyle.style({ flexGrow: 1, flexBasis: '50px' });
var InputStyle = { width: '100%' };
function isValidHexColor(color) {
    return /^#?[0-9A-Fa-f]{6}$/.test(color);
}
function formatColor(color) {
    var formattedColor = (color || '').toUpperCase();
    if (formattedColor.charAt(0) !== '#') {
        formattedColor = '#' + formattedColor;
    }
    return formattedColor;
}
var HexColorInput = /** @class */ (function (_super) {
    tslib_1.__extends(HexColorInput, _super);
    function HexColorInput(props) {
        var _this = _super.call(this, props) || this;
        _this.isValid = function () {
            if (!_this.state.hexColorText || _this.state.hexColorText === '#' || isValidHexColor(_this.state.hexColorText)) {
                return undefined;
            }
            return false;
        };
        _this.handleChange = function (e) {
            var value = e.target.value;
            if (!/^#?[0-9A-Fa-f]{0,6}$/.test(value)) {
                return;
            }
            _this.setState({ hexColorText: e.target.value });
        };
        _this.handleKeyUp = function (e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                e.stopPropagation();
                if (isValidHexColor(_this.state.hexColorText)) {
                    _this.props.onConfirm(formatColor(_this.state.hexColorText));
                }
            }
        };
        _this.handleSwatchClicked = function (color) {
            if (isValidHexColor(_this.state.hexColorText)) {
                _this.props.onConfirm(formatColor(color.toLowerCase()));
            }
        };
        _this.state = { hexColorText: props.color || '' };
        return _this;
    }
    HexColorInput.prototype.render = function () {
        return (React.createElement("div", { className: RootStyleName, "data-tb-test-id": Declarative_1.makeTestId(this.props.testId, 'HexInput') },
            React.createElement("div", { className: PreviewSwatchStyleName },
                React.createElement(ColorGridWidget_1.ColorSwatchWidget, { color: this.getCustomColor() || 'transparent', disabled: !this.getCustomColor(), onClick: this.handleSwatchClicked, selected: this.shouldSwatchBeSelected(), size: RowHeight - 2 * BorderWidth, testId: this.props.testId })),
            React.createElement(SharedWidgets_1.TextFieldWidget, { className: TextFieldStyleName, label: this.props.label, maxLength: 7, onChange: this.handleChange, 
                /* onClear is omitted because the TextField from Tableau UI calls stopPropagation on ESC events when there is text present --
                 * which is always the case for this control, as it always displays the '#' prefix. Removing this stopPropagation would be
                 * technically-correct but would break dialogs/overlays, etc. Easiest way to work around is just not to show the clear button. */
                onKeyUp: this.handleKeyUp, placeholder: '#', spellCheck: false, style: InputStyle, testId: this.props.testId, valid: this.isValid(), value: formatColor(this.state.hexColorText) })));
    };
    HexColorInput.prototype.getCustomColor = function () {
        if (isValidHexColor(this.state.hexColorText)) {
            return formatColor(this.state.hexColorText);
        }
        return null;
    };
    HexColorInput.prototype.shouldSwatchBeSelected = function () {
        return isValidHexColor(this.props.color) && formatColor(this.state.hexColorText) === formatColor(this.props.color);
    };
    return HexColorInput;
}(React.Component));
exports.HexColorInput = HexColorInput;


/***/ }),

/***/ "./lib/src/widgets/DateInputField.js":
/*!*******************************************!*\
  !*** ./lib/src/widgets/DateInputField.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
// tslint:disable:deprecation
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var Localize_1 = __webpack_require__(/*! ../../gen-src/Localize */ "./lib/gen-src/Localize.js");
var Icons_1 = __webpack_require__(/*! ../icons/Icons */ "./lib/src/icons/Icons.js");
var SharedWidgets_1 = __webpack_require__(/*! ../SharedWidgets */ "./lib/src/SharedWidgets.js");
var TabStyles_1 = __webpack_require__(/*! ../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var Date_1 = __webpack_require__(/*! ../utils/Date */ "./lib/src/utils/Date.js");
var DomUtil_1 = __webpack_require__(/*! ../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var Overlay_1 = __webpack_require__(/*! ../utils/Overlay */ "./lib/src/utils/Overlay.js");
var DatePickerWidget_1 = __webpack_require__(/*! ./DatePicker/DatePickerWidget */ "./lib/src/widgets/DatePicker/DatePickerWidget.js");
var DomWidgets_1 = __webpack_require__(/*! ./DomWidgets */ "./lib/src/widgets/DomWidgets.js");
var DateFormat;
(function (DateFormat) {
    DateFormat[DateFormat["ShortDateTime"] = 0] = "ShortDateTime";
    DateFormat[DateFormat["MediumDateTime"] = 1] = "MediumDateTime";
    DateFormat[DateFormat["LongDateTime"] = 2] = "LongDateTime";
    DateFormat[DateFormat["FullDateTime"] = 3] = "FullDateTime";
    DateFormat[DateFormat["ShortDate"] = 4] = "ShortDate";
    DateFormat[DateFormat["MediumDate"] = 5] = "MediumDate";
    DateFormat[DateFormat["LongDate"] = 6] = "LongDate";
    DateFormat[DateFormat["FullDate"] = 7] = "FullDate";
    DateFormat[DateFormat["ShortDateWithFullYear"] = 8] = "ShortDateWithFullYear";
    DateFormat[DateFormat["ShortDateTimeWithFullYear"] = 9] = "ShortDateTimeWithFullYear";
    DateFormat[DateFormat["ShortDateTimeWithFullYear24Hour"] = 10] = "ShortDateTimeWithFullYear24Hour";
    DateFormat[DateFormat["ShortDateMediumTimeWithFullYear"] = 11] = "ShortDateMediumTimeWithFullYear";
    DateFormat[DateFormat["ShortDateMediumTimeWithFullYear24Hour"] = 12] = "ShortDateMediumTimeWithFullYear24Hour";
})(DateFormat = exports.DateFormat || (exports.DateFormat = {}));
var DateInputFieldType;
(function (DateInputFieldType) {
    DateInputFieldType[DateInputFieldType["Line"] = 0] = "Line";
    DateInputFieldType[DateInputFieldType["Outline"] = 1] = "Outline";
})(DateInputFieldType = exports.DateInputFieldType || (exports.DateInputFieldType = {}));
var Shadow = TabStyles_1.TabStyles.Shadow, Colors = TabStyles_1.TabStyles.Colors, Sizing = TabStyles_1.TabStyles.Sizing;
var TextFieldContainerStyleName = TypeStyle.style({ display: 'flex' });
var TextFieldStyle = {
    paddingRight: 24,
    width: '100%',
};
var DialogStyle = {
    boxShadow: Shadow.Standard,
    lineHeight: 'normal',
    outline: 'none',
};
var OverlayAnchorOrigin = { vertical: Overlay_1.VerticalOriginOption.bottom, horizontal: Overlay_1.HorizontalOriginOption.left };
var DateInputField = /** @class */ (function (_super) {
    tslib_1.__extends(DateInputField, _super);
    function DateInputField() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.inputElement = null;
        _this.buttonElement = null;
        _this.overlayElement = null;
        _this.datePickerId = DomUtil_1.generateId();
        _this.state = {
            inputText: undefined,
            isDatePickerOpen: false,
            measuredLabelHeight: 0,
        };
        _this.setLabelHeight = function () {
            _this.setState({ measuredLabelHeight: _this.inputElement.parentElement.offsetTop });
        };
        _this.handleInputRef = function (ref) {
            _this.inputElement = ref;
            if (ref) {
                _this.setLabelHeight();
            }
        };
        _this.handleButtonRef = function (ref) {
            _this.buttonElement = ref;
        };
        _this.handleOverlayRef = function (ref) {
            _this.overlayElement = ref;
        };
        _this.handleButtonClick = function () {
            _this.toggleDatePicker();
        };
        _this.handleInputChange = function (e) {
            var inputText = e.target.value;
            _this.setState({ inputText: inputText });
        };
        _this.handleInputKeyDown = function (e) {
            if (e.key === 'Enter') {
                var parsedDate = Date_1.getParsedDate(e.target.value, _this.props.terminus);
                if (parsedDate) {
                    _this.closeAndConfirm(parsedDate);
                }
            }
            else if (e.key === 'Escape') {
                _this.resetState();
            }
            else if (_this.props.hasDatePicker) {
                switch (e.key) {
                    case ' ':
                        if (_this.inputElement.selectionStart === 0 && _this.inputElement.selectionEnd === _this.inputElement.value.length) {
                            _this.open();
                            break;
                        }
                        return;
                    case 'ArrowDown':
                        _this.open();
                        break;
                    case 'ArrowUp':
                        _this.close();
                        break;
                    default:
                        return;
                }
            }
            else {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
        };
        _this.handleOverlayKeyUp = function (e) {
            if (e.key === 'Escape') {
                _this.resetState();
                e.preventDefault();
            }
            e.stopPropagation();
        };
        _this.handleBlur = function (e) {
            var _a, _b;
            var toElement = DomUtil_1.findBlurRelatedTarget(e);
            if (((_a = _this.buttonElement) === null || _a === void 0 ? void 0 : _a.contains(toElement)) || e.currentTarget.contains(toElement) || ((_b = _this.overlayElement) === null || _b === void 0 ? void 0 : _b.contains(toElement))) {
                return;
            }
            var parsedDate = Date_1.getParsedDate(_this.inputElement.value, _this.props.terminus);
            if (parsedDate && !_this.props.errorText && _this.props.valid !== false) {
                _this.closeAndConfirm(parsedDate);
            }
            else {
                _this.resetState();
            }
        };
        _this.resetState = function () {
            _this.setState({ isDatePickerOpen: false, inputText: undefined });
        };
        _this.handlePickerChange = function (date) {
            var dateWithTerminus = Date_1.getDateWithTerminus(date, Localize_1.Parsers.parseShortDate, _this.props.terminus);
            _this.confirmIfChanged(dateWithTerminus);
        };
        _this.handlePickerConfirm = function (date) {
            _this.closeAndConfirm(date);
        };
        _this.renderDatePicker = function () {
            var datePickerProps = {
                autofocus: true,
                isDateDisabled: _this.props.isDatePickerDateDisabled,
                onChange: _this.handlePickerChange,
                onConfirm: _this.handlePickerConfirm,
                selectedDate: _this.props.selectedDate,
                showWeekNumbers: _this.props.showDatePickerWeekNumbers,
                testId: _this.props.testId + "-date-picker",
            };
            return React.createElement(DatePickerWidget_1.DatePickerWidget, tslib_1.__assign({}, datePickerProps));
        };
        _this.portalEventTrapOverrides = {
            onBlur: _this.handleBlur,
            onKeyUp: _this.handleOverlayKeyUp
        };
        return _this;
    }
    DateInputField.prototype.componentDidUpdate = function (prevProps, prevState) {
        var _a, _b, _c;
        var _d = this.state, inputText = _d.inputText, isDatePickerOpen = _d.isDatePickerOpen;
        var _e = this.props, displayFormat = _e.displayFormat, selectedDate = _e.selectedDate;
        // tslint:disable-next-line:max-line-length
        if ((prevProps.valid !== false && this.props.valid === false) || (this.props.errorText && this.props.errorText !== prevProps.errorText)) {
            // close the popup any time the error message is updated to ensure the user can see it (as it is not displayed in the popup)
            this.close();
        }
        if (!isDatePickerOpen && prevState.isDatePickerOpen && this.inputElement && document.body.contains(this.inputElement)) {
            this.inputElement.focus();
        }
        if (prevProps.displayFormat !== displayFormat || prevProps.selectedDate.getTime() !== ((_a = selectedDate) === null || _a === void 0 ? void 0 : _a.getTime())) {
            this.setState({ inputText: undefined });
        }
        else if (inputText !== prevState.inputText) {
            var parsedDate = Date_1.getParsedDate(inputText || '', this.props.terminus);
            if (!parsedDate) {
                this.close(); // if we can't parse it, we can't show it in the DatePicker popup
            }
            // inputText is `undefined` when the state is reset back to initial, but the empty string if the user deletes all the text
            // this is an important distinction when signaling the current state of the field to e.g. external validators
            (_c = (_b = this.props).onChange) === null || _c === void 0 ? void 0 : _c.call(_b, inputText !== undefined ? parsedDate : selectedDate);
        }
        if (prevProps.label !== this.props.label) {
            this.setLabelHeight();
        }
    };
    DateInputField.prototype.open = function () {
        this.toggleDatePicker(true);
    };
    DateInputField.prototype.close = function () {
        this.toggleDatePicker(false);
    };
    DateInputField.prototype.toggleDatePicker = function (open) {
        if (open === void 0) { open = !this.state.isDatePickerOpen; }
        if (!this.props.hasDatePicker || open === this.state.isDatePickerOpen) {
            return;
        }
        this.setState({ isDatePickerOpen: open });
    };
    DateInputField.prototype.confirmIfChanged = function (date) {
        var _a, _b;
        // TODO: ENTER or onBlur on an untouched field triggers a confirm event because the parser strips the time...bug in `getParsedDate`?
        if (date.getTime() !== this.props.selectedDate.getTime()) {
            (_b = (_a = this.props).onConfirm) === null || _b === void 0 ? void 0 : _b.call(_a, date);
        }
        else {
            this.resetState();
        }
    };
    DateInputField.prototype.closeAndConfirm = function (date) {
        this.close();
        this.confirmIfChanged(date);
    };
    DateInputField.prototype.getFormattedDate = function (date) {
        return Date_1.getDateFormatter(this.props.displayFormat)(date);
    };
    DateInputField.prototype.isOutlineTextField = function () {
        return this.props.dateInputFieldType === DateInputFieldType.Outline;
    };
    DateInputField.prototype.renderTextField = function () {
        var _a;
        var hasDatePicker = this.props.hasDatePicker;
        var inputValue = (_a = this.state.inputText, (_a !== null && _a !== void 0 ? _a : this.getFormattedDate(this.props.selectedDate)));
        var parsedDate = Date_1.getParsedDate(inputValue, this.props.terminus);
        var numCols = 7;
        var containerStyle = tslib_1.__assign(tslib_1.__assign({}, this.props.style), { 
            // maxWidth is the width of the picker, because input width cannot be wider than the picker.
            // cell width (30px) * colNum + Spacing.DefaultSpace * 2 + Sizing.BorderWidth * 2
            maxWidth: 30 * numCols + TabStyles_1.TabStyles.Spacing.DefaultSpace * 2 + TabStyles_1.TabStyles.Sizing.BorderWidth * 2, position: 'relative' });
        return (React.createElement("div", { onBlur: this.handleBlur, style: containerStyle },
            React.createElement(SharedWidgets_1.TextFieldWidget, tslib_1.__assign({}, (hasDatePicker && {
                'aria-expanded': !!this.state.isDatePickerOpen,
                'aria-haspopup': 'dialog',
                'aria-controls': (this.state.isDatePickerOpen ? this.datePickerId : undefined),
                role: 'combobox',
            }), { "aria-labelledby": this.props['aria-labelledby'], className: TextFieldContainerStyleName, disabled: this.props.disabled, kind: this.isOutlineTextField() ? 'outline' : 'line', label: this.props.label, 
                // TODO use ZWS? careful of isTruthy/isFalsy tests
                message: this.props.errorText || this.props.message || (!parsedDate ? Localize_1.Messages.enterValidDate() : ''), onChange: this.handleInputChange, onKeyDown: this.handleInputKeyDown, placeholder: this.props.placeholder, ref: this.handleInputRef, style: TextFieldStyle, testId: this.props.testId + "-text-field", valid: (!parsedDate || this.props.errorText) ? false : this.props.valid, value: inputValue })),
            hasDatePicker && this.renderDropdownButton()));
    };
    DateInputField.prototype.renderDropdownButton = function () {
        var baseStyle = {
            borderRadius: 0,
            cursor: 'pointer',
            display: 'inline-flex',
            height: Sizing.RowHeight - 2 * Sizing.BorderWidth,
            minWidth: 0,
            position: 'absolute',
            right: 0,
            top: Sizing.BorderWidth + this.state.measuredLabelHeight,
        };
        var outlineStyle = tslib_1.__assign(tslib_1.__assign({}, baseStyle), { borderLeft: "1px solid " + Colors.L3, right: Sizing.BorderWidth });
        var buttonProps = {
            buttonRef: this.handleButtonRef,
            buttonType: SharedWidgets_1.ButtonType.IconOutline,
            disableTabAccessibility: true,
            disabled: this.props.disabled,
            getContent: function (state) { return React.createElement(DomWidgets_1.Img, { draggable: false, src: Icons_1.encodeSvg(Icons_1.DropdownArrowIcon.icon(state)) }); },
            handleClick: this.handleButtonClick,
            style: this.isOutlineTextField() ? outlineStyle : baseStyle,
            testId: this.props.testId,
        };
        return (React.createElement(SharedWidgets_1.ButtonWidget, tslib_1.__assign({}, buttonProps)));
    };
    DateInputField.prototype.renderOverlay = function () {
        var datePicker = this.state.isDatePickerOpen && this.props.hasDatePicker && this.renderDatePicker();
        if (!datePicker || !this.inputElement) {
            return null;
        }
        return (React.createElement(Overlay_1.Overlay, { allowAutoPosition: true, anchorEl: this.inputElement, anchorOrigin: OverlayAnchorOrigin, 
            // tslint:disable-next-line:deprecation
            stackingRootId: this.props.stackingRootId, portalEventTrapOverrides: this.portalEventTrapOverrides, zIndex: this.props.zIndex },
            React.createElement("div", { id: this.datePickerId, ref: this.handleOverlayRef, role: 'dialog', style: DialogStyle, tabIndex: -1 }, datePicker)));
    };
    DateInputField.prototype.render = function () {
        return (React.createElement("div", { "data-tb-test-id": this.props.testId },
            this.renderTextField(),
            this.renderOverlay()));
    };
    // tslint:disable-next-line:max-line-length
    DateInputField.defaultProps = {
        dateInputFieldType: DateInputFieldType.Line,
        displayFormat: DateFormat.ShortDateWithFullYear,
        hasDatePicker: true,
        selectedDate: new Date(),
        showDatePickerWeekNumbers: false,
    };
    return DateInputField;
}(React.Component));
exports.DateInputField = DateInputField;


/***/ }),

/***/ "./lib/src/widgets/DatePicker/CarouselWidget.js":
/*!******************************************************!*\
  !*** ./lib/src/widgets/DatePicker/CarouselWidget.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var Icons_1 = __webpack_require__(/*! ../../icons/Icons */ "./lib/src/icons/Icons.js");
var SharedWidgets_1 = __webpack_require__(/*! ../../SharedWidgets */ "./lib/src/SharedWidgets.js");
var DomWidgets_1 = __webpack_require__(/*! ../DomWidgets */ "./lib/src/widgets/DomWidgets.js");
var CarouselStyleName = TypeStyle.style({
    alignItems: 'center',
    display: 'flex',
    justifyContent: 'space-between',
});
var ButtonStyleName = TypeStyle.style({
    height: 30,
    width: 30,
});
function buttonIconFactory(icon) {
    return function (state) { return React.createElement(DomWidgets_1.Img, { draggable: false, height: icon.height, src: Icons_1.encodeSvg(icon.icon(state)), width: icon.width }); };
}
var DynamicLeftArrowIcon = buttonIconFactory(Icons_1.StepperLeftIcon);
var DynamicRightArrowIcon = buttonIconFactory(Icons_1.StepperRightIcon);
// tslint:disable-next-line:max-line-length
exports.CarouselWidget = function (_a) {
    var children = _a.children, id = _a.id, nextButtonTitle = _a.nextButtonTitle, onNextClick = _a.onNextClick, onPreviousClick = _a.onPreviousClick, prevButtonTitle = _a.prevButtonTitle, role = _a.role, style = _a.style;
    var _b = React.useState(false), focusWithin = _b[0], setFocusWithin = _b[1];
    var prevMonthButton = React.createElement(SharedWidgets_1.ButtonWidget, { buttonType: SharedWidgets_1.ButtonType.Icon, className: ButtonStyleName, getContent: DynamicLeftArrowIcon, handleClick: onPreviousClick, testId: 'stepper-left', title: prevButtonTitle });
    var nextMonthButton = React.createElement(SharedWidgets_1.ButtonWidget, { buttonType: SharedWidgets_1.ButtonType.Icon, className: ButtonStyleName, getContent: DynamicRightArrowIcon, handleClick: onNextClick, testId: 'stepper-right', title: nextButtonTitle });
    return (React.createElement("div", { className: CarouselStyleName, onBlur: function () { return setFocusWithin(false); }, onFocus: function () { return setFocusWithin(true); }, style: style },
        prevMonthButton,
        React.createElement("span", { id: id, role: role, "aria-live": focusWithin ? 'assertive' : 'off', "aria-atomic": true }, children),
        nextMonthButton));
};


/***/ }),

/***/ "./lib/src/widgets/DatePicker/DatePickerBody.js":
/*!******************************************************!*\
  !*** ./lib/src/widgets/DatePicker/DatePickerBody.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var DatePickerWidgetStyles_1 = __webpack_require__(/*! ../../styles/DatePickerWidgetStyles */ "./lib/src/styles/DatePickerWidgetStyles.js");
var BrowserDetection_1 = __webpack_require__(/*! ../../utils/BrowserDetection */ "./lib/src/utils/BrowserDetection.js");
var Date_1 = __webpack_require__(/*! ../../utils/Date */ "./lib/src/utils/Date.js");
var DomUtil_1 = __webpack_require__(/*! ../../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var FocusIndicator_1 = __webpack_require__(/*! ../../utils/FocusIndicator */ "./lib/src/utils/FocusIndicator.js");
var DatePickerRow_1 = __webpack_require__(/*! ./DatePickerRow */ "./lib/src/widgets/DatePicker/DatePickerRow.js");
var DatePickerBody = /** @class */ (function (_super) {
    tslib_1.__extends(DatePickerBody, _super);
    function DatePickerBody() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            hasFocus: false,
        };
        _this.handleRef = function (ref) {
            _this.element = ref;
        };
        _this.handleKeyDown = function (e) {
            var startDayOfWeek = Date_1.getStartDayOfWeek(_this.props.showWeekNumbers);
            var key = e.key;
            if (BrowserDetection_1.isCtrl(e)) {
                switch (key) {
                    case 'Home':
                        _this.handleFocusedDateChange(Date_1.getFirstDayOfMonth(_this.props.focusedDate));
                        break;
                    case 'End':
                        _this.handleFocusedDateChange(Date_1.getLastDayOfMonth(_this.props.focusedDate));
                        break;
                    default:
                        return;
                }
            }
            else if (e.altKey) {
                switch (key) {
                    case 'PageDown':
                        _this.handleFocusedDateChange(Date_1.getDateWithYearOffset(_this.props.focusedDate, 1));
                        break;
                    case 'PageUp':
                        _this.handleFocusedDateChange(Date_1.getDateWithYearOffset(_this.props.focusedDate, -1));
                        break;
                    default:
                        return;
                }
            }
            else {
                switch (key) {
                    case 'ArrowRight':
                        _this.handleFocusedDateChange(Date_1.getDateWithDayOffset(_this.props.focusedDate, 1));
                        break;
                    case 'ArrowLeft':
                        _this.handleFocusedDateChange(Date_1.getDateWithDayOffset(_this.props.focusedDate, -1));
                        break;
                    case 'ArrowUp':
                        _this.handleFocusedDateChange(Date_1.getDateWithDayOffset(_this.props.focusedDate, -7));
                        break;
                    case 'ArrowDown':
                        _this.handleFocusedDateChange(Date_1.getDateWithDayOffset(_this.props.focusedDate, 7));
                        break;
                    case 'PageDown':
                        _this.handleFocusedDateChange(Date_1.getDateWithMonthOffset(_this.props.focusedDate, 1));
                        break;
                    case 'PageUp':
                        _this.handleFocusedDateChange(Date_1.getDateWithMonthOffset(_this.props.focusedDate, -1));
                        break;
                    case 'Home':
                        _this.handleFocusedDateChange(Date_1.getFirstDayOfWeek(_this.props.focusedDate, startDayOfWeek));
                        break;
                    case 'End':
                        _this.handleFocusedDateChange(Date_1.getLastDayOfWeek(_this.props.focusedDate, startDayOfWeek));
                        break;
                    case ' ':
                    case 'Enter':
                        break; // don't scroll the page or submit a form etc
                    default:
                        return;
                }
            }
            e.preventDefault();
            e.stopPropagation();
        };
        _this.handleKeyUp = function (e) {
            var key = e.key;
            switch (key) {
                case ' ':
                    if (!_this.props.isDateDisabled || !_this.props.isDateDisabled(_this.props.focusedDate)) {
                        _this.props.onChange(_this.props.focusedDate);
                    }
                    break;
                case 'Enter':
                    if (!_this.props.isDateDisabled || !_this.props.isDateDisabled(_this.props.focusedDate)) {
                        _this.props.onConfirm(_this.props.focusedDate);
                    }
                    break;
                default:
                    return;
            }
            e.preventDefault();
            e.stopPropagation();
        };
        _this.handleFocusedDateChange = function (date) {
            if (!_this.state.hasFocus) {
                _this.setState({ hasFocus: true });
            }
            _this.props.onFocusedDateChange(date);
        };
        _this.handleBlur = function (e) {
            var relatedTarget = DomUtil_1.findBlurRelatedTarget(e);
            if (_this.element && !_this.element.contains(relatedTarget)) {
                if (_this.state.hasFocus) {
                    _this.setState({ hasFocus: false });
                }
            }
        };
        return _this;
    }
    DatePickerBody.prototype.render = function () {
        var startDayOfWeek = Date_1.getStartDayOfWeek(this.props.showWeekNumbers);
        var currentPageStartDate = Date_1.getFirstDisplayedDate(this.props.focusedDate, startDayOfWeek);
        var rows = [];
        var rowNum = 6;
        var daysOfWeekNum = 7;
        for (var i = 0; i < rowNum; i++) {
            var rowProps = {
                bodyHasFocus: this.state.hasFocus,
                focusedDate: this.props.focusedDate,
                isDateDisabled: this.props.isDateDisabled,
                onChange: this.props.onChange,
                onFocusedDateChange: this.handleFocusedDateChange,
                selectedDate: this.props.selectedDate,
                showWeekNumbers: this.props.showWeekNumbers,
                startDate: Date_1.getDateWithDayOffset(currentPageStartDate, i * daysOfWeekNum),
            };
            rows.push(React.createElement(DatePickerRow_1.DatePickerRow, tslib_1.__assign({ key: i }, rowProps)));
        }
        return (React.createElement(FocusIndicator_1.__UNSTABLE__INTERNAL__FocusIndicator, null,
            React.createElement("div", { onBlur: this.handleBlur, onKeyDown: this.handleKeyDown, onKeyUp: this.handleKeyUp, ref: this.handleRef, style: DatePickerWidgetStyles_1.datePickerBodyStyle }, rows)));
    };
    return DatePickerBody;
}(React.PureComponent));
exports.DatePickerBody = DatePickerBody;


/***/ }),

/***/ "./lib/src/widgets/DatePicker/DatePickerCell.js":
/*!******************************************************!*\
  !*** ./lib/src/widgets/DatePicker/DatePickerCell.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var DatePickerWidgetStyles_1 = __webpack_require__(/*! ../../styles/DatePickerWidgetStyles */ "./lib/src/styles/DatePickerWidgetStyles.js");
var FocusIndicators_1 = __webpack_require__(/*! ../../styles/FocusIndicators */ "./lib/src/styles/FocusIndicators.js");
var PointerEvents_1 = __webpack_require__(/*! ../../utils/PointerEvents */ "./lib/src/utils/PointerEvents.js");
var CellStyleName = TypeStyle.style(FocusIndicators_1.PreFocusIndicator, { $nest: { '&:focus': { position: 'relative' } } });
var DatePickerCell = /** @class */ (function (_super) {
    tslib_1.__extends(DatePickerCell, _super);
    function DatePickerCell() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleRef = function (element) {
            _this.element = element;
        };
        return _this;
    }
    DatePickerCell.prototype.componentDidMount = function () {
        this.syncFocus();
    };
    DatePickerCell.prototype.componentDidUpdate = function () {
        this.syncFocus();
    };
    DatePickerCell.prototype.syncFocus = function () {
        if (this.element && this.props.isFocused) {
            this.element.focus();
        }
    };
    DatePickerCell.prototype.getStyle = function (isDisabled, isInCurrMonth, isSelected, isToday) {
        var style;
        if (!isInCurrMonth) {
            style = DatePickerWidgetStyles_1.datePickerCellStyles.inOtherMonths;
        }
        else if (isToday && isSelected) {
            style = DatePickerWidgetStyles_1.datePickerCellStyles.todaySelected;
        }
        else if (isToday) {
            style = DatePickerWidgetStyles_1.datePickerCellStyles.today;
        }
        else if (isSelected) {
            style = DatePickerWidgetStyles_1.datePickerCellStyles.selected;
        }
        else {
            style = DatePickerWidgetStyles_1.datePickerCellStyles.default;
        }
        if (isDisabled) {
            style = tslib_1.__assign(tslib_1.__assign({}, style), DatePickerWidgetStyles_1.datePickerCellStyles.disabled);
        }
        return style;
    };
    DatePickerCell.prototype.render = function () {
        var _a = this.props, isInCurrMonth = _a.isInCurrMonth, isDisabled = _a.isDisabled, isToday = _a.isToday, isSelected = _a.isSelected, isTabbable = _a.isTabbable;
        var style = this.getStyle(!!isDisabled, !!isInCurrMonth, !!isSelected, !!isToday);
        // cells outside the current month should not be focusable when clicked
        var tabIndex = isInCurrMonth ? isTabbable ? 0 : -1 : undefined;
        var cellProps = {
            'aria-current': isToday || undefined,
            'aria-disabled': isDisabled || undefined,
            'aria-label': this.props['aria-label'],
            'aria-selected': isSelected || undefined,
            className: CellStyleName,
            onFocus: this.props.onFocus,
            role: 'gridcell',
            style: style,
            tabIndex: tabIndex,
        };
        return (React.createElement(PointerEvents_1.PointerEventWrapper, { pointerClick: this.props.onClick },
            React.createElement("div", tslib_1.__assign({}, cellProps, { ref: this.handleRef }), this.props.children)));
    };
    return DatePickerCell;
}(React.PureComponent));
exports.DatePickerCell = DatePickerCell;


/***/ }),

/***/ "./lib/src/widgets/DatePicker/DatePickerDayOfWeekHeader.js":
/*!*****************************************************************!*\
  !*** ./lib/src/widgets/DatePicker/DatePickerDayOfWeekHeader.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var DatePickerWidgetStyles_1 = __webpack_require__(/*! ../../styles/DatePickerWidgetStyles */ "./lib/src/styles/DatePickerWidgetStyles.js");
var Date_1 = __webpack_require__(/*! ../../utils/Date */ "./lib/src/utils/Date.js");
var DatePickerDayOfWeekHeader = /** @class */ (function (_super) {
    tslib_1.__extends(DatePickerDayOfWeekHeader, _super);
    function DatePickerDayOfWeekHeader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DatePickerDayOfWeekHeader.prototype.getDayOfWeekHeader = function () {
        var startDayOfWeek = Date_1.getStartDayOfWeek(!!this.props.showWeekNumbers);
        var dayOfWeek = Date_1.getLocalizedDaysOfWeek(startDayOfWeek);
        if (this.props.showWeekNumbers) {
            dayOfWeek.unshift('#');
        }
        return dayOfWeek;
    };
    DatePickerDayOfWeekHeader.prototype.render = function () {
        var _this = this;
        var weekOfDayHeader = [];
        this.getDayOfWeekHeader().forEach(function (header, index) {
            var style = _this.props.showWeekNumbers && index === 0 ?
                DatePickerWidgetStyles_1.datePickerCellStyles.isoWeekNumColHeader :
                DatePickerWidgetStyles_1.datePickerCellStyles.dayOfWeekColHeader;
            weekOfDayHeader.push(React.createElement("div", { key: index, style: style, role: 'columnheader' }, header));
        });
        return (React.createElement("div", { style: DatePickerWidgetStyles_1.datePickerDayOfWeekHeaderStyle, role: 'rowheader' }, weekOfDayHeader));
    };
    return DatePickerDayOfWeekHeader;
}(React.Component));
exports.DatePickerDayOfWeekHeader = DatePickerDayOfWeekHeader;


/***/ }),

/***/ "./lib/src/widgets/DatePicker/DatePickerRow.js":
/*!*****************************************************!*\
  !*** ./lib/src/widgets/DatePicker/DatePickerRow.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var DatePickerCell_1 = __webpack_require__(/*! ./DatePickerCell */ "./lib/src/widgets/DatePicker/DatePickerCell.js");
var Date_1 = __webpack_require__(/*! ../../utils/Date */ "./lib/src/utils/Date.js");
var Localize_1 = __webpack_require__(/*! ../../../gen-src/Localize */ "./lib/gen-src/Localize.js");
var DatePickerWidgetStyles_1 = __webpack_require__(/*! ../../styles/DatePickerWidgetStyles */ "./lib/src/styles/DatePickerWidgetStyles.js");
var DatePickerRow = /** @class */ (function (_super) {
    tslib_1.__extends(DatePickerRow, _super);
    function DatePickerRow() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DatePickerRow.prototype.getCell = function (index) {
        var _this = this;
        var cellDate = Date_1.getDateWithDayOffset(this.props.startDate, index);
        var isDisabled = this.props.isDateDisabled && this.props.isDateDisabled(cellDate);
        var isInCurrMonth = cellDate.getMonth() === this.props.focusedDate.getMonth();
        var isSelected = Date_1.areSameDates(cellDate, this.props.selectedDate);
        var isToday = Date_1.areSameDates(cellDate, new Date());
        var isTabbable = Date_1.areSameDates(cellDate, this.props.focusedDate);
        var isFocused = isTabbable && this.props.bodyHasFocus;
        var handleFocus = function () { return _this.props.onFocusedDateChange(cellDate); };
        var handleClick = function (e) {
            e.preventDefault(); // TFS 1079434
            if (!isInCurrMonth) {
                _this.props.onFocusedDateChange(cellDate);
            }
            if (!isDisabled) {
                _this.props.onChange(cellDate);
            }
        };
        var dateLabel = Localize_1.Formatters.formatFullDate(cellDate);
        var weekNumLabel = this.props.showWeekNumbers ?
            "" + Localize_1.Messages.weekNumber({ weekNum: Date_1.getISOWeekNum(this.props.startDate).toString() })
            : '';
        var cellProps = {
            'aria-label': (dateLabel + " " + weekNumLabel).trim(),
            isDisabled: isDisabled,
            isFocused: isFocused,
            isInCurrMonth: isInCurrMonth,
            isSelected: isSelected,
            isTabbable: isTabbable,
            isToday: isToday,
            onClick: handleClick,
            onFocus: handleFocus,
        };
        return (React.createElement(DatePickerCell_1.DatePickerCell, tslib_1.__assign({ key: index }, cellProps), cellDate.getDate()));
    };
    DatePickerRow.prototype.render = function () {
        var cells = [];
        var daysOfWeekNum = 7;
        for (var i = 0; i < daysOfWeekNum; i++) {
            cells.push(this.getCell(i));
        }
        if (this.props.showWeekNumbers) {
            var currISOWeekNum = Date_1.getISOWeekNum(this.props.startDate);
            var weekNumLabel = Localize_1.Messages.weekNumber({ weekNum: currISOWeekNum.toString() });
            var weekNumCellProps = {
                style: DatePickerWidgetStyles_1.datePickerCellStyles.isoWeekNum,
                'aria-label': weekNumLabel,
                role: 'gridcell'
            };
            cells.unshift(React.createElement("div", tslib_1.__assign({}, weekNumCellProps, { key: 'iso-week' }), currISOWeekNum));
        }
        return (React.createElement("div", { style: { display: 'flex' }, role: 'row' }, cells));
    };
    return DatePickerRow;
}(React.PureComponent));
exports.DatePickerRow = DatePickerRow;


/***/ }),

/***/ "./lib/src/widgets/DatePicker/DatePickerWidget.js":
/*!********************************************************!*\
  !*** ./lib/src/widgets/DatePicker/DatePickerWidget.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var ReactDOM = __webpack_require__(/*! react-dom */ "react-dom");
var DatePickerBody_1 = __webpack_require__(/*! ./DatePickerBody */ "./lib/src/widgets/DatePicker/DatePickerBody.js");
var DatePickerWidgetStyles_1 = __webpack_require__(/*! ../../styles/DatePickerWidgetStyles */ "./lib/src/styles/DatePickerWidgetStyles.js");
var DatePickerDayOfWeekHeader_1 = __webpack_require__(/*! ./DatePickerDayOfWeekHeader */ "./lib/src/widgets/DatePicker/DatePickerDayOfWeekHeader.js");
var Date_1 = __webpack_require__(/*! ../../utils/Date */ "./lib/src/utils/Date.js");
var Localize_1 = __webpack_require__(/*! ../../../gen-src/Localize */ "./lib/gen-src/Localize.js");
var CarouselWidget_1 = __webpack_require__(/*! ./CarouselWidget */ "./lib/src/widgets/DatePicker/CarouselWidget.js");
var DomUtil_1 = __webpack_require__(/*! ../../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var DatePickerWidget = /** @class */ (function (_super) {
    tslib_1.__extends(DatePickerWidget, _super);
    function DatePickerWidget(props) {
        var _this = _super.call(this, props) || this;
        _this.headerId = DomUtil_1.generateId();
        _this.handleOnConfirm = function (date) {
            if (_this.props.onConfirm) {
                _this.props.onConfirm(date);
            }
        };
        _this.handleOnChange = function (date) {
            if (_this.props.onChange && date.getTime() !== _this.props.selectedDate.getTime()) {
                _this.props.onChange(date);
            }
        };
        _this.handleFocusedDateChange = function (date) {
            if (date !== _this.state.focusedDate) {
                _this.setState({ focusedDate: date });
            }
        };
        _this.handleClickPrevMonth = function () {
            _this.handleFocusedDateChange(Date_1.getDateWithMonthOffset(_this.state.focusedDate, -1));
        };
        _this.handleClickNextMonth = function () {
            _this.handleFocusedDateChange(Date_1.getDateWithMonthOffset(_this.state.focusedDate, 1));
        };
        _this.isDateDisabled = function (date) {
            var _a, _b;
            return !!((_b = (_a = _this.props).isDateDisabled) === null || _b === void 0 ? void 0 : _b.call(_a, date));
        };
        _this.state = {
            focusedDate: _this.props.selectedDate,
        };
        return _this;
    }
    DatePickerWidget.prototype.componentDidMount = function () {
        if (this.props.autofocus) {
            var tabbables = ReactDOM.findDOMNode(this).querySelectorAll('[tabindex="0"]');
            if (tabbables.length > 0) {
                DomUtil_1.timeoutFocus(tabbables[tabbables.length - 1]);
            }
        }
    };
    DatePickerWidget.prototype.componentDidUpdate = function (prevProps) {
        if (prevProps.selectedDate !== this.props.selectedDate) {
            this.setState({ focusedDate: this.props.selectedDate });
        }
    };
    DatePickerWidget.prototype.getDisplayedMonthAndYear = function () {
        return Localize_1.Formatters.formatFullMonthAndFullYear(this.state.focusedDate);
    };
    DatePickerWidget.prototype.render = function () {
        var displayedMonthAndYear = this.getDisplayedMonthAndYear();
        var headerProps = {
            id: this.headerId,
            nextButtonTitle: Localize_1.Messages.nextMonth(),
            onNextClick: this.handleClickNextMonth,
            onPreviousClick: this.handleClickPrevMonth,
            prevButtonTitle: Localize_1.Messages.previousMonth(),
            role: 'heading',
            style: DatePickerWidgetStyles_1.datePickerHeaderStyle,
        };
        var bodyProps = {
            focusedDate: this.state.focusedDate,
            isDateDisabled: this.isDateDisabled,
            onChange: this.handleOnChange,
            onConfirm: this.handleOnConfirm,
            onFocusedDateChange: this.handleFocusedDateChange,
            selectedDate: this.props.selectedDate,
            showWeekNumbers: !!this.props.showWeekNumbers,
        };
        return (React.createElement("div", { style: DatePickerWidgetStyles_1.datePickerWidgetStyle, "data-tb-test-id": this.props.testId },
            React.createElement(CarouselWidget_1.CarouselWidget, tslib_1.__assign({}, headerProps), displayedMonthAndYear),
            React.createElement("div", { "aria-labelledby": this.headerId, role: 'grid', "aria-rowcount": -1 },
                React.createElement(DatePickerDayOfWeekHeader_1.DatePickerDayOfWeekHeader, { showWeekNumbers: this.props.showWeekNumbers }),
                React.createElement(DatePickerBody_1.DatePickerBody, tslib_1.__assign({}, bodyProps)))));
    };
    DatePickerWidget.defaultProps = {
        selectedDate: new Date(),
    };
    return DatePickerWidget;
}(React.Component));
exports.DatePickerWidget = DatePickerWidget;


/***/ }),

/***/ "./lib/src/widgets/Dialog/DialogBody.js":
/*!**********************************************!*\
  !*** ./lib/src/widgets/Dialog/DialogBody.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var DialogWidget_1 = __webpack_require__(/*! ./DialogWidget */ "./lib/src/widgets/Dialog/DialogWidget.js");
var BodyStyles = {
    boxSizing: 'border-box',
    flexGrow: 1,
    outline: 'none',
    overflow: 'auto',
    WebkitOverflowScrolling: 'touch',
};
function getBodyPaddingStyle(type, showFooter) {
    var style = {
        paddingTop: 0,
        paddingRight: TabStyles_1.TabStyles.Spacing.LargeSpace,
        paddingBottom: TabStyles_1.TabStyles.Spacing.LargeSpace,
        paddingLeft: TabStyles_1.TabStyles.Spacing.LargeSpace
    };
    switch (type) {
        case DialogWidget_1.DialogType.NormalWithTitleBar:
            style.paddingTop = TabStyles_1.TabStyles.Spacing.LargeSpace;
            break;
        case DialogWidget_1.DialogType.LightweightTitleBar:
            style.paddingLeft = TabStyles_1.TabStyles.Spacing.ExtraLargeSpace - TabStyles_1.TabStyles.Sizing.BorderWidth;
            style.paddingRight = style.paddingLeft;
            break;
        case DialogWidget_1.DialogType.Uber:
            style.paddingTop = TabStyles_1.TabStyles.Spacing.MediumSpace;
            break;
        default:
            break;
    }
    if (showFooter) {
        style.paddingBottom = 0;
    }
    return style;
}
exports.getBodyPaddingStyle = getBodyPaddingStyle;
exports.DialogBody = function (props) {
    return React.createElement("div", { children: props.children, "data-tb-test-id": Declarative_1.makeTestId(props.testId, 'Body'), id: Declarative_1.makeTestId(props.testId, 'Body-Id'), style: tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, BodyStyles), getBodyPaddingStyle(props.type, props.showFooter)), props.dialogBodyStyle) });
};
exports.DialogBody.displayName = 'DialogBody';


/***/ }),

/***/ "./lib/src/widgets/Dialog/DialogContent.js":
/*!*************************************************!*\
  !*** ./lib/src/widgets/Dialog/DialogContent.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var ReactDOM = __webpack_require__(/*! react-dom */ "react-dom");
var tabbable = __webpack_require__(/*! tabbable */ "./node_modules/tabbable/index.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var DomUtil_1 = __webpack_require__(/*! ../../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var DialogBody_1 = __webpack_require__(/*! ./DialogBody */ "./lib/src/widgets/Dialog/DialogBody.js");
var DialogFooter_1 = __webpack_require__(/*! ./DialogFooter */ "./lib/src/widgets/Dialog/DialogFooter.js");
var DialogHeader_1 = __webpack_require__(/*! ./DialogHeader */ "./lib/src/widgets/Dialog/DialogHeader.js");
var DialogWidget_1 = __webpack_require__(/*! ./DialogWidget */ "./lib/src/widgets/Dialog/DialogWidget.js");
var DialogContentStyles = {
    boxSizing: 'border-box',
    display: 'flex',
    flexDirection: 'column',
    flexGrow: 1,
    outline: 'none',
    overflow: 'hidden',
};
var DialogContent = /** @class */ (function (_super) {
    tslib_1.__extends(DialogContent, _super);
    function DialogContent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.sawESCkeyDown = false; // only handle ESC keyUp when dialog previously got ESC keyDown
        _this.handleDialogHeaderRef = function (header) {
            _this.dialogHeader = ReactDOM.findDOMNode(header);
        };
        _this.handleDialogKeyUp = function (e) {
            if (e.key === 'Escape' && _this.sawESCkeyDown) {
                _this.sawESCkeyDown = false;
                _this.props.onCloseRequest();
            }
        };
        _this.handleDialogKeyDown = function (e) {
            var _a, _b;
            if (e.key === 'Escape') {
                // eat Escape keyDown since we'll handle it in keyUp
                _this.sawESCkeyDown = true;
                e.preventDefault();
                e.stopPropagation();
                return;
            }
            else if (e.key === 'Tab') {
                // trap focus in the dialog
                var tabbables = tabbable(_this.dialog);
                var first = tabbables.length > 0 ? tabbables[0] : null;
                var last = tabbables.length > 0 ? tabbables[tabbables.length - 1] : null;
                if (e.target === last && !e.shiftKey) {
                    e.preventDefault();
                    (_a = first) === null || _a === void 0 ? void 0 : _a.focus();
                }
                else if (e.target === first && e.shiftKey) {
                    e.preventDefault();
                    (_b = last) === null || _b === void 0 ? void 0 : _b.focus();
                }
            }
        };
        return _this;
    }
    DialogContent.prototype.componentDidMount = function () {
        // Initially set the element to return focus to as the last active element.
        this.elementToReturnFocus = document.activeElement;
        this.dialog = ReactDOM.findDOMNode(this);
        if (!this.props.disableAutoFocus) {
            this.initializeFocusOnMount();
        }
        this.setFocusEventListener();
        document.addEventListener('focus', this.focusEventListener, true);
        // IE11 column-based flex containers need an explicit height to size flex children correctly. The symptom that we want to avoid
        // is when the content overflows the floater rather than shrinking, so apply this hack only if that happens.
        if (this.dialog.offsetHeight > this.dialog.parentElement.clientHeight) {
            this.dialog.style.height = this.dialog.parentElement.clientHeight + 'px';
        }
    };
    /**
     * It should focus on the first focusable element within the dialog content, otherwise focus on the first thing in the header
     * If no elements are focusable within the dialog it should throw an error.
     */
    DialogContent.prototype.initializeFocusOnMount = function () {
        var tabbables = tabbable(this.dialog);
        if (tabbables.length === 0) {
            throw Error('Something within the dialog must be focusable as to dismiss it');
        }
        // The first focusable element after the header if any elements exist or the first focusable element of the header if none do
        var idxOfElementToFocus = 0;
        if (!!this.dialogHeader) {
            for (var idx = 0; idx < tabbables.length; idx++) {
                if (!(this.dialogHeader.contains(tabbables[idx]))) {
                    idxOfElementToFocus = idx;
                    break;
                }
            }
        }
        var elementToFocus = tabbables[idxOfElementToFocus];
        // Queue this so that it occurs after the floater or overlay is positioned,
        // so that when the browser scrolls to the focused element it will scroll to the correct position.
        DomUtil_1.timeoutFocus(elementToFocus);
    };
    /**
     * If the dialog is nonModal it should keep track of the last element focused outside the dialog to be focused so when the dialog is
     * closed the focus can return to the last focused element.
     */
    DialogContent.prototype.setFocusEventListener = function () {
        var _this = this;
        this.focusEventListener = function (event) {
            if (!_this.props.isModal) {
                var target = event.target;
                if (!_this.dialog.contains(target)) {
                    _this.elementToReturnFocus = target;
                }
            }
        };
    };
    DialogContent.prototype.componentWillUnmount = function () {
        document.removeEventListener('focus', this.focusEventListener, true);
        if (this.props.shouldReturnFocusOnClose) {
            this.returnFocusToElement();
        }
    };
    /**
     * We need to return the focus to either the initial focused element if modal, or the last focused
     * element if nonModal.  We also need to dispatch the focus event so that it fires its onFocus
     * handlers.
     */
    DialogContent.prototype.returnFocusToElement = function () {
        /**
         * We must use setTimeout here because it is likely a focus event is causing the dialog to unmount.  We need
         * to queue this event so that it is called correctly.
         */
        DomUtil_1.timeoutFocus(this.elementToReturnFocus);
    };
    DialogContent.prototype.render = function () {
        var headerProps = tslib_1.__assign(tslib_1.__assign({}, this.props), { ref: this.handleDialogHeaderRef });
        var hasHeader = this.props.type !== DialogWidget_1.DialogType.Uber;
        return (React.createElement("div", { "aria-label": Declarative_1.conditional(!hasHeader, this.props.title), "aria-labelledby": Declarative_1.conditional(hasHeader && !!this.props.title, this.props.id), "aria-modal": this.props.isModal, "data-tb-test-id": Declarative_1.makeTestId(this.props.testId, 'Content'), onKeyDown: this.handleDialogKeyDown, onKeyUp: this.handleDialogKeyUp, role: 'dialog', style: tslib_1.__assign(tslib_1.__assign({}, DialogContentStyles), this.props.dialogContentStyle), tabIndex: -1 },
            hasHeader && React.createElement(DialogHeader_1.DialogHeader, tslib_1.__assign({}, headerProps)),
            React.createElement(DialogBody_1.DialogBody, { children: this.props.children, dialogBodyStyle: this.props.dialogBodyStyle, showFooter: this.props.showFooter, testId: this.props.testId, type: this.props.type }),
            this.props.showFooter &&
                React.createElement(DialogFooter_1.DialogFooter, { children: this.props.footerContent, sidePadding: DialogBody_1.getBodyPaddingStyle(this.props.type, this.props.showFooter).paddingRight, testId: this.props.testId })));
    };
    return DialogContent;
}(React.Component));
exports.DialogContent = DialogContent;


/***/ }),

/***/ "./lib/src/widgets/Dialog/DialogFooter.js":
/*!************************************************!*\
  !*** ./lib/src/widgets/Dialog/DialogFooter.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var FooterStyleName = TypeStyle.style({
    height: 48,
    flexShrink: 0,
});
var FooterContentStyleName = TypeStyle.style({
    height: '100%',
});
exports.DialogFooter = function (props) {
    return React.createElement("div", { className: FooterStyleName, "data-tb-test-id": Declarative_1.makeTestId(props.testId, 'Footer'), style: { padding: "0 " + props.sidePadding + "px" } }, props.children && React.createElement("div", { className: FooterContentStyleName, children: props.children }));
};
exports.DialogFooter.displayName = 'DialogFooter';
exports.DialogFooter.defaultProps = { sidePadding: TabStyles_1.TabStyles.Spacing.LargeSpace };


/***/ }),

/***/ "./lib/src/widgets/Dialog/DialogFooterButtonsWidget.js":
/*!*************************************************************!*\
  !*** ./lib/src/widgets/Dialog/DialogFooterButtonsWidget.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var SharedWidgets_1 = __webpack_require__(/*! ../../SharedWidgets */ "./lib/src/SharedWidgets.js");
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var getStyles = function () {
    return {
        ButtonsContainer: {
            alignItems: 'center',
            display: 'flex',
            height: '100%',
            justifyContent: 'flex-end'
        },
        FooterButton: {
            paddingLeft: TabStyles_1.TabStyles.Spacing.MediumSpace
        }
    };
};
var getFooterButtons = function (props) {
    return (props.buttons.map(function (buttonProps, idx) {
        return (React.createElement("div", { style: Declarative_1.conditional(idx !== 0, getStyles().FooterButton), key: idx },
            React.createElement(SharedWidgets_1.ButtonWidget, tslib_1.__assign({}, buttonProps))));
    }));
};
/**
 * These buttons shall be right-justified, vertically centered, and appropriately spaced.
 */
exports.DialogFooterButtonsWidget = function (props) {
    var containerProps = {
        'data-tb-test-id': Declarative_1.makeTestId(props.testId, 'Confirm-Cancel-Footer'),
        style: getStyles().ButtonsContainer
    };
    return (React.createElement("div", tslib_1.__assign({}, containerProps), getFooterButtons(props)));
};


/***/ }),

/***/ "./lib/src/widgets/Dialog/DialogHeader.js":
/*!************************************************!*\
  !*** ./lib/src/widgets/Dialog/DialogHeader.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var Localize_1 = __webpack_require__(/*! ../../../gen-src/Localize */ "./lib/gen-src/Localize.js");
var PreventUserSelect_1 = __webpack_require__(/*! ../../styles/PreventUserSelect */ "./lib/src/styles/PreventUserSelect.js");
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var TextEllipsis_1 = __webpack_require__(/*! ../../styles/TextEllipsis */ "./lib/src/styles/TextEllipsis.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var GlobalPointerEventCapturer_1 = __webpack_require__(/*! ../../utils/GlobalPointerEventCapturer */ "./lib/src/utils/GlobalPointerEventCapturer.js");
var PointerEvents_1 = __webpack_require__(/*! ../../utils/PointerEvents */ "./lib/src/utils/PointerEvents.js");
var UserInteraction_1 = __webpack_require__(/*! ../../utils/UserInteraction */ "./lib/src/utils/UserInteraction.js");
var CloseButtonWidget_1 = __webpack_require__(/*! ../Button/CloseButtonWidget */ "./lib/src/widgets/Button/CloseButtonWidget.js");
var DialogWidget_1 = __webpack_require__(/*! ./DialogWidget */ "./lib/src/widgets/Dialog/DialogWidget.js");
var getStyles = function () {
    return {
        DraggableHeader: {
            cursor: 'move',
        },
        Header: tslib_1.__assign(tslib_1.__assign({}, PreventUserSelect_1.PreventUserSelect), { flexShrink: 0, minHeight: TabStyles_1.TabStyles.Sizing.BaseUnit * 5 }),
        TitleBar: tslib_1.__assign({ fontSize: TabStyles_1.TabStyles.Typography.Sizing.Default, color: TabStyles_1.TabStyles.Typography.Color.Primary, backgroundColor: TabStyles_1.TabStyles.Colors.F2, height: '100%', minHeight: 'inherit', paddingRight: TabStyles_1.TabStyles.Spacing.LargeSpace, paddingLeft: TabStyles_1.TabStyles.Spacing.LargeSpace, display: 'flex', alignItems: 'center', lineHeight: 'normal' }, TextEllipsis_1.TextEllipsis),
        TitleBarWithCloseButton: {
            paddingRight: 0,
        },
        LightweightTitleBar: {
            fontSize: 20,
            height: '100%',
            minHeight: 'inherit',
            paddingTop: 20,
            paddingLeft: TabStyles_1.TabStyles.Spacing.ExtraLargeSpace - TabStyles_1.TabStyles.Sizing.BorderWidth,
            paddingRight: TabStyles_1.TabStyles.Spacing.ExtraLargeSpace - TabStyles_1.TabStyles.Sizing.BorderWidth,
            paddingBottom: TabStyles_1.TabStyles.Spacing.DefaultSpace,
            display: 'flex',
            alignItems: 'center',
            lineHeight: 'normal'
        },
        LightweightTitleBarCloseButton: {
            top: 10,
            right: 10,
            position: 'absolute'
        },
        Title: tslib_1.__assign({ flexGrow: 1 }, TextEllipsis_1.TextEllipsis),
    };
};
var DialogHeader = /** @class */ (function (_super) {
    tslib_1.__extends(DialogHeader, _super);
    function DialogHeader() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleStart = function (event) {
            if (!_this.isEventWithinCloseButton(event) && _this.props.positioningBehavior === DialogWidget_1.DialogPositioningBehavior.Draggable) {
                event.preventDefault();
                var clientPosition = UserInteraction_1.getClientPosition(event);
                var dialogClientRect = _this.props.getDraggableDialogClientRect();
                _this.startXPosition = clientPosition.x - dialogClientRect.left;
                _this.startYPosition = clientPosition.y - dialogClientRect.top;
                _this.addMouseEventListeners();
            }
        };
        /**
         * Moves the dialog container
         */
        _this.handleMove = function (event) {
            event.preventDefault();
            var clientPosition = UserInteraction_1.getClientPosition(event);
            _this.props.setDraggableDialogPosition({
                top: clientPosition.y - _this.startYPosition,
                left: clientPosition.x - _this.startXPosition
            });
        };
        _this.handleStop = function (event) {
            _this.removeMouseEventListeners();
        };
        _this.handleCloseButtonRef = function (ref) {
            _this.closeButtonElement = ref;
        };
        _this.handleCloseButtonClick = function (e) {
            var _a, _b;
            e.preventDefault();
            (_b = (_a = _this.props).onCloseRequest) === null || _b === void 0 ? void 0 : _b.call(_a);
        };
        _this.handleRef = function (ref) {
            if (_this.globalPointerEventCapturer) {
                _this.removeMouseEventListeners();
            }
            if (!ref) {
                return;
            }
            _this.globalPointerEventCapturer = new GlobalPointerEventCapturer_1.GlobalPointerEventCapturer(ref, _this.handleMove, _this.handleStop);
        };
        return _this;
    }
    DialogHeader.prototype.componentWillUnmount = function () {
        this.removeMouseEventListeners();
    };
    DialogHeader.prototype.addMouseEventListeners = function () {
        this.globalPointerEventCapturer.addListeners();
    };
    DialogHeader.prototype.removeMouseEventListeners = function () {
        this.globalPointerEventCapturer.removeListeners();
    };
    DialogHeader.prototype.isEventWithinCloseButton = function (event) {
        var target = event.target;
        return (!!this.closeButtonElement && this.closeButtonElement.contains(target));
    };
    DialogHeader.prototype.render = function () {
        var styles = getStyles();
        var headerStyle = tslib_1.__assign(tslib_1.__assign({}, styles.Header), Declarative_1.conditional(this.props.positioningBehavior === DialogWidget_1.DialogPositioningBehavior.Draggable, styles.DraggableHeader));
        var showTitleBar = false;
        var titleBarStyle = {};
        var closeButtonWrapperStyle = {
            display: 'inline-block',
        };
        if (this.props.type === DialogWidget_1.DialogType.NormalWithTitleBar) {
            showTitleBar = true;
            titleBarStyle = tslib_1.__assign(tslib_1.__assign({}, styles.TitleBar), Declarative_1.conditional(this.props.showCloseButton, styles.TitleBarWithCloseButton));
        }
        else if (this.props.type === DialogWidget_1.DialogType.LightweightTitleBar) {
            showTitleBar = true;
            titleBarStyle = tslib_1.__assign({}, styles.LightweightTitleBar);
            closeButtonWrapperStyle = tslib_1.__assign({}, styles.LightweightTitleBarCloseButton);
        }
        var closeButtonProps = {
            testId: this.props.testId,
            title: Localize_1.Messages.closeDialog(),
            onClick: this.handleCloseButtonClick,
            ref: this.handleCloseButtonRef
        };
        return (React.createElement(PointerEvents_1.PointerEventWrapper, { pointerDown: this.handleStart },
            React.createElement("div", { "data-tb-test-id": Declarative_1.makeTestId(this.props.testId, 'Header'), ref: this.handleRef, style: headerStyle }, showTitleBar &&
                React.createElement("div", { "data-tb-test-id": Declarative_1.makeTestId(this.props.testId, 'TitleBar'), style: titleBarStyle },
                    !!this.props.title &&
                        React.createElement("div", { children: this.props.title, id: this.props.id, style: styles.Title }),
                    this.props.showCloseButton &&
                        React.createElement("div", { style: closeButtonWrapperStyle },
                            React.createElement(CloseButtonWidget_1.DialogCloseButtonWidget, tslib_1.__assign({}, closeButtonProps)))))));
    };
    return DialogHeader;
}(React.Component));
exports.DialogHeader = DialogHeader;


/***/ }),

/***/ "./lib/src/widgets/Dialog/DialogWidget.js":
/*!************************************************!*\
  !*** ./lib/src/widgets/Dialog/DialogWidget.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var throttle = __webpack_require__(/*! lodash/throttle */ "./node_modules/lodash/throttle.js");
var React = __webpack_require__(/*! react */ "react");
var ReactDOM = __webpack_require__(/*! react-dom */ "react-dom");
var PreventUserSelect_1 = __webpack_require__(/*! ../../styles/PreventUserSelect */ "./lib/src/styles/PreventUserSelect.js");
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var BrowserDetection_1 = __webpack_require__(/*! ../../utils/BrowserDetection */ "./lib/src/utils/BrowserDetection.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var Geometry_1 = __webpack_require__(/*! ../../utils/Geometry */ "./lib/src/utils/Geometry.js");
var GlobalPointerEventCapturer_1 = __webpack_require__(/*! ../../utils/GlobalPointerEventCapturer */ "./lib/src/utils/GlobalPointerEventCapturer.js");
var Math_1 = __webpack_require__(/*! ../../utils/Math */ "./lib/src/utils/Math.js");
var OrientationChange_1 = __webpack_require__(/*! ../../utils/OrientationChange */ "./lib/src/utils/OrientationChange.js");
var Overlay_1 = __webpack_require__(/*! ../../utils/Overlay */ "./lib/src/utils/Overlay.js");
var ViewportConstrainedDom_1 = __webpack_require__(/*! ../../utils/ViewportConstrainedDom */ "./lib/src/utils/ViewportConstrainedDom.js");
var ViewportHelpers = __webpack_require__(/*! ../../utils/ViewportHelpers */ "./lib/src/utils/ViewportHelpers.js");
var FloaterWidget_1 = __webpack_require__(/*! ../FloaterWidget */ "./lib/src/widgets/FloaterWidget.js");
var GlassWidget_1 = __webpack_require__(/*! ../GlassWidget */ "./lib/src/widgets/GlassWidget.js");
var DialogContent_1 = __webpack_require__(/*! ./DialogContent */ "./lib/src/widgets/Dialog/DialogContent.js");
var DialogPositioningBehavior;
(function (DialogPositioningBehavior) {
    /** Centers the dialog on the page */
    DialogPositioningBehavior[DialogPositioningBehavior["Centered"] = 0] = "Centered";
    /** Maximizes the dialog */
    DialogPositioningBehavior[DialogPositioningBehavior["Maximized"] = 1] = "Maximized";
    /** Makes an initally centered dialog that can be dragged (Will not work with DialogType.Uber) */
    DialogPositioningBehavior[DialogPositioningBehavior["Draggable"] = 2] = "Draggable";
    /** Positions the dialog relative to an anchor element */
    DialogPositioningBehavior[DialogPositioningBehavior["Anchored"] = 3] = "Anchored";
})(DialogPositioningBehavior = exports.DialogPositioningBehavior || (exports.DialogPositioningBehavior = {}));
var DialogType;
(function (DialogType) {
    /** Dialog with a title bar. It can be draggable. */
    DialogType[DialogType["NormalWithTitleBar"] = 0] = "NormalWithTitleBar";
    /** Dialog without a title bar, but has a header space that makes it draggable */
    DialogType[DialogType["NormalWithoutTitleBar"] = 1] = "NormalWithoutTitleBar";
    /** Dialog with small top padding. It is not draggable. */
    DialogType[DialogType["Uber"] = 2] = "Uber";
    /** Dialog with a large title text but no visible bar. It can be draggable. */
    DialogType[DialogType["LightweightTitleBar"] = 3] = "LightweightTitleBar";
})(DialogType = exports.DialogType || (exports.DialogType = {}));
/**
 * Different modes for user-based dialog resizing (aka via drag handle).
 */
var DialogUserResizeMode;
(function (DialogUserResizeMode) {
    /** The dialog cannot be resized */
    DialogUserResizeMode["NotResizable"] = "not-resizable";
    /** The dialog can be resized horizontally */
    DialogUserResizeMode["Horizontal"] = "horizontal";
    /** The dialog can be resized vertically */
    DialogUserResizeMode["Vertical"] = "vertical";
    /** The dialog can be resized both vertically and horizontally */
    DialogUserResizeMode["Both"] = "both";
})(DialogUserResizeMode = exports.DialogUserResizeMode || (exports.DialogUserResizeMode = {}));
// This is exported for test purposes only
exports.SharedWidgetsDialogLabel = 'SharedWidgetsDialogLabel';
var ResizeAndRepositionDelayMs = 500;
var ResizeThrottleTime = 100;
var ViewportHorizontalMargins = 40;
var ViewportVerticalMargins = 40;
var dialogInstanceCount = 0;
var getStyles = function () {
    return {
        Dialog: tslib_1.__assign({ backgroundColor: TabStyles_1.TabStyles.Colors.White, borderColor: TabStyles_1.TabStyles.Colors.L5, borderRadius: TabStyles_1.TabStyles.Sizing.BorderRadius, borderStyle: 'solid', borderWidth: TabStyles_1.TabStyles.Sizing.BorderWidth, boxShadow: TabStyles_1.TabStyles.Shadow.Standard, cursor: 'default', display: 'flex', flexDirection: 'column' }, (BrowserDetection_1.isIE && { overflowY: 'auto' }))
    };
};
// tslint:disable-next-line:class-name
var DialogWidget = /** @class */ (function (_super) {
    tslib_1.__extends(DialogWidget, _super);
    function DialogWidget(props) {
        var _this = _super.call(this, props) || this;
        _this.dialogResizingEventCapturer = null;
        _this.throttledHandleAdjustPositionOnResize = throttle(function () { return _this.handleAdjustPositionOnResize(); }, ResizeThrottleTime);
        /**
         * On a resize event and if shouldAdjustPositionOnResizeAndIsNonMobile is true, this will fired
         * and try to fit the dialog on the screen depending upon the positioning behavior and state of
         * the dialog.
         */
        _this.handleAdjustPositionOnResize = function () {
            if (!_this.props.shouldAdjustPositionOnWindowResize) {
                return;
            }
            /**
             * Defect 646231:Dialog (Beta) Issue: Inconsistent resizing
             * On window resizes we were not resizing the sizingWrapper element. As a result, the content
             * within the Dialog Widget would resize; however the sizingWrapper element would not.
             * The end user effect was inconsistent resizing of the Dialog Widget and visual artifacts.
             */
            if (_this.sizingWrapper) {
                _this.sizingWrapper.updateSize();
            }
            _this.repositionDialog();
        };
        _this.startResizing = function (e) {
            if (e.target === e.currentTarget) {
                e.preventDefault();
                var startingRect_1 = _this.floaterWidget.getFloaterClientRect();
                var cardinal_1 = e.currentTarget.getAttribute('data-cardinal');
                _this.dialogResizingEventCapturer = new GlobalPointerEventCapturer_1.GlobalPointerEventCapturer(ReactDOM.findDOMNode(_this.sizingWrapper), function (mouseMoveEvent) { return _this.resizeDialog(mouseMoveEvent, startingRect_1, cardinal_1); }, _this.stopResizing);
                _this.dialogResizingEventCapturer.addListeners();
                _this.setState({ isResizing: true });
            }
        };
        _this.stopResizing = function () {
            var _a;
            (_a = _this.dialogResizingEventCapturer) === null || _a === void 0 ? void 0 : _a.removeListeners();
            _this.dialogResizingEventCapturer = null;
            _this.setState({ isResizing: false });
            if (_this.props.onUserResizeEnd) {
                _this.props.onUserResizeEnd(_this.state.width, _this.state.height);
            }
        };
        _this.handleFloaterWidgetRef = function (ref) {
            _this.floaterWidget = ref;
        };
        _this.handleOverlayRef = function (ref) {
            _this.overlay = ref;
        };
        _this.handleSizingWrapperRef = function (ref) {
            _this.sizingWrapper = ref;
        };
        _this.getDialogFloaterClientRect = function () {
            if (_this.floaterWidget) {
                return _this.floaterWidget.getFloaterClientRect();
            }
            throw new Error("Can't get draggable size of non-draggable dialog");
        };
        _this.dragBoundedDialogFloaterPosition = function (pos) {
            if (!_this.state.hasBeenDragged) {
                _this.setState({ hasBeenDragged: true });
            }
            if (_this.floaterWidget) {
                _this.floaterWidget.setPosition(_this.getBoundedFloaterPos(pos));
            }
        };
        _this.handleOrientationChange = function () {
            if (_this.resizeAndRepositionTimeoutId) {
                /*
                 * A new orientation change has occurred while waiting for the resize/reposition delay. We don't actually need
                 * to do the preparation routine, we just need to reset the delay.
                 */
                clearTimeout(_this.resizeAndRepositionTimeoutId);
                _this.resizeAndRepositionTimeoutId = window.setTimeout(_this.resizeAndRepositionCallback, ResizeAndRepositionDelayMs);
                return;
            }
            /**
             * After an orientation change the dialog may be in a position where it skews the visual viewport by being off the
             * page, so we need to hide it first.
             */
            _this.hideDialogAndThen(function (redisplayCallback) {
                /**
                 * For whatever reason iOS Safari is slow to update the visual viewport after hiding the dialog after an orientation
                 * change. The hack below fixes the visual jerkiness, but we still need a setTimeout for the internal values to update.
                 */
                _this.forceRepaintHack();
                /* Delay the resize and reposition so that we get the correct viewport values. */
                _this.resizeAndRepositionCallback = function () {
                    _this.resizeAndRepositionTimeoutId = null;
                    _this.resizeAndRepositionCallback = null;
                    _this.sizingWrapper.updateSize();
                    if (redisplayCallback) {
                        redisplayCallback();
                    }
                    _this.repositionDialog();
                };
                _this.resizeAndRepositionTimeoutId = window.setTimeout(_this.resizeAndRepositionCallback, ResizeAndRepositionDelayMs);
            });
        };
        // tslint:disable:deprecation
        _this.getAnchorClientRect = function () {
            if (_this.props.getAnchorClientRect) {
                return _this.props.getAnchorClientRect();
            }
            else if (_this.props.anchorEl) {
                return _this.props.anchorEl.getBoundingClientRect();
            }
            else {
                return undefined;
            }
        };
        _this.handleGlassEscape = function () {
            _this.props.onCloseRequest();
        };
        _this.instanceId = dialogInstanceCount++;
        _this.state = { hasBeenDragged: false, height: props.dialogHeight, isResizing: false, width: props.dialogWidth };
        return _this;
    }
    DialogWidget.prototype.addResizeEventListener = function () {
        window.addEventListener('resize', this.throttledHandleAdjustPositionOnResize);
    };
    DialogWidget.prototype.removeResizeEventListener = function () {
        window.removeEventListener('resize', this.throttledHandleAdjustPositionOnResize);
    };
    DialogWidget.prototype.resizeDialog = function (e, rect, cardinal) {
        e.preventDefault();
        var _a = this.props, dialogMinHeight = _a.dialogMinHeight, dialogMinWidth = _a.dialogMinWidth;
        var position = { top: rect.top, left: rect.left };
        var dimensions = { height: rect.height, width: rect.width };
        var clientY = Math_1.clamp(e.clientY, 0, document.documentElement.clientHeight);
        var clientX = Math_1.clamp(e.clientX, 0, document.documentElement.clientWidth);
        if (cardinal.indexOf('s') >= 0) {
            dimensions.height = Math.max(clientY - rect.top, dialogMinHeight);
        }
        else if (cardinal.indexOf('n') >= 0) {
            dimensions.height = rect.bottom - clientY;
            if (dimensions.height >= dialogMinHeight) {
                position.top = clientY;
            }
            else {
                dimensions.height = dialogMinHeight;
                position.top = rect.bottom - dimensions.height;
            }
        }
        if (cardinal.indexOf('e') >= 0) {
            dimensions.width = Math.max(clientX - rect.left, dialogMinWidth);
        }
        else if (cardinal.indexOf('w') >= 0) {
            dimensions.width = rect.right - clientX;
            if (dimensions.width >= dialogMinWidth) {
                position.left = clientX;
            }
            else {
                dimensions.width = dialogMinWidth;
                position.left = rect.right - dimensions.width;
            }
        }
        if (this.floaterWidget) {
            this.floaterWidget.setPosition(position);
            this.setState(dimensions);
        }
    };
    DialogWidget.prototype.repositionDialog = function () {
        switch (this.props.positioningBehavior) {
            case DialogPositioningBehavior.Centered:
            case DialogPositioningBehavior.Maximized:
                this.floaterWidget.centerInVisualViewport();
                break;
            case DialogPositioningBehavior.Draggable:
                if (this.state.hasBeenDragged) {
                    this.repositionDraggedDialog();
                }
                else {
                    this.floaterWidget.centerInVisualViewport();
                }
                break;
            case DialogPositioningBehavior.Anchored:
                if (this.overlay) {
                    this.overlay.setPlacement();
                }
                break;
            default:
                throw new Error("Invalid Dialog Positioning Behavior: " + this.props.positioningBehavior);
        }
    };
    /**
     * We save the dragged dialog position before hiding it because it is needed to reposition the dragged dialog.
     */
    DialogWidget.prototype.saveDraggedDialogPositionBeforeHide = function () {
        this.dragPositionBeforeHide = this.getDialogFloaterClientRect();
    };
    /**
     * To reposition a dragged dialog we need to take into account if it was hidden.  If it was hidden we use the
     * position before it was hidden. We need to use a single setPosition instead of one each for unhiding and repositioning
     * the dialog because if the original position before it was hidden is to the right of the viewport mobile chrome will try
     * to zoom out to show the dialog.
     */
    DialogWidget.prototype.repositionDraggedDialog = function () {
        var draggedOriginalPosition;
        if (!!this.dragPositionBeforeHide) {
            draggedOriginalPosition = this.dragPositionBeforeHide;
            // set it as undefined so if a reposition occurs from an window resize change it will not set this hide variable
            this.dragPositionBeforeHide = undefined;
        }
        else {
            draggedOriginalPosition = this.getDialogFloaterClientRect();
        }
        this.floaterWidget.setPosition(this.getBoundedFloaterPos(draggedOriginalPosition));
    };
    /**
     * Hides the dialog and then invokes the given callback. The given callback will be invoked with a reposition callback
     * as an argument. When invoked, the reposition callback will unhide and reposition the dialog.
     */
    DialogWidget.prototype.hideDialogAndThen = function (afterHideCallback) {
        var redisplayCallback = function () { return; };
        switch (this.props.positioningBehavior) {
            case DialogPositioningBehavior.Centered:
            case DialogPositioningBehavior.Maximized:
                this.floaterWidget.setPosition({ top: -10000, left: -10000 });
                break;
            case DialogPositioningBehavior.Draggable:
                this.saveDraggedDialogPositionBeforeHide();
                this.floaterWidget.setPosition({ top: -10000, left: -10000 });
                break;
            case DialogPositioningBehavior.Anchored:
                var node_1 = ReactDOM.findDOMNode(this.sizingWrapper);
                var savedDisplay_1 = node_1.style.display;
                node_1.style.display = 'none';
                redisplayCallback = function () {
                    node_1.style.display = savedDisplay_1;
                };
                break;
            default:
                throw new Error("Invalid Dialog Positioning Behavior: " + this.props.positioningBehavior);
        }
        afterHideCallback(redisplayCallback);
    };
    /* Forces a repaint in WebKit by querying offsetHeight. */
    DialogWidget.prototype.forceRepaintHack = function () {
        /**
         * The code here is adapted from
         * http://stackoverflow.com/questions/3485365/how-can-i-force-webkit-to-redraw-repaint-to-propagate-style-changes
         */
        var node = ReactDOM.findDOMNode(this);
        var savedDisplay = node.style.display;
        node.style.display = 'none';
        // tslint:disable-next-line:no-unused-expression
        node.offsetHeight;
        node.style.display = savedDisplay;
    };
    /**
     * Adjusts the given position if needed to keep the dialog on screen.
     */
    DialogWidget.prototype.getBoundedFloaterPos = function (pos) {
        var dialogClientRect = this.floaterWidget.getFloaterClientRect();
        var dialogRectAtGivenPos = {
            top: pos.top,
            left: pos.left,
            width: dialogClientRect.width,
            height: dialogClientRect.height
        };
        var visualViewport = ViewportHelpers.getVisualViewport();
        var windowRect = {
            top: 0,
            left: 0,
            width: visualViewport.width,
            height: visualViewport.height
        };
        return Geometry_1.computePositionToContainBounds(dialogRectAtGivenPos, windowRect);
    };
    // tslint:enable:deprecation
    DialogWidget.prototype.getPositionedDialogElem = function (dialogBody) {
        switch (this.props.positioningBehavior) {
            case DialogPositioningBehavior.Centered:
            case DialogPositioningBehavior.Draggable:
            case DialogPositioningBehavior.Maximized:
                var id = Declarative_1.makeTestId(this.props.testId, 'Dialog');
                return React.createElement(FloaterWidget_1.FloaterWidget, { portalEventTrapOverrides: this.props.portalEventTrapOverrides, testId: id, 
                    // tslint:disable-next-line:deprecation
                    stackingRootId: this.props.stackingRootId, ref: this.handleFloaterWidgetRef, zIndex: this.props.zIndex, shouldRecenterOnUpdate: !!this.props.shouldRecenterOnUpdate && !this.state.hasBeenDragged, wrapperTestId: Declarative_1.makeTestId(id, 'Floater'), children: dialogBody });
            case DialogPositioningBehavior.Anchored:
                var overlayProps = {
                    portalEventTrapOverrides: this.props.portalEventTrapOverrides,
                    getAnchorClientRect: this.getAnchorClientRect,
                    anchorOrigin: this.props.anchorOrigin || {
                        vertical: Overlay_1.VerticalOriginOption.bottom,
                        horizontal: Overlay_1.HorizontalOriginOption.left
                    },
                    stackedOrigin: this.props.stackedOrigin || {
                        vertical: Overlay_1.VerticalOriginOption.top,
                        horizontal: Overlay_1.HorizontalOriginOption.left
                    },
                    // tslint:disable-next-line:deprecation
                    stackingRootId: this.props.stackingRootId,
                    allowAutoPosition: true,
                    zIndex: this.props.zIndex,
                    leftFromOverlaidPosition: this.props.dialogStyle ? parseFloat(this.props.dialogStyle.left) || 0 : undefined,
                    topFromOverlaidPosition: this.props.dialogStyle ? parseFloat(this.props.dialogStyle.top) || 0 : undefined,
                };
                return React.createElement(Overlay_1.Overlay, tslib_1.__assign({}, overlayProps, { ref: this.handleOverlayRef, children: dialogBody }));
            default:
                throw new Error("Invalid Dialog Positioning Behavior: " + this.props.positioningBehavior);
        }
    };
    DialogWidget.prototype.getGlassElem = function () {
        var id = Declarative_1.makeTestId(this.props.testId, 'Dialog');
        return (React.createElement(GlassWidget_1.GlassWidget, { testId: id, handleClick: this.props.handleGlassClick, isTransparent: this.props.isGlassTransparent, 
            // tslint:disable-next-line:deprecation
            stackingRootId: this.props.stackingRootId, zIndex: this.props.zIndex, handleEscape: this.handleGlassEscape, wrapperTestId: Declarative_1.makeTestId(id, 'Glass') }));
    };
    DialogWidget.prototype.componentDidMount = function () {
        if (this.props.initialPosition && this.props.positioningBehavior === DialogPositioningBehavior.Draggable) {
            this.floaterWidget.setPosition(this.getBoundedFloaterPos(this.props.initialPosition));
        }
        OrientationChange_1.OrientationChange.addListener(this.handleOrientationChange);
        if (this.props.shouldAdjustPositionOnWindowResize) {
            this.addResizeEventListener();
        }
    };
    DialogWidget.prototype.componentDidUpdate = function (prevProps) {
        if (this.props.shouldAdjustPositionOnWindowResize !== prevProps.shouldAdjustPositionOnWindowResize) {
            this.removeResizeEventListener();
            if (this.props.shouldAdjustPositionOnWindowResize) {
                this.addResizeEventListener();
            }
        }
        this.resizeDialogIfResizeModeChanged(prevProps.userResizeMode, this.props.userResizeMode);
    };
    /** if dimension(s) changed from not-resizable to resizable or vice-versa, resets the dimension(s) state with the dimension prop(s) */
    DialogWidget.prototype.resizeDialogIfResizeModeChanged = function (prevResizeMode, newResizeMode) {
        var wasHorizontallyResizable = prevResizeMode === 'horizontal' || prevResizeMode === 'both';
        var isHorizontallyResizable = newResizeMode === 'horizontal' || newResizeMode === 'both';
        if (wasHorizontallyResizable !== isHorizontallyResizable) {
            this.setState({ width: this.props.dialogWidth });
        }
        var wasVerticallyResizable = prevResizeMode === 'vertical' || prevResizeMode === 'both';
        var isVerticallyResizable = newResizeMode === 'vertical' || newResizeMode === 'both';
        if (wasVerticallyResizable !== isVerticallyResizable) {
            this.setState({ height: this.props.dialogHeight });
        }
    };
    DialogWidget.prototype.componentWillUnmount = function () {
        OrientationChange_1.OrientationChange.removeListener(this.handleOrientationChange);
        this.removeResizeEventListener();
        if (this.dialogResizingEventCapturer) {
            this.dialogResizingEventCapturer.removeListeners();
        }
    };
    DialogWidget.prototype.render = function () {
        if (this.props.title === undefined) {
            console.warn("DialogWidget: 'title' prop should be defined");
        }
        var dialogEl = React.createElement(ViewportConstrainedDom_1.ViewportConstrainedDomWrapper, { isMaximized: this.props.positioningBehavior === DialogPositioningBehavior.Maximized, horizontalMargins: ViewportHorizontalMargins, verticalMargins: ViewportVerticalMargins, style: tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, getStyles().Dialog), this.props.dialogStyle), { width: this.state.width, height: this.state.height }), ref: this.handleSizingWrapperRef, testId: Declarative_1.conditional(this.props.positioningBehavior === DialogPositioningBehavior.Anchored, Declarative_1.makeTestId(this.props.testId, 'Dialog')) },
            React.createElement(DialogContent_1.DialogContent, tslib_1.__assign({}, this.props, { dialogContentStyle: tslib_1.__assign(tslib_1.__assign({}, this.props.dialogContentStyle), (this.state.isResizing && { pointerEvents: 'none' })), id: "" + exports.SharedWidgetsDialogLabel + this.instanceId, getDraggableDialogClientRect: this.getDialogFloaterClientRect, setDraggableDialogPosition: this.dragBoundedDialogFloaterPosition, testId: Declarative_1.makeTestId(this.props.testId, 'Dialog') })),
            this.props.userResizeMode !== DialogUserResizeMode.NotResizable && this.renderResizeHandles());
        return (React.createElement("div", { style: { display: 'none' } },
            Declarative_1.conditional(this.props.isModal, this.getGlassElem()),
            this.getPositionedDialogElem(dialogEl)));
    };
    DialogWidget.prototype.renderResizeHandles = function () {
        var userResizeMode = this.props.userResizeMode;
        return React.createElement(React.Fragment, null,
            (userResizeMode === DialogUserResizeMode.Vertical || userResizeMode === DialogUserResizeMode.Both) && React.createElement(React.Fragment, null,
                React.createElement(VerticalResizeHandle, { "data-cardinal": 'n', onMouseDown: this.startResizing, style: { top: -3 } }),
                React.createElement(VerticalResizeHandle, { "data-cardinal": 's', onMouseDown: this.startResizing, style: { bottom: -3 } })),
            (userResizeMode === DialogUserResizeMode.Horizontal || userResizeMode === DialogUserResizeMode.Both) && React.createElement(React.Fragment, null,
                React.createElement(HorizontalResizeHandle, { "data-cardinal": 'w', onMouseDown: this.startResizing, style: { left: -3 } }),
                React.createElement(HorizontalResizeHandle, { "data-cardinal": 'e', onMouseDown: this.startResizing, style: { right: -3 } })),
            userResizeMode === DialogUserResizeMode.Both && React.createElement(React.Fragment, null,
                React.createElement(CornerResizeHandle, { "data-cardinal": 'nw', onMouseDown: this.startResizing, style: { top: -3, left: -3, cursor: 'nwse-resize' } }),
                React.createElement(CornerResizeHandle, { "data-cardinal": 'se', onMouseDown: this.startResizing, style: { bottom: -3, right: -3, cursor: 'nwse-resize' } }),
                React.createElement(CornerResizeHandle, { "data-cardinal": 'ne', onMouseDown: this.startResizing, style: { top: -3, right: -3, cursor: 'nesw-resize' } }),
                React.createElement(CornerResizeHandle, { "data-cardinal": 'sw', onMouseDown: this.startResizing, style: { bottom: -3, left: -3, cursor: 'nesw-resize' } })));
    };
    DialogWidget.defaultProps = {
        dialogMinHeight: 100,
        dialogMinWidth: 100,
        userResizeMode: DialogUserResizeMode.NotResizable,
    };
    return DialogWidget;
}(React.Component));
exports.DialogWidget = DialogWidget;
var cancelEvent = function (e) { return e.preventDefault(); };
var ResizeHandle = function (props) {
    return React.createElement("div", tslib_1.__assign({}, props, { onTouchStart: cancelEvent, style: tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, PreventUserSelect_1.PreventUserSelect), { position: 'absolute' }), props.style) }));
};
ResizeHandle.displayName = 'ResizeHandle';
var VerticalResizeHandle = function (props) {
    return React.createElement(ResizeHandle, tslib_1.__assign({}, props, { style: tslib_1.__assign({ cursor: 'ns-resize', left: 0, right: 0, height: 8 }, props.style) }));
};
VerticalResizeHandle.displayName = 'VerticalResizeHandle';
var HorizontalResizeHandle = function (props) {
    return React.createElement(ResizeHandle, tslib_1.__assign({}, props, { style: tslib_1.__assign({ cursor: 'ew-resize', top: 0, bottom: 0, width: 8 }, props.style) }));
};
HorizontalResizeHandle.displayName = 'HorizontalResizeHandle';
var CornerResizeHandle = function (props) {
    return React.createElement(ResizeHandle, tslib_1.__assign({}, props, { style: tslib_1.__assign({ height: 8, width: 8 }, props.style) }));
};
CornerResizeHandle.displayName = 'CornerResizeHandle';


/***/ }),

/***/ "./lib/src/widgets/DiscreteProgressBarWidget.js":
/*!******************************************************!*\
  !*** ./lib/src/widgets/DiscreteProgressBarWidget.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var ProgressBarWidgets_1 = __webpack_require__(/*! ./ProgressBarWidgets */ "./lib/src/widgets/ProgressBarWidgets.js");
/** While functional, the discrete progress bar widget is disapproved by Visual Design. */
// tslint:disable:class-name
var DiscreteProgressBarWidget_UNFINISHED = /** @class */ (function (_super) {
    tslib_1.__extends(DiscreteProgressBarWidget_UNFINISHED, _super);
    function DiscreteProgressBarWidget_UNFINISHED() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DiscreteProgressBarWidget_UNFINISHED.prototype.render = function () {
        var fractionComplete = this.props.currentStep / this.props.totalSteps;
        return (React.createElement(ProgressBarWidgets_1.ProgressBarContainer, { width: this.props.width },
            React.createElement(ProgressBarWidgets_1.ProgressCompleteBar, { fractionComplete: fractionComplete }, fractionComplete === 1 ? null : React.createElement(ProgressBarWidgets_1.ProgressBarAnimation, { containerWidth: this.props.width * fractionComplete }))));
    };
    return DiscreteProgressBarWidget_UNFINISHED;
}(React.PureComponent));
exports.DiscreteProgressBarWidget_UNFINISHED = DiscreteProgressBarWidget_UNFINISHED;


/***/ }),

/***/ "./lib/src/widgets/DomWidgets.js":
/*!***************************************!*\
  !*** ./lib/src/widgets/DomWidgets.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var react_1 = __webpack_require__(/*! react */ "react");
var PreventUserSelect_1 = __webpack_require__(/*! ../styles/PreventUserSelect */ "./lib/src/styles/PreventUserSelect.js");
var BlockStyle = {
    boxSizing: 'border-box',
    position: 'relative',
    margin: 0,
    padding: 0,
    lineHeight: 'normal'
};
/**
 * @deprecated use regular old `div` instead
 */
var Block = /** @class */ (function (_super) {
    tslib_1.__extends(Block, _super);
    function Block() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Block.prototype.render = function () {
        return react_1.createElement('div', tslib_1.__assign(tslib_1.__assign({}, this.props), { style: tslib_1.__assign(tslib_1.__assign({}, BlockStyle), this.props.style) }));
    };
    return Block;
}(React.Component));
exports.Block = Block;
/**
 * @deprecated use regular old `div` instead
 */
var InlineBlock = /** @class */ (function (_super) {
    tslib_1.__extends(InlineBlock, _super);
    function InlineBlock() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InlineBlock.prototype.render = function () {
        return react_1.createElement('div', tslib_1.__assign(tslib_1.__assign({}, this.props), { style: tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, BlockStyle), { display: 'inline-block' }), this.props.style) }));
    };
    return InlineBlock;
}(React.Component));
exports.InlineBlock = InlineBlock;
var Img = /** @class */ (function (_super) {
    tslib_1.__extends(Img, _super);
    function Img() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Img.prototype.render = function () {
        return react_1.createElement('img', tslib_1.__assign(tslib_1.__assign({ alt: '', role: 'presentation' }, this.props), { style: tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, PreventUserSelect_1.PreventUserSelectSansCursor), { flexShrink: 0 }), this.props.style) }));
    };
    return Img;
}(React.Component));
exports.Img = Img;


/***/ }),

/***/ "./lib/src/widgets/Dropdown/DropdownButton.js":
/*!****************************************************!*\
  !*** ./lib/src/widgets/Dropdown/DropdownButton.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var tableau_ui_1 = __webpack_require__(/*! @tableau/tableau-ui */ "./node_modules/@tableau/tableau-ui/dist/tableau-ui.min.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var Icons_1 = __webpack_require__(/*! ../../icons/Icons */ "./lib/src/icons/Icons.js");
var SharedWidgets_1 = __webpack_require__(/*! ../../SharedWidgets */ "./lib/src/SharedWidgets.js");
var Standard_1 = __webpack_require__(/*! ../../styles/Standard */ "./lib/src/styles/Standard.js");
var DomUtil_1 = __webpack_require__(/*! ../../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var FocusTrap_1 = __webpack_require__(/*! ../../utils/FocusTrap */ "./lib/src/utils/FocusTrap.js");
var GlobalPointerDownOutsideListener_1 = __webpack_require__(/*! ../../utils/GlobalPointerDownOutsideListener */ "./lib/src/utils/GlobalPointerDownOutsideListener.js");
var ReactHelpers_1 = __webpack_require__(/*! ../../utils/ReactHelpers */ "./lib/src/utils/ReactHelpers.js");
var DomWidgets_1 = __webpack_require__(/*! ../DomWidgets */ "./lib/src/widgets/DomWidgets.js");
var DropdownButtonStyles = __webpack_require__(/*! ./DropdownButtonStyles */ "./lib/src/widgets/Dropdown/DropdownButtonStyles.js");
var DropdownOverlay_1 = __webpack_require__(/*! ./DropdownOverlay */ "./lib/src/widgets/Dropdown/DropdownOverlay.js");
var DropdownButtonType;
(function (DropdownButtonType) {
    DropdownButtonType[DropdownButtonType["Outline"] = 0] = "Outline";
    DropdownButtonType[DropdownButtonType["Line"] = 1] = "Line";
    DropdownButtonType[DropdownButtonType["Text"] = 2] = "Text";
    DropdownButtonType[DropdownButtonType["Icon"] = 3] = "Icon";
})(DropdownButtonType = exports.DropdownButtonType || (exports.DropdownButtonType = {}));
/** careful, these assume numeric values for DropdownButtonType enum */
var TypeNames = ['outline', 'line', 'text', 'icon'];
var DisplayFlex = TypeStyle.style({ display: 'flex' });
/**
 * A button which displays a popup when pressed.
 * The contents of the popup are provided by you!
 * If you're looking for the equivalent of an HTML <select>, use `SingleSelectDropdown`.
 */
var DropdownButton = /** @class */ (function (_super) {
    tslib_1.__extends(DropdownButton, _super);
    function DropdownButton() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = { ariaLabel: '', isOpen: false };
        _this.unsubscribeFromGlobalMousedown = undefined;
        _this.dropdownButtonElement = null;
        _this.labelElement = null;
        _this.stackingRootRef = React.createRef();
        _this.dropdownOverlayRef = React.createRef();
        _this.defaultPopupId = DomUtil_1.generateId(); // prop was not previously required, so many run-time instances may not yet provide it
        _this.mouseDownOnButton = false; // see https://gitlab.tableausoftware.com/browser-clients/widgets/merge_requests/1406
        _this.handleGlobalMousedown = function (e) {
            var target = e.target;
            var popupId = _this.dropdownButtonElement.getAttribute('aria-controls');
            var overlayElem = document.getElementById(popupId);
            if (!overlayElem) {
                throw new Error("Found no popup element with id matching aria-controls value `" + popupId + "`");
            }
            if (!(overlayElem.contains(target) || _this.dropdownButtonElement.contains(target))) {
                _this.mouseDownOnButton = false;
                _this.close();
            }
        };
        _this.handleClick = ReactHelpers_1.mergeEventHandlers(function (e) {
            if (e.currentTarget.contains(e.target)) {
                _this.toggle();
            }
        }, function (e) { var _a, _b; return (_b = (_a = _this.props).onClick) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        _this.handleMouseDown = ReactHelpers_1.mergeEventHandlers(function (e) {
            _this.mouseDownOnButton = true;
        }, function (e) { var _a, _b; return (_b = (_a = _this.props).onMouseDown) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        _this.handleMouseUp = ReactHelpers_1.mergeEventHandlers(function (e) {
            _this.mouseDownOnButton = false;
        }, function (e) { var _a, _b; return (_b = (_a = _this.props).onMouseUp) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        _this.handleFocusChange = function (e) {
            if (e.target === e.currentTarget) {
                if (e.type === 'focus' && _this.mouseDownOnButton) {
                    // TFSID 1116354 don't flash a focus indicator if the dropdown is being clicked
                    e.currentTarget.blur();
                }
                else {
                    _this.setState({ focus: e.type === 'focus' });
                }
            }
        };
        _this.handleFocus = ReactHelpers_1.mergeEventHandlers(_this.handleFocusChange, function (e) { var _a, _b; return (_b = (_a = _this.props).onFocus) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        _this.handleBlur = ReactHelpers_1.mergeEventHandlers(_this.handleFocusChange, function (e) { var _a, _b; return (_b = (_a = _this.props).onBlur) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        _this.handleHover = function (e) { return _this.setState({ hover: !_this.props.disabled && e.type === 'mouseover' }); };
        _this.handleKeyDown = function (e) {
            var _a, _b;
            // swallow ESC events that plausibly originate from focus being returned to the button after the popup closed
            if (e.key === 'Escape' && e.repeat) {
                e.preventDefault();
                e.stopPropagation();
            }
            (_b = (_a = _this.props).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e);
            if (e.defaultPrevented) {
                return;
            }
            if (e.key === 'ArrowDown' && !e.repeat) {
                e.preventDefault();
                e.stopPropagation();
                e.currentTarget.click();
            }
        };
        _this.handlePortalKeyDown = function (e) {
            if (e.key === 'Escape' && _this.state.isOpen) {
                _this.close();
                e.preventDefault();
            }
            e.stopPropagation();
        };
        _this.handleButtonRef = function (ref) {
            _this.dropdownButtonElement = ref;
            ReactHelpers_1.assignRef(_this.props.buttonRef, ref);
        };
        _this.handleLabelRef = function (ref) {
            _this.labelElement = ref;
        };
        _this.close = function () {
            _this.toggle(false);
        };
        _this.handleTrap = function (e) {
            // if the trap occurs because of a clickEvent on the DropdownButton, we let the ClickHandler trigger the close
            if (!_this.mouseDownOnButton) {
                _this.close();
            }
            _this.mouseDownOnButton = false;
        };
        _this.onOpened = function () {
            var _a, _b;
            // tslint:disable-next-line:deprecation
            if (_this.props.popupContent || _this.props.renderPopupContent) {
                _this.unsubscribeFromGlobalMousedown = GlobalPointerDownOutsideListener_1.GlobalPointerDownOutsideListener.subscribe(_this.dropdownButtonElement, _this.handleGlobalMousedown);
            }
            (_b = (_a = _this.props).onOpen) === null || _b === void 0 ? void 0 : _b.call(_a, function () { return _this.close(); }, _this.dropdownButtonElement.getBoundingClientRect());
        };
        _this.onClosed = function () {
            var _a, _b, _c, _d;
            (_b = (_a = _this).unsubscribeFromGlobalMousedown) === null || _b === void 0 ? void 0 : _b.call(_a);
            _this.unsubscribeFromGlobalMousedown = undefined;
            if (_this.props.focusOnClose) {
                _this.dropdownButtonElement.focus();
            }
            (_d = (_c = _this.props).onClose) === null || _d === void 0 ? void 0 : _d.call(_c);
        };
        return _this;
    }
    DropdownButton.prototype.componentDidMount = function () {
        this.updateLabel();
    };
    DropdownButton.prototype.componentDidUpdate = function (prevProps, prevState) {
        if (!prevProps.disabled && this.props.disabled) {
            if (this.state.isOpen) {
                this.close();
            }
            this.setState({ active: false, hover: false, focus: false });
        }
        if (!prevState.isOpen && this.state.isOpen) {
            this.onOpened();
        }
        else if (prevState.isOpen && !this.state.isOpen) {
            this.onClosed();
        }
        this.updateLabel();
    };
    DropdownButton.prototype.componentWillUnmount = function () {
        var _a, _b;
        (_b = (_a = this).unsubscribeFromGlobalMousedown) === null || _b === void 0 ? void 0 : _b.call(_a);
        this.unsubscribeFromGlobalMousedown = undefined;
    };
    DropdownButton.prototype.updateLabel = function () {
        var _a, _b;
        var ariaLabel = ((_a = this.dropdownButtonElement) === null || _a === void 0 ? void 0 : _a.textContent) || '';
        if (this.props.label) {
            ariaLabel += ", " + ((_b = this.labelElement) === null || _b === void 0 ? void 0 : _b.textContent);
        }
        this.setState({ ariaLabel: ariaLabel });
    };
    DropdownButton.prototype.toggle = function (open) {
        if (open === void 0) { open = !this.state.isOpen; }
        if (this.props.disabled && open) {
            return;
        }
        if (open === this.state.isOpen) {
            return;
        }
        this.setState({ isOpen: open });
    };
    /**
     * Repositions the popup, if it is currently shown. Might be useful if the popup contents weren't finished sizing at the time that the
     * popup was shown, e.g. if it contained an image which was still loading.
     */
    DropdownButton.prototype.repositionPopup = function () {
        var _a;
        (_a = this.dropdownOverlayRef.current) === null || _a === void 0 ? void 0 : _a.reposition();
    };
    DropdownButton.prototype.render = function () {
        var _a;
        var _this = this;
        // tslint:disable-next-line:max-line-length deprecation
        var _b = this.props, buttonRef = _b.buttonRef, className = _b.className, closeOnPopupBlur = _b.closeOnPopupBlur, focusOnClose = _b.focusOnClose, id = _b.id, label = _b.label, labelId = _b.labelId, message = _b.message, onClick = _b.onClick, onClose = _b.onClose, onOpen = _b.onOpen, popupAlignment = _b.popupAlignment, popupContent = _b.popupContent, renderPopupContent = _b.renderPopupContent, stackingRootId = _b.stackingRootId, testId = _b.testId, type = _b.type, useDarkStyling = _b.useDarkStyling, valid = _b.valid, zIndex = _b.zIndex, htmlProps = tslib_1.__rest(_b, ["buttonRef", "className", "closeOnPopupBlur", "focusOnClose", "id", "label", "labelId", "message", "onClick", "onClose", "onOpen", "popupAlignment", "popupContent", "renderPopupContent", "stackingRootId", "testId", "type", "useDarkStyling", "valid", "zIndex"]);
        var labeledFieldProps = { disabled: htmlProps.disabled, id: id, label: label, labelId: labelId, labelRef: this.handleLabelRef, message: message, valid: valid };
        return (React.createElement(tableau_ui_1.LabeledField, tslib_1.__assign({}, labeledFieldProps, { className: TypeStyle.classes(className, (_a = { dark: useDarkStyling }, _a[DisplayFlex] = type !== DropdownButtonType.Icon, _a)) }), function (fieldProps) {
            return React.createElement(SharedWidgets_1.StackingRootContext.Consumer, null, function (stackingRoot) {
                var _a;
                return React.createElement(React.Fragment, null,
                    !stackingRootId && !stackingRoot && React.createElement("div", { style: DropdownButtonStyles.PopupContainerStyle, ref: _this.stackingRootRef }),
                    React.createElement("button", tslib_1.__assign({}, fieldProps, ReactHelpers_1.EventUtilsOptOut, { "aria-haspopup": true, "aria-label": _this.state.ariaLabel, "aria-labelledby": undefined, "data-tb-test-id": testId }, htmlProps, { "aria-atomic": true, "aria-controls": _this.state.isOpen ? (_this.props['aria-controls'] || _this.defaultPopupId) : undefined, "aria-expanded": !!_this.state.isOpen, "aria-live": _this.state.focus && !_this.state.isOpen ? 'assertive' : 'off', "aria-relevant": 'text', className: TypeStyle.classes(DropdownButtonStyles.ClassName, TypeNames[type]), onBlur: _this.handleBlur, onClick: _this.handleClick, onFocus: _this.handleFocus, onKeyDown: _this.handleKeyDown, onMouseOut: _this.handleHover, onMouseOver: _this.handleHover, onMouseDown: _this.handleMouseDown, onMouseUp: _this.handleMouseUp, ref: _this.handleButtonRef, tabIndex: htmlProps.disabled ? undefined : (htmlProps.tabIndex || 0) }),
                        _this.renderChildren(),
                        _this.renderIcon(),
                        _this.state.isOpen && (popupContent || renderPopupContent) &&
                            React.createElement(SharedWidgets_1.StackingRootContext.Provider, { value: stackingRoot || _this.stackingRootRef.current },
                                React.createElement(DropdownPopup, { anchorEl: _this.dropdownButtonElement, children: popupContent || ((_a = renderPopupContent) === null || _a === void 0 ? void 0 : _a()), onKeyDown: _this.handlePortalKeyDown, onTrap: closeOnPopupBlur ? _this.handleTrap : undefined, 
                                    // TFS 961939 if `aria-controls was not provided, we add a default id for the popup;
                                    // this does not fulfill the ARIA spec but prevents broken assumptions
                                    overlayId: !_this.props['aria-controls'] ? _this.defaultPopupId : undefined, overlayRef: _this.dropdownOverlayRef, popupAlignment: popupAlignment, stackingRootId: stackingRootId, zIndex: zIndex }))));
            });
        }));
    };
    DropdownButton.prototype.renderChildren = function () {
        if (this.props.children === undefined || this.props.children === null) {
            return null;
        }
        return React.createElement("span", { className: DropdownButtonStyles.ChildrenClassName }, this.props.children);
    };
    DropdownButton.prototype.renderIcon = function () {
        var svgIcon = this.props.type === DropdownButtonType.Icon ? Icons_1.IconDropdownArrowIcon : Icons_1.DropdownArrowIcon;
        var src = svgIcon.icon({
            active: this.state.active || this.state.isOpen,
            disabled: this.props.disabled,
            hover: this.state.hover,
            onDarkBackground: this.props.useDarkStyling,
        });
        return React.createElement(DomWidgets_1.Img, { src: src, style: { margin: this.props.children ? undefined : "0 auto" } });
    };
    DropdownButton.defaultProps = {
        focusOnClose: true,
        popupAlignment: 'left',
        zIndex: 1,
    };
    return DropdownButton;
}(React.PureComponent));
exports.DropdownButton = DropdownButton;
var DropdownPopup = React.memo(function (props) {
    var _a;
    return !props.children ? null :
        React.createElement(DropdownOverlay_1.DropdownOverlay, { alignment: props.popupAlignment, getAnchorClientRect: function () { return props.anchorEl.getBoundingClientRect(); }, portalEventTrapOverrides: { onKeyDown: props.onKeyDown }, 
            // tslint:disable-next-line:deprecation
            stackingRootId: props.stackingRootId, zIndex: props.zIndex },
            React.createElement(FocusTrap_1.FocusTrap, { children: props.children, id: props.overlayId, style: tslib_1.__assign(tslib_1.__assign({}, Standard_1.PopupStyle), { minWidth: (_a = props.anchorEl) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect().width }), onTrap: props.onTrap }),
            props.onTrap &&
                // TFS 1080312 Add invisible div as "next thing to receive focus", allowing a document-final dropdown to close on TAB
                React.createElement("div", { "aria-hidden": true, tabIndex: 0 }));
});
DropdownPopup.displayName = 'DropdownPopup';


/***/ }),

/***/ "./lib/src/widgets/Dropdown/DropdownButtonStyles.js":
/*!**********************************************************!*\
  !*** ./lib/src/widgets/Dropdown/DropdownButtonStyles.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var Colors_1 = __webpack_require__(/*! ../../styles/Colors */ "./lib/src/styles/Colors.js");
var FocusIndicators_1 = __webpack_require__(/*! ../../styles/FocusIndicators */ "./lib/src/styles/FocusIndicators.js");
var PreventUserSelect_1 = __webpack_require__(/*! ../../styles/PreventUserSelect */ "./lib/src/styles/PreventUserSelect.js");
var ButtonHeight = 24;
exports.BorderWidth = 1;
exports.ChildrenClassName = TypeStyle.style({
    alignItems: 'center',
    alignSelf: 'stretch',
    display: 'inline-flex',
    flexGrow: 1,
    minHeight: ButtonHeight - exports.BorderWidth * 2,
    overflow: 'hidden',
    padding: '0 7px',
    $nest: {
        '.icon > &': { flexGrow: 0, padding: 0 },
    }
});
exports.ClassName = TypeStyle.style(PreventUserSelect_1.PreventUserSelect, {
    alignItems: 'center',
    backgroundColor: 'transparent',
    border: exports.BorderWidth + "px solid transparent",
    borderRadius: 1,
    boxSizing: 'border-box',
    color: Colors_1.TextColors.Primary,
    display: 'flex',
    fontFamily: 'inherit',
    fontSize: 12,
    lineHeight: 'normal',
    outline: 'none',
    padding: 0,
    position: 'relative',
    $nest: {
        '&.outline': Colors_1.InteractiveBorderColors,
        '&.line': Colors_1.InteractiveBorderColors,
        '&&&.line': {
            borderLeftColor: 'transparent', borderRightColor: 'transparent', borderTopColor: 'transparent',
            borderBottomLeftRadius: 0, borderBottomRightRadius: 0,
        },
        '&.text, &.icon': {
            display: 'inline-flex',
        },
        '&.text:enabled, &.icon:enabled': {
            cursor: 'pointer',
        },
        '&:hover:enabled:not(:focus)': { backgroundColor: Colors_1.TextFieldHoverColor },
        '&&&:active:enabled': { backgroundColor: '#ebebeb', borderColor: Colors_1.TextFieldBorderColors.Hover },
        '&&&&:focus': FocusIndicators_1.DefaultFocusIndicator,
        '.valid > &': {
            color: Colors_1.TextColors.Valid,
            $nest: {
                '&.outline, &.line': { borderColor: FocusIndicators_1.ValidFocusIndicator.borderColor },
                '&&&:focus': FocusIndicators_1.ValidFocusIndicator,
            }
        },
        '&[aria-invalid="true"]': {
            color: Colors_1.TextColors.Error,
            $nest: {
                '&.outline, &.line': { borderColor: FocusIndicators_1.ErrorFocusIndicator.borderColor },
                '&&&:focus': FocusIndicators_1.ErrorFocusIndicator,
            }
        },
        '.dark > &': {
            backgroundColor: 'transparent !important',
            color: Colors_1.InvertTextColors.Primary,
        },
        '.dark > &.outline': Colors_1.InvertInteractiveBorderColors,
        '.dark > &.line': Colors_1.InvertInteractiveBorderColors,
        '.dark > &&&:focus': FocusIndicators_1.InvertFocusIndicator,
    }
});
exports.PopupContainerStyle = Object.freeze({
    position: 'relative',
});


/***/ }),

/***/ "./lib/src/widgets/Dropdown/DropdownOverlay.js":
/*!*****************************************************!*\
  !*** ./lib/src/widgets/Dropdown/DropdownOverlay.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var tabbable = __webpack_require__(/*! tabbable */ "./node_modules/tabbable/index.js");
var tslib_2 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var SharedWidgets_1 = __webpack_require__(/*! ../../SharedWidgets */ "./lib/src/SharedWidgets.js");
var ViewportHelpers_1 = __webpack_require__(/*! ../../utils/ViewportHelpers */ "./lib/src/utils/ViewportHelpers.js");
var DropdownButtonStyles_1 = __webpack_require__(/*! ./DropdownButtonStyles */ "./lib/src/widgets/Dropdown/DropdownButtonStyles.js");
/**
 * * `true` when a dropdown popup is positioned above (rather than below) its button.
 * * `false` when below.
 * * `undefined` if a dropdown popup is not an ancestor of the component consuming this Context.
 */
exports.DropdownPositionedAboveContext = React.createContext(undefined);
exports.DropdownPositionedAboveContext.displayName = 'DropdownPositionedAboveContext';
/** @private Internal, private implementation detail of the `DropdownButton` widget. Unsupported. Do not use. */
var DropdownOverlay = /** @class */ (function (_super) {
    tslib_1.__extends(DropdownOverlay, _super);
    function DropdownOverlay() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ref = React.createRef();
        _this.state = { positionedAbove: false };
        return _this;
    }
    DropdownOverlay.prototype.componentDidMount = function () {
        var _this = this;
        this.reposition();
        // we don't want to focus the element until the styling/layout has settled and painted, otherwise the viewport tends to jump
        window.setTimeout(function () {
            _this.focusFirstTabbable();
        });
    };
    DropdownOverlay.prototype.componentDidUpdate = function (prevProps) {
        if (prevProps.getAnchorClientRect !== this.props.getAnchorClientRect || prevProps.alignment !== this.props.alignment) {
            this.reposition();
        }
    };
    DropdownOverlay.prototype.focusFirstTabbable = function () {
        var _a, _b;
        var mountPoint = (_a = this.ref.current) === null || _a === void 0 ? void 0 : _a.getMountPoint();
        if (!mountPoint) {
            return;
        }
        // falls back to focusing the first focusable if there is nothing tabbable
        var firstTabbable = tabbable(mountPoint)[0] || mountPoint.querySelector('[tabindex]');
        (_b = firstTabbable) === null || _b === void 0 ? void 0 : _b.focus();
    };
    /**
     * Repositions the popup. Might be useful if the popup contents weren't fully sized at the time of attachment,
     * e.g. an image still loading. This is excluded from React render() path because we generally want it to stay put after attaching.
     */
    DropdownOverlay.prototype.reposition = function () {
        var positioningElement = this.ref.current.getMountPoint();
        var newPosition = this.getPosition();
        tslib_2.__assign(positioningElement.style, newPosition);
        this.setState({ positionedAbove: !!newPosition.bottom });
    };
    DropdownOverlay.prototype.getPosition = function () {
        var popupElem = this.ref.current.getMountPoint();
        var _a = popupElem.getBoundingClientRect(), popupWidth = _a.width, popupHeight = _a.height;
        // it's called a dropdown, not a dropup, so prefer to attach the popup below, unless
        // (1) doesn't fit below and (2) there is more space above than below
        var anchorRect = this.props.getAnchorClientRect();
        var viewport = ViewportHelpers_1.getVisualViewport();
        var spaceBelow = viewport.offsetTop + viewport.height - anchorRect.bottom;
        var spaceAbove = anchorRect.top - viewport.offsetTop;
        // 'top'/'bottom' here read unintuitively but they refer to the css property, so attaching above the anchor means using 'bottom'
        var verticalAttachment = (popupHeight > spaceBelow && spaceAbove > spaceBelow) ? 'bottom' : 'top';
        // we allow an external preference for left vs right alignment via a prop, but still switch if we would end up out-of-bounds
        var fitsLeft = anchorRect.left + popupWidth < viewport.offsetLeft + viewport.width;
        var fitsRight = anchorRect.right - popupWidth > viewport.offsetLeft;
        var horizontalAttachment = this.props.alignment;
        if (horizontalAttachment === 'left' && !fitsLeft && fitsRight) {
            horizontalAttachment = 'right';
        }
        else if (horizontalAttachment === 'right' && !fitsRight && fitsLeft) {
            horizontalAttachment = 'left';
        }
        // we can't know apriori what the nearest positioned ancestor is (or if we can, it's too nasty to figure out), so instead
        // we attach the popup and then calculate the necessary repositioning relative to where it first appears
        popupElem.style[horizontalAttachment] = '0';
        popupElem.style[verticalAttachment] = '0';
        var popupRect = popupElem.getBoundingClientRect();
        // we always set all four properties because we need to clear all previous positioning, otherwise we'll be specifying the whole
        // popup rectangle rather than just its attachment+position
        var positionStyle = {
            top: verticalAttachment === 'top' ? anchorRect.bottom - popupRect.top - DropdownButtonStyles_1.BorderWidth + 'px' : '',
            bottom: verticalAttachment === 'bottom' ? popupRect.bottom - anchorRect.top - DropdownButtonStyles_1.BorderWidth + 'px' : '',
            left: horizontalAttachment === 'left' ? anchorRect.left - popupRect.left + 'px' : '',
            right: horizontalAttachment === 'right' ? popupRect.right - anchorRect.right + 'px' : '',
        };
        return positionStyle;
    };
    DropdownOverlay.prototype.render = function () {
        var _a = this.props, alignment = _a.alignment, children = _a.children, getAnchorClientRect = _a.getAnchorClientRect, stackingComponentProps = tslib_1.__rest(_a, ["alignment", "children", "getAnchorClientRect"]);
        return (React.createElement(SharedWidgets_1.StackingComponentWrapper, tslib_1.__assign({}, stackingComponentProps, { ref: this.ref, wrapperTestId: 'DropdownOverlay' }),
            React.createElement(exports.DropdownPositionedAboveContext.Provider, { value: this.state.positionedAbove }, children)));
    };
    return DropdownOverlay;
}(React.PureComponent));
exports.DropdownOverlay = DropdownOverlay;


/***/ }),

/***/ "./lib/src/widgets/Dropdown/HierarchicalDropdownWidget.js":
/*!****************************************************************!*\
  !*** ./lib/src/widgets/Dropdown/HierarchicalDropdownWidget.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var ReactDOM = __webpack_require__(/*! react-dom */ "react-dom");
var SharedWidgets_1 = __webpack_require__(/*! ../../SharedWidgets */ "./lib/src/SharedWidgets.js");
var DomUtil_1 = __webpack_require__(/*! ../../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var ReactHelpers_1 = __webpack_require__(/*! ../../utils/ReactHelpers */ "./lib/src/utils/ReactHelpers.js");
var FlyoutListMenuTextWidget_1 = __webpack_require__(/*! ../FlyoutListMenuTextWidget */ "./lib/src/widgets/FlyoutListMenuTextWidget.js");
/**
 * Convenience widget which combines a `DropdownButton` widget with a `FlyoutListMenuWidget`, with proper a11y.
 */
// tslint:disable-next-line:max-line-length
exports.HierarchicalDropdownWidget = React.forwardRef(function (props, ref) {
    var buttonRef = props.buttonRef, menuId = props.menuId, menuItemInfos = props.menuItemInfos, maxHeight = props.maxHeight, onSelect = props.onSelect, dropdownProps = tslib_1.__rest(props, ["buttonRef", "menuId", "menuItemInfos", "maxHeight", "onSelect"]);
    var _a = React.useState(false), isOpen = _a[0], setOpen = _a[1];
    var DefaultMenuId = React.useState(DomUtil_1.generateId())[0];
    var closeFn = React.useRef(null);
    var buttonElement = React.useRef(null);
    var menuProps = {
        allowAutoPosition: true,
        anchorEl: buttonElement.current,
        id: menuId || DefaultMenuId,
        maxHeight: maxHeight,
        menuItemInfos: menuItemInfos,
        menuStyle: tslib_1.__assign({}, (isOpen && { minWidth: buttonElement.current.getBoundingClientRect().width })),
        onSelect: function (value) { onSelect(value); closeFn.current(); },
        requestCloseAll: closeFn.current,
        // tslint:disable-next-line:deprecation
        stackingRootId: props.stackingRootId,
        testId: props.testId,
        toggleEl: buttonElement.current,
        zIndex: props.zIndex,
    };
    return React.createElement(React.Fragment, null,
        React.createElement(SharedWidgets_1.DropdownButton, tslib_1.__assign({ "aria-controls": menuProps.id, "aria-haspopup": 'menu' }, dropdownProps, { children: props.children || '', focusOnClose: true, onClose: function () { setOpen(false); closeFn.current = null; }, onOpen: function (doneFn) { closeFn.current = doneFn; setOpen(true); }, ref: function (dropdownRef) {
                ReactHelpers_1.assignRef(ref, dropdownRef);
                var dropdownElem = ReactDOM.findDOMNode(dropdownRef);
                buttonElement.current = dropdownElem ? dropdownElem.querySelector('[aria-haspopup]') : null;
                ReactHelpers_1.assignRef(buttonRef, buttonElement.current);
            } })),
        !props.disabled && isOpen && React.createElement(FlyoutListMenuTextWidget_1.FlyoutListMenuWidget, tslib_1.__assign({}, menuProps)));
});
exports.HierarchicalDropdownWidget.displayName = 'HierarchicalDropdownWidget';


/***/ }),

/***/ "./lib/src/widgets/Dropdown/SingleSelectDropdown.js":
/*!**********************************************************!*\
  !*** ./lib/src/widgets/Dropdown/SingleSelectDropdown.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var DomUtil_1 = __webpack_require__(/*! ../../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var FindIndex_1 = __webpack_require__(/*! ../../utils/FindIndex */ "./lib/src/utils/FindIndex.js");
var ReactHelpers_1 = __webpack_require__(/*! ../../utils/ReactHelpers */ "./lib/src/utils/ReactHelpers.js");
var ListItemUtils_1 = __webpack_require__(/*! ../List/ListItemUtils */ "./lib/src/widgets/List/ListItemUtils.js");
var DropdownButton_1 = __webpack_require__(/*! ./DropdownButton */ "./lib/src/widgets/Dropdown/DropdownButton.js");
exports.DropdownButtonType = DropdownButton_1.DropdownButtonType;
/**
 * A dropdown button which renders a popup React element satisfying `ListProps`,
 * and provides default accessibility attributes and keyboard behaviors.
 */
// tslint:disable-next-line:max-line-length
var SingleSelectDropdown = /** @class */ (function (_super) {
    tslib_1.__extends(SingleSelectDropdown, _super);
    function SingleSelectDropdown() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.defaultLabelId = DomUtil_1.generateId();
        _this.labelId = function () { return _this.props.labelId || _this.defaultLabelId; };
        _this.defaultListId = DomUtil_1.generateId();
        _this.listId = function () { return _this.props.list.props.id || _this.defaultListId; };
        _this.doneFn = undefined;
        _this.typeAheadQuery = '';
        _this.typeAheadTimeoutHandle = 0;
        _this.dropdownButtonRef = React.createRef();
        _this.handleOpen = function (doneFn, rect) {
            if (_this.props.onOpen) {
                _this.props.onOpen(doneFn, rect);
            }
            _this.doneFn = doneFn;
        };
        _this.handleClose = function () {
            _this.doneFn = undefined;
            if (_this.props.onClose) {
                _this.props.onClose();
            }
        };
        _this.keyDownHandlers = Object.freeze({
            'Home': function (items) { return ListItemUtils_1.findSelectableItemIndex(items, -1, +1); },
            'End': function (items) { return ListItemUtils_1.findSelectableItemIndex(items, items.length, -1); },
            'ArrowUp': function (items) { return ListItemUtils_1.findSelectableItemIndex(items, ListItemUtils_1.findIndexOfItemWithValue(items, _this.props.value), -1); },
            'ArrowDown': function (items) { return ListItemUtils_1.findSelectableItemIndex(items, ListItemUtils_1.findIndexOfItemWithValue(items, _this.props.value), +1); },
        });
        _this.handleKeyDown = ReactHelpers_1.mergeEventHandlers(function (e) {
            if (_this.props.disabled || !_this.keyDownHandlers[e.key]) {
                return;
            }
            var items = _this.props.list.props.items;
            var newSelectedItemIndex = _this.keyDownHandlers[e.key](items);
            e.preventDefault();
            e.stopPropagation();
            var newValue = items[newSelectedItemIndex].value;
            if (newValue !== _this.props.value) {
                _this.handleSelect(newValue);
            }
        }, function (e) { var _a, _b; return (_b = (_a = _this.props).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        _this.handleKeyPress = ReactHelpers_1.mergeEventHandlers(function (e) {
            if (_this.props.disabled || e.key === ' ' || e.key === 'Enter' || e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) {
                return;
            }
            window.clearTimeout(_this.typeAheadTimeoutHandle);
            _this.typeAheadTimeoutHandle = window.setTimeout(function () { return _this.typeAheadQuery = ''; }, 500);
            _this.typeAheadQuery += e.key;
            var items = _this.props.list.props.items;
            var currentIndex = FindIndex_1.findIndex(items, function (item) { return item.value === _this.props.value; });
            function lookFor(query) {
                // single-character queries start after the current item, but multiple-character queries start on the current item
                var startAt = currentIndex + (query.length > 1 ? 0 : 1);
                return FindIndex_1.findIndex(items, function (item) { return ListItemUtils_1.isSelectableItem(item) && item.value.toLowerCase().indexOf(query.toLowerCase()) === 0; }, startAt);
            }
            var nextIndex = lookFor(_this.typeAheadQuery);
            if (nextIndex < 0) {
                nextIndex = lookFor(e.key);
            }
            if (nextIndex >= 0 && currentIndex !== nextIndex) {
                _this.handleSelect(items[nextIndex].value);
                e.preventDefault();
                e.stopPropagation();
            }
        }, function (e) { var _a, _b; return (_b = (_a = _this.props).onKeyPress) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        _this.handleSelect = function (value) {
            if (_this.props.onChange) {
                _this.props.onChange(value);
            }
            if (_this.doneFn && !_this.props.onOpen) {
                _this.doneFn();
            }
        };
        _this.renderList = function () {
            var _a = _this.props, list = _a.list, value = _a.value;
            var listSelectedValue = list.props.selectedValue;
            var listAriaLabelledby = list.props['aria-labelledby'];
            return React.cloneElement(list, {
                'aria-labelledby': listAriaLabelledby === undefined ? _this.labelId() : listAriaLabelledby,
                id: _this.listId(),
                onSelect: _this.handleSelect,
                selectOnEnterKey: true,
                selectedValue: listSelectedValue === undefined ? value : listSelectedValue,
            });
        };
        return _this;
    }
    /**
     * Repositions the popup, if it is currently shown. Might be useful if the popup contents weren't finished sizing at the time that the
     * popup was shown, e.g. if it contained an image which was still loading.
     */
    SingleSelectDropdown.prototype.repositionPopup = function () {
        var _a;
        (_a = this.dropdownButtonRef.current) === null || _a === void 0 ? void 0 : _a.repositionPopup();
    };
    SingleSelectDropdown.prototype.toggle = function (open) {
        var _a;
        (_a = this.dropdownButtonRef.current) === null || _a === void 0 ? void 0 : _a.toggle(open);
    };
    SingleSelectDropdown.prototype.render = function () {
        var _a;
        // tslint:disable-next-line:deprecation
        var _b = this.props, children = _b.children, list = _b.list, onChange = _b.onChange, popupContent = _b.popupContent, renderPopupContent = _b.renderPopupContent, value = _b.value, dropdownProps = tslib_1.__rest(_b, ["children", "list", "onChange", "popupContent", "renderPopupContent", "value"]);
        var selectedItem = list.props.items.find(function (item) { return item.value === value; });
        return (React.createElement(DropdownButton_1.DropdownButton, tslib_1.__assign({ "aria-controls": this.listId(), closeOnPopupBlur: true, labelId: this.labelId() }, dropdownProps, { "aria-haspopup": 'listbox', focusOnClose: true, onClose: this.handleClose, onKeyDown: this.handleKeyDown, onKeyPress: this.handleKeyPress, onOpen: this.handleOpen, popupContent: popupContent || ((_a = renderPopupContent) === null || _a === void 0 ? void 0 : _a()) || this.renderList(), ref: this.dropdownButtonRef }), children || (selectedItem && selectedItem.content) || value || ''));
    };
    return SingleSelectDropdown;
}(React.Component));
exports.SingleSelectDropdown = SingleSelectDropdown;


/***/ }),

/***/ "./lib/src/widgets/DropdownTextWidget.js":
/*!***********************************************!*\
  !*** ./lib/src/widgets/DropdownTextWidget.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
// tslint:disable:deprecation
var React = __webpack_require__(/*! react */ "react");
var DropdownWidget_1 = __webpack_require__(/*! ./DropdownWidget */ "./lib/src/widgets/DropdownWidget.js");
var MenuItemInfo_1 = __webpack_require__(/*! ./MenuItemInfo */ "./lib/src/widgets/MenuItemInfo.js");
/**
 * This serves as an adapter to the old api dropdownwidget and the new generic dropdownwidget
 * so as to not break the api.
 *
 * @deprecated use `DropdownButton` or `SingleSelectDropdown`
 */
var DropdownWidget = function (props) {
    var convertedProps = tslib_1.__assign(tslib_1.__assign({}, props), { menuItemInfos: MenuItemInfo_1.convertMenuItemInfoToGeneric(props.menuItemInfos) });
    return React.createElement(DropdownWidget_1.GenericDropdownWidget, convertedProps);
};
exports.DropdownWidget = DropdownWidget;


/***/ }),

/***/ "./lib/src/widgets/DropdownWidget.js":
/*!*******************************************!*\
  !*** ./lib/src/widgets/DropdownWidget.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var react_1 = __webpack_require__(/*! react */ "react");
var ReactDOM = __webpack_require__(/*! react-dom */ "react-dom");
var Icons_1 = __webpack_require__(/*! ../icons/Icons */ "./lib/src/icons/Icons.js");
var Colors_1 = __webpack_require__(/*! ../styles/Colors */ "./lib/src/styles/Colors.js");
var PreventUserSelect_1 = __webpack_require__(/*! ../styles/PreventUserSelect */ "./lib/src/styles/PreventUserSelect.js");
var TabStyles_1 = __webpack_require__(/*! ../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var TextEllipsis_1 = __webpack_require__(/*! ../styles/TextEllipsis */ "./lib/src/styles/TextEllipsis.js");
var Declarative_1 = __webpack_require__(/*! ../utils/Declarative */ "./lib/src/utils/Declarative.js");
var DomUtil_1 = __webpack_require__(/*! ../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var FindIndex_1 = __webpack_require__(/*! ../utils/FindIndex */ "./lib/src/utils/FindIndex.js");
var InteractiveDom_1 = __webpack_require__(/*! ../utils/InteractiveDom */ "./lib/src/utils/InteractiveDom.js");
var Overlay_1 = __webpack_require__(/*! ../utils/Overlay */ "./lib/src/utils/Overlay.js");
var DomWidgets_1 = __webpack_require__(/*! ./DomWidgets */ "./lib/src/widgets/DomWidgets.js");
var FlyoutListMenuWidget_1 = __webpack_require__(/*! ./FlyoutListMenuWidget */ "./lib/src/widgets/FlyoutListMenuWidget.js");
var Sizing = TabStyles_1.TabStyles.Sizing, Colors = TabStyles_1.TabStyles.Colors, Spacing = TabStyles_1.TabStyles.Spacing, Typography = TabStyles_1.TabStyles.Typography;
var SidePadding = 8;
var DropdownType;
(function (DropdownType) {
    DropdownType[DropdownType["Outline"] = 0] = "Outline";
    DropdownType[DropdownType["Line"] = 1] = "Line";
    DropdownType[DropdownType["Text"] = 2] = "Text";
})(DropdownType = exports.DropdownType || (exports.DropdownType = {}));
function getLabelStyle(options) {
    return {
        display: 'block',
        fontSize: Typography.Sizing.Default,
        fontWeight: 'normal',
        color: options.secondaryTextColors.normal,
        lineHeight: "19px",
    };
}
function getOutlineDropdownStyle(options) {
    return {
        container: {},
        button: {
            base: tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, TextEllipsis_1.TextEllipsis), PreventUserSelect_1.PreventUserSelect), { backgroundColor: 'transparent', borderColor: options.primaryLineColors.normal, borderRadius: Sizing.BorderRadius, borderStyle: 'solid', borderWidth: Sizing.BorderWidth, color: options.primaryTextColors.normal, fontSize: Typography.Sizing.Default, fontWeight: 'normal', height: Sizing.RowHeight, outline: 'none', overflow: 'hidden', paddingLeft: SidePadding - Sizing.BorderWidth, paddingRight: Spacing.LargeSpace + SidePadding - Sizing.BorderWidth }),
            interactive: {
                hover: {
                    backgroundColor: options.hoverBackgroundColor,
                    borderColor: options.primaryLineColors.hover,
                },
                active: {
                    borderColor: options.primaryLineColors.active
                },
                focus: {
                    borderColor: options.primaryLineColors.focus,
                    boxShadow: "0 0 4px 0 " + options.primaryLineColors.focus,
                },
                disabled: {
                    borderColor: options.primaryLineColors.disabled,
                    color: options.primaryTextColors.disabled
                }
            }
        },
        value: {
            lineHeight: options.innerRowHeight + 'px'
        },
        iconContainer: {
            display: 'inline-block',
            position: 'absolute',
            right: 0,
        },
        icon: {
            marginTop: (options.innerRowHeight - Icons_1.DropdownArrowIcon.height) / 2
        },
        label: getLabelStyle(options)
    };
}
function getLineDropdownStyle(options) {
    return {
        container: {},
        button: {
            base: tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, TextEllipsis_1.TextEllipsis), PreventUserSelect_1.PreventUserSelect), { backgroundColor: 'transparent', borderBottomColor: options.primaryLineColors.normal, borderBottomStyle: 'solid', borderBottomWidth: Sizing.BorderWidth, borderLeft: 'none', borderRight: 'none', borderTop: 'none', color: options.primaryTextColors.normal, fontSize: Typography.Sizing.Default, fontWeight: 'normal', height: Sizing.RowHeight, outline: 'none', overflow: 'hidden', paddingLeft: SidePadding - Sizing.BorderWidth, paddingRight: Spacing.LargeSpace + SidePadding - Sizing.BorderWidth }),
            interactive: {
                hover: {
                    backgroundColor: options.hoverBackgroundColor,
                    borderBottomColor: options.primaryLineColors.hover,
                },
                active: {
                    borderBottomColor: options.primaryLineColors.active
                },
                focus: {
                    borderBottomColor: options.primaryLineColors.focus,
                    boxShadow: "0 0 4px 0 " + options.primaryLineColors.focus,
                    outline: "1px solid " + options.primaryLineColors.focus,
                    outlineOffset: -1,
                },
                disabled: {
                    borderBottomColor: options.primaryLineColors.disabled,
                    color: options.primaryTextColors.disabled
                }
            }
        },
        value: {
            top: Sizing.BorderWidth,
            lineHeight: options.innerRowHeight + 'px',
        },
        iconContainer: {
            bottom: 1,
            position: 'absolute',
            right: 1,
            top: 1,
        },
        icon: {
            marginTop: (options.innerRowHeight - Icons_1.DropdownArrowIcon.height) / 2
        },
        label: getLabelStyle(options),
    };
}
function getTextDropdownStyle(options) {
    return {
        container: {
            display: 'inline-block',
            width: 'auto'
        },
        button: {
            base: tslib_1.__assign(tslib_1.__assign({}, PreventUserSelect_1.PreventUserSelect), { backgroundColor: 'transparent', border: 'none', color: options.primaryTextColors.normal, cursor: 'pointer', display: 'inline-block', fontSize: Typography.Sizing.Default, fontWeight: 'normal', height: Sizing.RowHeight, lineHeight: Sizing.RowHeight + 'px', overflow: 'hidden', paddingLeft: SidePadding, paddingRight: Icons_1.DropdownArrowIcon.width }),
            interactive: {
                hover: {
                    backgroundColor: options.hoverBackgroundColor,
                },
                active: {
                    color: options.primaryTextColors.active
                },
                disabled: {
                    color: options.primaryTextColors.disabled,
                    cursor: 'default',
                },
                focus: {
                    boxShadow: "0 0 4px 0 " + options.primaryLineColors.focus,
                    outline: "1px solid " + options.primaryLineColors.focus,
                    outlineOffset: -1,
                }
            }
        },
        value: {
            lineHeight: 'inherit'
        },
        iconContainer: {
            position: 'absolute'
        },
        icon: {
            marginTop: (Sizing.RowHeight - Icons_1.DropdownArrowIcon.height) / 2
        },
        label: getLabelStyle(options),
    };
}
var getStyles = function () {
    var innerRowHeight = Sizing.RowHeight - (Sizing.BorderWidth * 2);
    var normalPrimaryLineColors = {
        normal: Colors.L6,
        hover: Colors.L8,
        active: Colors.L9,
        focus: Colors.Focus,
        disabled: Colors.L9Disabled
    };
    var normalPrimaryTextColors = {
        normal: Colors_1.TextColors.Primary,
        disabled: Colors_1.TextColors.Disabled,
        active: Colors.Black,
    };
    var normalSecondaryTextColors = {
        normal: Colors_1.TextColors.Secondary,
        disabled: Colors_1.TextColors.Disabled,
        active: Colors.Black,
    };
    var darkBackgroundPrimaryLineColors = {
        normal: Colors.WhiteTransparentLine,
        hover: Colors.WhiteTransparentLineHover,
        active: Colors.White,
        focus: Colors.White,
        disabled: Colors.WhiteDisabled
    };
    var darkBackgroundPrimaryTextColors = {
        normal: Colors_1.InvertTextColors.Primary,
        disabled: Colors_1.InvertTextColors.Disabled,
        active: Colors.White,
    };
    var darkBackgroundSecondaryTextColors = {
        normal: Colors_1.InvertTextColors.Secondary,
        disabled: Colors_1.InvertTextColors.Disabled,
        active: Colors.White,
    };
    var normalOptions = {
        innerRowHeight: innerRowHeight,
        primaryLineColors: normalPrimaryLineColors,
        primaryTextColors: normalPrimaryTextColors,
        secondaryTextColors: normalSecondaryTextColors,
        hoverBackgroundColor: Colors_1.TextFieldHoverColor,
    };
    var darkBackgroundOptions = {
        innerRowHeight: innerRowHeight,
        primaryLineColors: darkBackgroundPrimaryLineColors,
        primaryTextColors: darkBackgroundPrimaryTextColors,
        secondaryTextColors: darkBackgroundSecondaryTextColors,
        hoverBackgroundColor: 'transparent',
    };
    var OutlineDropdownStyle = getOutlineDropdownStyle(normalOptions);
    var OutlineDropdownDarkBackgroundStyle = getOutlineDropdownStyle(darkBackgroundOptions);
    var LineDropdownStyle = getLineDropdownStyle(normalOptions);
    var LineDropdownDarkBackgroundStyle = getLineDropdownStyle(darkBackgroundOptions);
    var TextDropdownStyle = getTextDropdownStyle(normalOptions);
    var TextDropdownDarkBackgroundStyle = getTextDropdownStyle(darkBackgroundOptions);
    return {
        OutlineDropdownStyle: OutlineDropdownStyle,
        OutlineDropdownDarkBackgroundStyle: OutlineDropdownDarkBackgroundStyle,
        LineDropdownStyle: LineDropdownStyle,
        LineDropdownDarkBackgroundStyle: LineDropdownDarkBackgroundStyle,
        TextDropdownStyle: TextDropdownStyle,
        TextDropdownDarkBackgroundStyle: TextDropdownDarkBackgroundStyle
    };
};
function getDropdownStylesByType(dropdownType, onDarkBackground) {
    var styles = getStyles();
    switch (dropdownType) {
        case DropdownType.Outline:
            return onDarkBackground ? styles.OutlineDropdownDarkBackgroundStyle : styles.OutlineDropdownStyle;
        case DropdownType.Line:
            return onDarkBackground ? styles.LineDropdownDarkBackgroundStyle : styles.LineDropdownStyle;
        case DropdownType.Text:
            return onDarkBackground ? styles.TextDropdownDarkBackgroundStyle : styles.TextDropdownStyle;
        default:
            throw new Error("DropdownWidget attempted to render invalid DropdownType: " + dropdownType);
    }
}
exports.getDropdownStylesByType = getDropdownStylesByType;
var DropdownButtonWidget = /** @class */ (function (_super) {
    tslib_1.__extends(DropdownButtonWidget, _super);
    function DropdownButtonWidget() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DropdownButtonWidget.prototype.componentDidUpdate = function () {
        // We lose focus on spacebar/enter keydown, so the active state needs to be manually set
        if (this.props.dropdownOpen && this.state.active) {
            this.setState({ active: false });
        }
    };
    DropdownButtonWidget.prototype.getDropdownIcon = function () {
        var iconState = {
            active: this.state.active || this.props.dropdownOpen,
            disabled: this.props.disabled,
            hover: this.state.hover,
            onDarkBackground: this.props.onDarkBackground,
        };
        return Icons_1.DropdownArrowIcon.icon(iconState);
    };
    DropdownButtonWidget.prototype.render = function () {
        var dropdownStyles = getDropdownStylesByType(this.props.dropdownType, this.props.onDarkBackground);
        var buttonStyles = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, dropdownStyles.button.base), { boxSizing: 'border-box', position: 'relative' }), Declarative_1.conditional(this.props.dropdownOpen, dropdownStyles.button.interactive.active));
        var blockProps = {
            'aria-atomic': true,
            'aria-expanded': this.props.dropdownOpen,
            'aria-haspopup': 'listbox',
            'aria-labelledby': this.props.labelledById,
            'aria-live': (this.state.focus ? 'assertive' : 'off'),
            'aria-controls': (this.props.dropdownOpen ? this.props.dropdownId : undefined),
            'aria-relevant': 'text',
            'data-tb-test-id': this.props.testId,
            disabled: this.props.disabled,
            onKeyDown: this.props.onKeyDown,
            role: 'combobox',
            style: buttonStyles,
            tabIndex: this.props.disabled ? undefined : 0,
            title: this.props.title,
        };
        var spanProps = {
            style: dropdownStyles.value,
            title: Declarative_1.conditional(typeof this.props.children === 'string', this.props.children)
        };
        return react_1.createElement('div', blockProps, react_1.createElement('span', spanProps, this.props.children), react_1.createElement('div', { style: dropdownStyles.iconContainer }, react_1.createElement(DomWidgets_1.Img, {
            style: dropdownStyles.icon,
            src: this.getDropdownIcon()
        })));
    };
    DropdownButtonWidget = tslib_1.__decorate([
        InteractiveDom_1.InteractiveDomHoCDecorator
    ], DropdownButtonWidget);
    return DropdownButtonWidget;
}(React.Component));
exports.DropdownButtonWidget = DropdownButtonWidget;
/**
 * @deprecated use `DropdownButton` or `SingleSelectDropdown`
 */
// tslint:disable-next-line:class-name
var GenericDropdownWidget = /** @class */ (function (_super) {
    tslib_1.__extends(GenericDropdownWidget, _super);
    function GenericDropdownWidget(props) {
        var _this = _super.call(this, props) || this;
        _this.buttonEl = null;
        _this.enabledItems = [];
        _this.labelId = DomUtil_1.generateId();
        _this.dropdownId = DomUtil_1.generateId();
        _this.toggleMenu = function () {
            if (_this.props.disabled) {
                return;
            }
            _this.setState(function (prevState, props) {
                var isNowOpen = !prevState.isOpen;
                if (isNowOpen) {
                    if (props.onOpen) {
                        props.onOpen();
                    }
                }
                else {
                    if (props.onClose) {
                        props.onClose();
                    }
                }
                return { isOpen: isNowOpen };
            });
        };
        _this.handleSelect = function (value) {
            _this.props.onSelect(value, _this.state.isOpen);
            _this.onRequestClose();
        };
        // Handle key presses as defined by ARIA https://www.w3.org/TR/wai-aria-practices/#menu
        _this.handleKeyDown = function (e) {
            if (_this.props.disabled || _this.state.isOpen || e.ctrlKey || e.altKey || e.metaKey) {
                return;
            }
            var selectedIndex = _this.getIndexOfSelectedItem();
            if (Declarative_1.isAlphabeticChar(e.key)) {
                var nextIndexOfFirstLetter = FindIndex_1.findIndex(_this.enabledItems, function (item) {
                    return !!item.keyboardAccessibleValue &&
                        item.keyboardAccessibleValue.charAt(0).toUpperCase() === e.key.toUpperCase();
                }, selectedIndex + 1, _this);
                if (nextIndexOfFirstLetter > -1) {
                    _this.props.onSelect(_this.enabledItems[nextIndexOfFirstLetter].value, _this.state.isOpen);
                }
            }
            else {
                var value = undefined;
                switch (e.key) {
                    case ' ':
                    case 'Enter':
                        _this.toggleMenu();
                        break;
                    case 'ArrowUp':
                        if (selectedIndex > 0) {
                            value = _this.enabledItems[selectedIndex - 1].value;
                        }
                        break;
                    case 'ArrowDown':
                        if (selectedIndex < _this.enabledItems.length - 1) {
                            value = _this.enabledItems[selectedIndex + 1].value;
                        }
                        break;
                    case 'Home':
                        value = _this.enabledItems[0].value;
                        break;
                    case 'End':
                        value = _this.enabledItems[_this.enabledItems.length - 1].value;
                        break;
                    case 'Escape':
                        // swallow ESC events that plausibly originate from focus being returned to the button after the popup closed
                        if (e.repeat) {
                            break;
                        }
                        else {
                            return;
                        }
                    default:
                        // Do not prevent default or stopPropagation on non-handled key presses
                        return;
                }
                if (value) {
                    _this.props.onSelect(value, _this.state.isOpen);
                }
                e.preventDefault();
                e.stopPropagation();
            }
        };
        _this.onRequestClose = function () {
            _this.toggleMenu();
        };
        _this.setButtonElement = function (ref) {
            _this.buttonEl = ReactDOM.findDOMNode(ref);
        };
        _this.getAnchorClientRect = function () {
            var _a;
            return (_a = _this.buttonEl) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();
        };
        if (props.menuItemInfos.filter(function (item) { return !!item.menuItemInfos; }).length > 0) {
            throw Error('Dropdowns may not contain submenus');
        }
        _this.setEnabledItems(_this.props.menuItemInfos);
        _this.state = {
            buttonText: _this.getButtonDisplayValue(),
            isOpen: false
        };
        return _this;
    }
    GenericDropdownWidget.prototype.componentDidUpdate = function (prevProps, prevState) {
        this.setEnabledItems(this.props.menuItemInfos);
        var buttonText = this.getButtonDisplayValue();
        if (buttonText !== this.state.buttonText) {
            this.setState({ buttonText: buttonText });
        }
    };
    GenericDropdownWidget.prototype.getMenuWidth = function () {
        var potentialWidth = undefined;
        if (this.props.flyoutStyle) {
            var flyoutWidth = this.props.flyoutStyle.width;
            if (flyoutWidth === 'auto') { // special-case: want dynamically-sized flyout but it will evaluate to 0 when parsing as int
                return flyoutWidth;
            }
            potentialWidth = parseInt(flyoutWidth, 10);
        }
        else if (this.props.containerStyle) {
            potentialWidth = parseInt(this.props.containerStyle.width, 10);
        }
        if (this.buttonEl) {
            var boundingWidth = this.buttonEl.getBoundingClientRect().width;
            potentialWidth = Math.max(boundingWidth, potentialWidth || 0);
        }
        return potentialWidth;
    };
    GenericDropdownWidget.prototype.getIndexOfSelectedItem = function () {
        var _this = this;
        return FindIndex_1.findIndex(this.enabledItems, function (item) { return item.value === _this.props.selectedValue; }, 0, this);
    };
    GenericDropdownWidget.prototype.setEnabledItems = function (menuItemInfos) {
        this.enabledItems = (menuItemInfos || []).filter(function (item) {
            // tslint:disable-next-line:deprecation
            return !item.isDivider && !item.disabled && !item.isUnselectable;
        });
    };
    GenericDropdownWidget.prototype.getButtonDisplayValue = function () {
        var selectedItemIndex = this.getIndexOfSelectedItem();
        return selectedItemIndex > -1 ? (this.enabledItems[selectedItemIndex].textForDropdownButton || '') : (this.props.placeholder || '');
    };
    GenericDropdownWidget.prototype.render = function () {
        var _this = this;
        // tslint:disable:deprecation
        if (!!this.props.__UNSUPPORTED__searchDefaultText) {
            console.warn('__UNSUPPORTED__searchDefaultText is an unsupported/deprecated prop and should not be used');
        }
        if (!!this.props.__UNSUPPORTED__showSearchField) {
            console.warn('__UNSUPPORTED__showSearchField is an unsupported/deprecated prop and should not be used');
        }
        // tslint:enable:deprecation
        var dropdownStyles = getDropdownStylesByType(this.props.dropdownType, this.props.onDarkBackground);
        var shouldShowLabel = !!this.props.label;
        var containerStyle = tslib_1.__assign(tslib_1.__assign({}, this.props.containerStyle), dropdownStyles.container);
        var flyoutWidth = this.getMenuWidth();
        var flyoutStyle = tslib_1.__assign(tslib_1.__assign({}, this.props.flyoutStyle), { width: flyoutWidth });
        var focusIndex = (this.state.isOpen && this.props.selectedValue) ?
            FindIndex_1.findIndex(this.props.menuItemInfos, function (item) { return item.value === _this.props.selectedValue; }) :
            0;
        return (react_1.createElement('div', {
            style: containerStyle,
            'data-tb-test-id': Declarative_1.makeTestId(this.props.testId, 'Dropdown')
        }, Declarative_1.conditional(shouldShowLabel, react_1.createElement('label', {
            style: dropdownStyles.label,
            id: this.labelId
        }, this.props.label)), react_1.createElement('div', {}, react_1.createElement(DropdownButtonWidget, {
            disabled: this.props.disabled,
            dropdownId: this.dropdownId,
            dropdownOpen: this.state.isOpen,
            dropdownType: this.props.dropdownType,
            onDarkBackground: this.props.onDarkBackground,
            interactiveStyles: dropdownStyles.button.interactive,
            onKeyDown: this.handleKeyDown,
            pointerClick: this.toggleMenu,
            labelledById: Declarative_1.conditional(shouldShowLabel, this.labelId),
            ref: this.setButtonElement,
            testId: Declarative_1.makeTestId(this.props.testId, 'DropdownButton'),
            title: this.props.title
        }, this.state.buttonText)), Declarative_1.conditional(this.state.isOpen, react_1.createElement(FlyoutListMenuWidget_1.GenericFlyoutListMenuWidget, {
            toggleEl: this.buttonEl,
            getAnchorClientRect: this.getAnchorClientRect,
            stackingRootId: this.props.stackingRootId,
            shouldReturnFocusToToggleEl: this.props.shouldReturnFocusOnClose,
            anchorOrigin: {
                vertical: Overlay_1.VerticalOriginOption.bottom,
                horizontal: Overlay_1.HorizontalOriginOption.left
            },
            allowAutoPosition: true,
            // tslint:disable-next-line:deprecation
            scrollingRootId: this.props.scrollingRootId,
            handleScrollOnScrollingRoot: this.toggleMenu,
            onSelect: this.handleSelect,
            id: this.dropdownId,
            __INTERNAL__focusIndex: focusIndex,
            role: 'listbox',
            maxHeight: this.props.maxHeight,
            menuStyle: flyoutStyle,
            menuItemInfos: this.props.menuItemInfos,
            requestCloseAll: this.onRequestClose,
            zIndex: this.props.zIndex,
            testId: this.props.testId,
            // tslint:disable:deprecation
            __UNSUPPORTED__showSearchField: this.props.__UNSUPPORTED__showSearchField,
            __UNSUPPORTED__searchDefaultText: this.props.__UNSUPPORTED__searchDefaultText,
        }))));
    };
    GenericDropdownWidget.defaultProps = {
        shouldReturnFocusOnClose: true,
    };
    return GenericDropdownWidget;
}(React.Component));
exports.GenericDropdownWidget = GenericDropdownWidget;


/***/ }),

/***/ "./lib/src/widgets/DynamicThemeComponent.js":
/*!**************************************************!*\
  !*** ./lib/src/widgets/DynamicThemeComponent.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
/**
 * @deprecated this class is completely empty, just use `React.Component` or `React.PureComponent` instead.
 */
var DynamicThemeComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DynamicThemeComponent, _super);
    function DynamicThemeComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DynamicThemeComponent;
}(React.Component));
exports.DynamicThemeComponent = DynamicThemeComponent;


/***/ }),

/***/ "./lib/src/widgets/ExpandoWidget.js":
/*!******************************************!*\
  !*** ./lib/src/widgets/ExpandoWidget.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var _a, _b, _c;
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var Icons_1 = __webpack_require__(/*! ../icons/Icons */ "./lib/src/icons/Icons.js");
var FocusIndicators_1 = __webpack_require__(/*! ../styles/FocusIndicators */ "./lib/src/styles/FocusIndicators.js");
var PreventUserSelect_1 = __webpack_require__(/*! ../styles/PreventUserSelect */ "./lib/src/styles/PreventUserSelect.js");
var TabStyles_1 = __webpack_require__(/*! ../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var Animation_1 = __webpack_require__(/*! ../utils/Animation */ "./lib/src/utils/Animation.js");
var Declarative_1 = __webpack_require__(/*! ../utils/Declarative */ "./lib/src/utils/Declarative.js");
var DomUtil_1 = __webpack_require__(/*! ../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var FocusIndicator_1 = __webpack_require__(/*! ../utils/FocusIndicator */ "./lib/src/utils/FocusIndicator.js");
var InteractiveDom_1 = __webpack_require__(/*! ../utils/InteractiveDom */ "./lib/src/utils/InteractiveDom.js");
var ReactHelpers_1 = __webpack_require__(/*! ../utils/ReactHelpers */ "./lib/src/utils/ReactHelpers.js");
var DomWidgets_1 = __webpack_require__(/*! ./DomWidgets */ "./lib/src/widgets/DomWidgets.js");
var Spacing = TabStyles_1.TabStyles.Spacing;
var ExpandoDirection;
(function (ExpandoDirection) {
    ExpandoDirection[ExpandoDirection["Up"] = 0] = "Up";
    ExpandoDirection[ExpandoDirection["Down"] = 1] = "Down";
    ExpandoDirection[ExpandoDirection["Left"] = 2] = "Left";
    ExpandoDirection[ExpandoDirection["Right"] = 3] = "Right";
})(ExpandoDirection = exports.ExpandoDirection || (exports.ExpandoDirection = {}));
var CollapsedIconTransform = Object.freeze((_a = {},
    _a[ExpandoDirection.Up] = 'rotate(180deg)',
    _a[ExpandoDirection.Right] = 'rotate(90deg)',
    _a[ExpandoDirection.Down] = 'rotate(180deg)',
    _a[ExpandoDirection.Left] = 'rotate(270deg)',
    _a));
var ExpandedIconTransform = Object.freeze((_b = {},
    _b[ExpandoDirection.Up] = 'rotate(0deg)',
    _b[ExpandoDirection.Right] = CollapsedIconTransform[ExpandoDirection.Left],
    _b[ExpandoDirection.Down] = 'rotate(0deg)',
    _b[ExpandoDirection.Left] = CollapsedIconTransform[ExpandoDirection.Right],
    _b));
var ExpandoFlexDirection = (_c = {},
    _c[ExpandoDirection.Up] = 'column-reverse',
    _c[ExpandoDirection.Down] = 'column',
    _c[ExpandoDirection.Left] = 'row-reverse',
    _c[ExpandoDirection.Right] = 'row',
    _c);
var ExpandoButtonStyleName = TypeStyle.style(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, PreventUserSelect_1.PreventUserSelect), FocusIndicators_1.PreFocusIndicator), { alignItems: 'center', cursor: 'pointer', display: 'flex' }));
/**
 * **NOTE**: all HTML props are applied to the focusable button element, with the exception of `style` and `className`, which are applied
 * to the root wrapper element.
 */
var ExpandoWidget = /** @class */ (function (_super) {
    tslib_1.__extends(ExpandoWidget, _super);
    function ExpandoWidget() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.expandoBaseTestId = 'Expando';
        _this.contentRef = React.createRef();
        _this.contentId = DomUtil_1.generateId();
        _this.skipAnimation = true;
        _this.state = {
            hoveringOnExpandoButton: false,
            shouldShowContent: _this.props.isExpanded,
            animationTimeoutId: undefined,
        };
        _this.handleClick = function (e) {
            _this.handleExpandOrCollapse();
        };
        _this.handleKey = function (e) {
            if (e.key === ' ' || e.key === 'Enter') {
                e.stopPropagation();
                e.preventDefault();
                if (e.type === 'keyup') {
                    _this.handleExpandOrCollapse();
                }
            }
        };
        _this.handleKeyDown = ReactHelpers_1.mergeEventHandlers(_this.handleKey, function (e) { var _a, _b; return (_b = (_a = _this.props).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        _this.handleKeyUp = ReactHelpers_1.mergeEventHandlers(_this.handleKey, function (e) { var _a, _b; return (_b = (_a = _this.props).onKeyUp) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        _this.handleHover = function (hover) {
            _this.setState({ hoveringOnExpandoButton: hover });
        };
        _this.handleAnimationComplete = function () {
            _this.setState({ animationTimeoutId: undefined });
            if (_this.state.shouldShowContent !== _this.props.isExpanded) {
                _this.setState({ shouldShowContent: _this.props.isExpanded });
            }
        };
        return _this;
    }
    ExpandoWidget.getDerivedStateFromProps = function (props) {
        // We can't always set shouldShowContent: props.isExpanded, because otherwise
        // the content would hide as the collapse animation starts.
        // We instead set shouldShowContent:false only after the collapse animation completes in handleAnimationComplete()
        if (props.isExpanded) {
            return { shouldShowContent: true };
        }
        else {
            return {};
        }
    };
    ExpandoWidget.prototype.componentDidUpdate = function () {
        this.updateHeightOrWidth();
    };
    ExpandoWidget.prototype.componentDidMount = function () {
        this.updateHeightOrWidth();
    };
    ExpandoWidget.prototype.componentWillUnmount = function () {
        window.clearTimeout(this.state.animationTimeoutId);
        this.setState({ animationTimeoutId: undefined });
    };
    ExpandoWidget.prototype.handleExpandOrCollapse = function () {
        if (this.state.animationTimeoutId) {
            return;
        }
        if (this.props.isExpanded) {
            this.props.onCollapse();
        }
        else {
            this.props.onExpand();
        }
    };
    ExpandoWidget.prototype.updateHeightOrWidth = function () {
        var _this = this;
        var contentDiv = this.contentRef.current;
        if (!contentDiv || this.state.animationTimeoutId) {
            return;
        }
        var dimension = this.isVertical() ? 'height' : 'width';
        var animateTo = {
            onComplete: this.handleAnimationComplete.bind(this),
            opacity: this.props.isExpanded ? 1 : 0,
        };
        var willAnimate = false;
        var getContentSize = function () {
            if (!_this.props.isExpanded) {
                return 0;
            }
            var measuredDimension = 0;
            if (dimension === 'height') {
                measuredDimension = contentDiv.scrollHeight;
            }
            else if (dimension === 'width') {
                measuredDimension = contentDiv.scrollWidth;
            }
            var cannotMeasure = _this.props.isExpanded && measuredDimension === 0;
            return cannotMeasure ? undefined : measuredDimension;
        };
        var checkShouldAnimate = function (currentValue, newValue) {
            var canMeasure = newValue !== undefined;
            var sizeHasChanged = currentValue !== newValue + "px";
            return canMeasure && sizeHasChanged && !_this.skipAnimation;
        };
        animateTo[dimension] = getContentSize();
        willAnimate = checkShouldAnimate(contentDiv.style[dimension], animateTo[dimension]);
        if (animateTo[dimension] !== undefined) {
            contentDiv.style[dimension] = animateTo[dimension] + 'px';
        }
        contentDiv.style.opacity = animateTo.opacity.toString();
        if (willAnimate) {
            this.setState({
                animationTimeoutId: window.setTimeout(this.handleAnimationComplete, Animation_1.AnimationDuration)
            });
        }
        this.skipAnimation = false;
    };
    ExpandoWidget.prototype.isVertical = function () {
        return this.props.direction === ExpandoDirection.Up || this.props.direction === ExpandoDirection.Down;
    };
    ExpandoWidget.prototype.getExpandoStyle = function () {
        return {
            display: 'flex',
            flexDirection: ExpandoFlexDirection[this.props.direction],
            alignItems: 'flex-start',
        };
    };
    ExpandoWidget.prototype.getExpandoIconStyle = function () {
        return {
            height: Icons_1.ExpandoIcon.height,
            margin: 'auto',
            marginLeft: 0,
            marginRight: this.props.label ? Spacing.DefaultSpace : 0,
            transform: this.props.isExpanded ? ExpandedIconTransform[this.props.direction] : CollapsedIconTransform[this.props.direction],
            transition: "transform, " + Animation_1.AnimationDuration + "ms",
            width: Icons_1.ExpandoIcon.width,
        };
    };
    ExpandoWidget.prototype.getExpandoContentStyle = function () {
        return tslib_1.__assign({ overflow: this.props.isExpanded && !this.state.animationTimeoutId ? undefined : 'hidden', position: 'relative' }, (!this.skipAnimation && {
            transition: (this.isVertical() ? 'height' : 'width') + " " + Animation_1.AnimationDuration + "ms ease-out,\n                   opacity " + Animation_1.AnimationDuration + "ms ease-out"
        }));
    };
    ExpandoWidget.prototype.render = function () {
        var _a = this.props, children = _a.children, className = _a.className, direction = _a.direction, isExpanded = _a.isExpanded, label = _a.label, onCollapse = _a.onCollapse, onExpand = _a.onExpand, style = _a.style, testId = _a.testId, htmlProps = tslib_1.__rest(_a, ["children", "className", "direction", "isExpanded", "label", "onCollapse", "onExpand", "style", "testId"]);
        return (React.createElement("div", { className: className, "data-tb-test-id": Declarative_1.makeTestId(testId, this.expandoBaseTestId), style: tslib_1.__assign(tslib_1.__assign({}, this.getExpandoStyle()), style) },
            React.createElement(InteractiveDom_1.InteractiveDomWrapper, { key: 'expandoInteractiveDom', handleHover: this.handleHover, pointerClick: this.handleClick },
                React.createElement(FocusIndicator_1.__UNSTABLE__INTERNAL__FocusIndicator, null,
                    React.createElement("div", tslib_1.__assign({}, htmlProps, { "aria-controls": this.contentId, "aria-expanded": isExpanded, className: ExpandoButtonStyleName, "data-tb-test-id": Declarative_1.makeTestId(testId, this.expandoBaseTestId, 'Button'), onKeyDown: this.handleKeyDown, onKeyUp: this.handleKeyUp, role: 'button', tabIndex: 0 }),
                        React.createElement(DomWidgets_1.Img, { key: 'expandoIcon', "data-tb-test-id": Declarative_1.makeTestId(testId, this.expandoBaseTestId, 'Icon'), src: Icons_1.ExpandoIcon.icon({ active: this.state.hoveringOnExpandoButton }), style: this.getExpandoIconStyle() }),
                        label &&
                            React.createElement("div", { key: 'expandoLabel', "data-tb-test-id": Declarative_1.makeTestId(testId, this.expandoBaseTestId, 'Label') }, label)))),
            React.createElement("div", { key: 'expandoContent', "data-tb-test-id": Declarative_1.makeTestId(testId, this.expandoBaseTestId, 'Content'), 
                // We hide content if collapsed to prevent children from getting focus when they shouldn't
                hidden: !this.state.shouldShowContent, id: this.contentId, ref: this.contentRef, style: this.getExpandoContentStyle() }, children)));
    };
    return ExpandoWidget;
}(React.Component));
exports.ExpandoWidget = ExpandoWidget;


/***/ }),

/***/ "./lib/src/widgets/FloaterWidget.js":
/*!******************************************!*\
  !*** ./lib/src/widgets/FloaterWidget.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var Declarative_1 = __webpack_require__(/*! ../utils/Declarative */ "./lib/src/utils/Declarative.js");
var Geometry = __webpack_require__(/*! ../utils/Geometry */ "./lib/src/utils/Geometry.js");
var StackingComponent_1 = __webpack_require__(/*! ../utils/StackingComponent */ "./lib/src/utils/StackingComponent.js");
var ViewportHelpers = __webpack_require__(/*! ../utils/ViewportHelpers */ "./lib/src/utils/ViewportHelpers.js");
var Styles = {
    Floater: {
        position: 'absolute',
        outline: 0,
        pointerEvents: 'auto'
    }
};
var FloaterWidgetDefault = /** @class */ (function (_super) {
    tslib_1.__extends(FloaterWidgetDefault, _super);
    function FloaterWidgetDefault() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.floater = null;
        _this.centerTimeoutHandle = null;
        _this.state = { floaterElem: null };
        _this.floaterRefHandler = function (ref) {
            _this.floater = ref;
            _this.setState({ floaterElem: ref });
            if (!!_this.props.handleFloaterRef) {
                _this.props.handleFloaterRef(ref);
            }
        };
        return _this;
    }
    /** Gets a rect of the floater's size that is centered in the visual viewport. */
    FloaterWidgetDefault.prototype.getCenteredFloaterRectInLayoutCoords = function () {
        var viewportRectInLayoutCoords = ViewportHelpers.getVisualViewportRectRelativeToLayoutViewport();
        var floaterSize = { width: this.floater.offsetWidth, height: this.floater.offsetHeight };
        var centeredFloaterPosInLayoutCoords = Geometry.computePositionToCenterAreaInBounds(floaterSize, viewportRectInLayoutCoords);
        return Geometry.makeClientRect(centeredFloaterPosInLayoutCoords, floaterSize);
    };
    /** Gets a rect that represents a lower bound on the extents of the page. */
    FloaterWidgetDefault.prototype.getMinimumPageRectInLayoutCoords = function () {
        /**
         * It's tricky to get the full size of the page because super-wide elements can stretch the page beyond the document's
         * initial containing block, but getting a minimum bound on the page size is good enough for our purposes.
         */
        var pagePosInLayoutCoords = ViewportHelpers.getElementPositionRelativeToLayoutViewport(document.documentElement);
        var minimumPageSizeInferredFromLayoutViewport = ViewportHelpers.getLayoutViewportSize();
        var viewportRectInLayoutCoords = ViewportHelpers.getVisualViewportRectRelativeToLayoutViewport();
        var minimumPageSizeInferredFromVisualViewport = {
            width: viewportRectInLayoutCoords.right - pagePosInLayoutCoords.left,
            height: viewportRectInLayoutCoords.bottom - pagePosInLayoutCoords.top
        };
        var minimumPageSize = Geometry.getMaxWidthAndHeight(minimumPageSizeInferredFromLayoutViewport, minimumPageSizeInferredFromVisualViewport);
        return Geometry.makeClientRect(pagePosInLayoutCoords, minimumPageSize);
    };
    /**
     * Centers the floater in the visual viweport.
     */
    FloaterWidgetDefault.prototype.centerInVisualViewport = function () {
        var centeredFloaterRectInLayoutCoords = this.getCenteredFloaterRectInLayoutCoords();
        var minimumPageRectInLayoutCoords = this.getMinimumPageRectInLayoutCoords();
        /** Constrain position to prevent us from positioning outside of the page, which could cause unwanted overflow. */
        var constrainedFloaterPosInLayoutCoords = Geometry.computePositionToContainBounds(centeredFloaterRectInLayoutCoords, minimumPageRectInLayoutCoords);
        this.setPosition(constrainedFloaterPosInLayoutCoords);
    };
    FloaterWidgetDefault.prototype.getFloaterClientRect = function () {
        return this.floater.getBoundingClientRect();
    };
    /**
     * Set the position of the floater widget. The position should be in layout viewport coordinates.
     */
    FloaterWidgetDefault.prototype.setPosition = function (pos) {
        var offsetParent = this.floater.offsetParent || document.documentElement;
        var offsetParentPosInLayoutCoords = ViewportHelpers.getElementPositionRelativeToLayoutViewport(offsetParent);
        var posInOffsetParentCoords = Geometry.subtractPositions(pos, offsetParentPosInLayoutCoords);
        this.floater.style.top = posInOffsetParentCoords.top + 'px';
        this.floater.style.left = posInOffsetParentCoords.left + 'px';
    };
    FloaterWidgetDefault.prototype.componentDidMount = function () {
        this.centerInVisualViewport();
    };
    FloaterWidgetDefault.prototype.componentDidUpdate = function (prevProps, prevState) {
        var _this = this;
        // only recenter for prop updates, not state updates
        if (this.props.shouldRecenterOnUpdate && prevState.floaterElem === this.state.floaterElem) {
            this.clearDeferredCentering();
            /* Positioning is size-sensitive, so make sure the DOM has been drawn first before positioning */
            this.centerTimeoutHandle = window.setTimeout(function () {
                _this.centerInVisualViewport();
            }, 0);
        }
    };
    FloaterWidgetDefault.prototype.clearDeferredCentering = function () {
        if (this.centerTimeoutHandle) {
            clearTimeout(this.centerTimeoutHandle);
            this.centerTimeoutHandle = null;
        }
    };
    FloaterWidgetDefault.prototype.componentWillUnmount = function () {
        this.clearDeferredCentering();
    };
    FloaterWidgetDefault.prototype.render = function () {
        return (React.createElement(StackingComponent_1.StackingRootContext.Provider, { value: this.state.floaterElem },
            React.createElement("div", { children: this.props.children, "data-tb-test-id": Declarative_1.makeTestId(this.props.testId, 'Floater'), ref: this.floaterRefHandler, style: tslib_1.__assign(tslib_1.__assign({}, Styles.Floater), this.props.customFloaterStyle) })));
    };
    return FloaterWidgetDefault;
}(React.Component));
exports.FloaterWidgetDefault = FloaterWidgetDefault;
exports.FloaterWidget = StackingComponent_1.StackingComponentHOC(FloaterWidgetDefault);


/***/ }),

/***/ "./lib/src/widgets/FlyoutListMenuTextWidget.js":
/*!*****************************************************!*\
  !*** ./lib/src/widgets/FlyoutListMenuTextWidget.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var FlyoutListMenuWidget_1 = __webpack_require__(/*! ./FlyoutListMenuWidget */ "./lib/src/widgets/FlyoutListMenuWidget.js");
var MenuItemInfo_1 = __webpack_require__(/*! ./MenuItemInfo */ "./lib/src/widgets/MenuItemInfo.js");
exports.FlyoutListMenuWidget = function (props) {
    var convertedProps = tslib_1.__assign(tslib_1.__assign({}, props), { menuItemInfos: MenuItemInfo_1.convertMenuItemInfoToGeneric(props.menuItemInfos) });
    return React.createElement(FlyoutListMenuWidget_1.GenericFlyoutListMenuWidget, convertedProps);
};
exports.FlyoutListMenuWidget.displayName = 'FlyoutListMenuWidget';


/***/ }),

/***/ "./lib/src/widgets/FlyoutListMenuWidget.js":
/*!*************************************************!*\
  !*** ./lib/src/widgets/FlyoutListMenuWidget.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// tslint:disable:deprecation
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var ReactDOM = __webpack_require__(/*! react-dom */ "react-dom");
var SharedWidgets_1 = __webpack_require__(/*! ../SharedWidgets */ "./lib/src/SharedWidgets.js");
var TabStyles_1 = __webpack_require__(/*! ../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var DomUtil_1 = __webpack_require__(/*! ../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var GlobalPointerDownOutsideListener_1 = __webpack_require__(/*! ../utils/GlobalPointerDownOutsideListener */ "./lib/src/utils/GlobalPointerDownOutsideListener.js");
var Overlay_1 = __webpack_require__(/*! ../utils/Overlay */ "./lib/src/utils/Overlay.js");
var ListMenuWidget_1 = __webpack_require__(/*! ./ListMenuWidget */ "./lib/src/widgets/ListMenuWidget.js");
var DefaultAnchorOrigin = {
    vertical: Overlay_1.VerticalOriginOption.bottom,
    horizontal: Overlay_1.HorizontalOriginOption.left
};
var Spacing = TabStyles_1.TabStyles.Spacing, Sizing = TabStyles_1.TabStyles.Sizing, Colors = TabStyles_1.TabStyles.Colors, Shadow = TabStyles_1.TabStyles.Shadow;
exports.FlyoutListMenuStyles = {
    backgroundColor: 'white',
    borderColor: Colors.L6,
    borderRadius: Sizing.BorderRadius,
    borderStyle: 'solid',
    borderWidth: Sizing.BorderWidth,
    boxShadow: Shadow.Standard
};
var GenericFlyoutListMenuWidget = /** @class */ (function (_super) {
    tslib_1.__extends(GenericFlyoutListMenuWidget, _super);
    function GenericFlyoutListMenuWidget(props) {
        var _this = _super.call(this, props) || this;
        _this.flyoutDomNode = null;
        _this.searchDomNode = null;
        _this.listWidgetInstance = null;
        _this.handleSearchEscape = function () {
            if (!!_this.state.searchString) {
                _this.setState({ searchString: '' });
            }
            else {
                _this.props.requestCloseAll();
            }
        };
        _this.handleCancelSearch = function () {
            _this.setState({ searchString: undefined });
        };
        _this.handleSearchChanged = function (searchString) {
            _this.setState({ searchString: searchString });
        };
        _this.handleSearchEnter = function () {
            if (_this.listWidgetInstance) {
                _this.listWidgetInstance.selectActive();
            }
        };
        _this.getFilteredMenuItems = function () {
            if (!_this.state.searchString) {
                return _this.props.menuItemInfos;
            }
            // filter to items which case-insensitively contain searchString
            return _this.props.menuItemInfos.filter(function (item) {
                return item.isDivider || (item.keyboardAccessibleValue &&
                    item.keyboardAccessibleValue.toUpperCase().indexOf(_this.state.searchString.toUpperCase()) >= 0);
            }).filter(function (item, index, items) {
                return !(item.isDivider && index > 0 && items[index - 1].isDivider);
            }).filter(function (item, index, items) {
                return !(item.isDivider && (index === 0 || index === items.length - 1));
            });
        };
        _this.handleKeyDown = function (e) {
            switch (e.key) {
                case 'ArrowUp':
                case 'ArrowDown':
                    if (_this.state.focusLocation === 'search' && _this.getFilteredMenuItems().length > 0) {
                        _this.setState({ focusLocation: 'list' });
                    }
                    else {
                        return;
                    }
                    break;
                case 'Tab':
                    // this case may need to change if we move toward combobox behavior
                    if (_this.state.focusLocation === 'search') {
                        if (_this.getFilteredMenuItems().length > 0) {
                            _this.setState({ focusLocation: 'list' });
                        }
                    }
                    else if (_this.props.__UNSUPPORTED__showSearchField) {
                        _this.setState({ focusLocation: 'search' });
                    }
                    break; // regardless, trap focus
                default:
                    return; // don't prevent default / stop propagation for unhandled keys
            }
            e.preventDefault();
            e.stopPropagation();
        };
        _this.setSearchDomNode = function (ref) {
            _this.searchDomNode = ref;
        };
        _this.handleListRef = function (ref) {
            _this.listWidgetInstance = ref;
        };
        _this.setFlyoutDomNode = function (ref) {
            _this.flyoutDomNode = ref;
        };
        _this.handleFocus = function (event) {
            var target = event.target;
            var listDomNode = _this.getListDomNode();
            var focusLocation = _this.state.focusLocation;
            if (_this.searchDomNode && _this.searchDomNode.contains(target)) {
                focusLocation = 'search';
            }
            else if (listDomNode && listDomNode.contains(target)) {
                focusLocation = 'list';
            }
            if (_this.state.focusLocation !== focusLocation) {
                _this.setState({ focusLocation: focusLocation });
            }
        };
        _this.getAnchorClientRect = function () {
            if (_this.props.getAnchorClientRect) {
                return _this.props.getAnchorClientRect();
            }
            return _this.props.anchorEl ? _this.props.anchorEl.getBoundingClientRect() : undefined;
        };
        _this.state = {
            searchString: '',
            focusLocation: _this.props.__UNSUPPORTED__showSearchField ? 'search' : 'list',
        };
        return _this;
    }
    GenericFlyoutListMenuWidget.prototype.componentDidMount = function () {
        // Everything outside the toggling element/button or the flyout should trigger a close on mousedown
        if (this.flyoutDomNode) {
            this.unsubscribeFlyoutFromGlobalListener = GlobalPointerDownOutsideListener_1.GlobalPointerDownOutsideListener.subscribe(this.flyoutDomNode, this.props.requestCloseAll);
        }
        if (this.props.toggleEl) {
            this.unsubscribeToggleElFromGlobalListener = GlobalPointerDownOutsideListener_1.GlobalPointerDownOutsideListener.subscribe(this.props.toggleEl, this.props.requestCloseAll);
        }
        this.syncFocus();
    };
    GenericFlyoutListMenuWidget.prototype.componentDidUpdate = function () {
        this.syncFocus();
    };
    GenericFlyoutListMenuWidget.prototype.componentWillUnmount = function () {
        if (this.unsubscribeFlyoutFromGlobalListener) {
            this.unsubscribeFlyoutFromGlobalListener();
        }
        if (this.unsubscribeToggleElFromGlobalListener) {
            this.unsubscribeToggleElFromGlobalListener();
        }
        // Return focus to the toggle element
        if (this.props.toggleEl && this.props.shouldReturnFocusToToggleEl) {
            /**
             * We must use setTimeout here because it is likely a focus event is causing the flyoutlistmenu to unmount.
             * We need to queue this event so that it is called after that focus event.
             */
            DomUtil_1.timeoutFocus(this.props.toggleEl);
        }
    };
    GenericFlyoutListMenuWidget.prototype.syncFocus = function () {
        if (this.state.focusLocation === 'list') {
            var listDomNode = this.getListDomNode();
            if (listDomNode) {
                listDomNode.focus();
            }
        }
        else if (this.state.focusLocation === 'search') {
            if (this.searchDomNode) {
                this.searchDomNode.focus();
            }
        }
    };
    GenericFlyoutListMenuWidget.prototype.getListDomNode = function () {
        return ReactDOM.findDOMNode(this.listWidgetInstance);
    };
    GenericFlyoutListMenuWidget.prototype.renderSearchField = function () {
        if (!this.props.__UNSUPPORTED__showSearchField) {
            return undefined;
        }
        return (React.createElement(SharedWidgets_1.SearchFieldWidget, { containerStyle: {
                margin: Spacing.SmallSpace,
                marginBottom: Spacing.DefaultSpace,
            }, handleCancelSearch: this.handleCancelSearch, handleChange: this.handleSearchChanged, handleEnter: this.handleSearchEnter, handleEscape: this.handleSearchEscape, inputRef: this.setSearchDomNode, placeholder: this.props.__UNSUPPORTED__searchDefaultText, shouldSelectTextOnFocus: false, testId: 'flyout-search', text: this.state.searchString }));
    };
    GenericFlyoutListMenuWidget.prototype.render = function () {
        if (!!this.props.__UNSUPPORTED__searchDefaultText) {
            console.warn('__UNSUPPORTED__searchDefaultText is an unsupported/deprecated prop and should not be used');
        }
        if (!!this.props.__UNSUPPORTED__showSearchField) {
            console.warn('__UNSUPPORTED__showSearchField is an unsupported/deprecated prop and should not be used');
        }
        var overlayProps = {
            allowAutoPosition: this.props.allowAutoPosition,
            anchorOrigin: this.props.anchorOrigin || DefaultAnchorOrigin,
            getAnchorClientRect: this.getAnchorClientRect,
            handleScrollOnScrollingRoot: this.props.handleScrollOnScrollingRoot,
            leftFromOverlaidPosition: this.props.leftFromOverlaidPosition,
            scrollingRootId: this.props.scrollingRootId,
            shouldAutoPositionOnScrollingRootScroll: this.props.shouldAutoPositionOnScrollingRootScroll,
            stackedOrigin: this.props.stackedOrigin,
            stackingRootId: this.props.stackingRootId,
            topFromOverlaidPosition: this.props.topFromOverlaidPosition,
            zIndex: this.props.zIndex,
        };
        var containerProps = {
            onFocus: this.handleFocus,
            onKeyDown: this.handleKeyDown,
            onMouseEnter: this.props.onMouseEnter,
            ref: this.setFlyoutDomNode,
            style: tslib_1.__assign(tslib_1.__assign({}, exports.FlyoutListMenuStyles), this.props.menuStyle),
        };
        var listMenuProps = {
            __INTERNAL__focusIndex: this.props.__INTERNAL__focusIndex,
            focusDisabled: this.state.focusLocation === 'search',
            id: this.props.id,
            letterSearchDisabled: this.props.__UNSUPPORTED__showSearchField,
            maxHeight: this.props.maxHeight,
            menuItemInfos: this.getFilteredMenuItems(),
            onEscapeKeyUp: this.props.onEscapeKeyUp,
            onLeftArrowKeyDown: this.props.onLeftArrowKeyDown,
            onSelect: this.props.onSelect,
            // TFS1018850 Make sure GlobalPointerDownOutsideListener subscribes to the same closeHandler as its submenus
            requestCloseAll: this.props.requestCloseAll,
            role: this.props.role,
            scrollingRootId: this.props.scrollingRootId,
            stackingRootId: this.props.stackingRootId,
            subMenuAllowAutoPosition: this.props.allowAutoPosition,
            subMenuShouldAutoPositionOnScrollingRootScroll: this.props.shouldAutoPositionOnScrollingRootScroll,
            testId: this.props.testId,
            zIndex: this.props.zIndex,
        };
        return (React.createElement(Overlay_1.Overlay, tslib_1.__assign({}, overlayProps),
            React.createElement("div", tslib_1.__assign({}, containerProps),
                this.renderSearchField(),
                React.createElement(ListMenuWidget_1.ListMenuWidget, tslib_1.__assign({}, listMenuProps, { ref: this.handleListRef })))));
    };
    GenericFlyoutListMenuWidget.defaultProps = {
        role: 'menu',
        shouldReturnFocusToToggleEl: true,
    };
    return GenericFlyoutListMenuWidget;
}(React.Component));
exports.GenericFlyoutListMenuWidget = GenericFlyoutListMenuWidget;


/***/ }),

/***/ "./lib/src/widgets/GlassWidget.js":
/*!****************************************!*\
  !*** ./lib/src/widgets/GlassWidget.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TabStyles_1 = __webpack_require__(/*! ../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var Declarative_1 = __webpack_require__(/*! ../utils/Declarative */ "./lib/src/utils/Declarative.js");
var InteractiveDom_1 = __webpack_require__(/*! ../utils/InteractiveDom */ "./lib/src/utils/InteractiveDom.js");
var StackingComponent_1 = __webpack_require__(/*! ../utils/StackingComponent */ "./lib/src/utils/StackingComponent.js");
var getStyles = function () {
    return {
        Glass: {
            position: 'fixed',
            top: 0,
            left: 0,
            bottom: 0,
            right: 0,
            padding: 0,
            margin: 0,
            pointerEvents: 'auto'
        },
        Clear: {
            backgroundColor: TabStyles_1.TabStyles.Colors.White,
            opacity: TabStyles_1.TabStyles.Opacity.ClearGlass
        },
        Opaque: {
            backgroundColor: TabStyles_1.TabStyles.Colors.OpaqueGlass,
            opacity: TabStyles_1.TabStyles.Opacity.OpaqueGlass
        }
    };
};
var GlassWidgetBase = /** @class */ (function (_super) {
    tslib_1.__extends(GlassWidgetBase, _super);
    function GlassWidgetBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleKeyDown = function (e) {
            if ((e.key === 'Tab' && e.shiftKey) ||
                (e.key === 'Escape' && _this.props.handleEscape)) {
                e.preventDefault();
                e.stopPropagation();
            }
        };
        _this.handleKeyUp = function (e) {
            if (_this.props.handleEscape && e.key === 'Escape') {
                _this.props.handleEscape();
                e.preventDefault();
                e.stopPropagation();
            }
        };
        return _this;
    }
    GlassWidgetBase.prototype.render = function () {
        var _this = this;
        var styles = getStyles();
        var style = tslib_1.__assign(tslib_1.__assign({}, styles.Glass), (this.props.isTransparent ? styles.Clear : styles.Opaque));
        return (React.createElement(InteractiveDom_1.InteractiveDomWrapper, { pointerClick: function (e) {
                var _a, _b;
                e.preventDefault();
                (_b = (_a = _this.props).handleClick) === null || _b === void 0 ? void 0 : _b.call(_a);
            } },
            React.createElement("div", { "data-tb-test-id": Declarative_1.makeTestId(this.props.testId, 'Glass'), onKeyDown: this.handleKeyDown, onKeyUp: this.handleKeyUp, style: style, tabIndex: 0 })));
    };
    return GlassWidgetBase;
}(React.Component));
exports.GlassWidgetBase = GlassWidgetBase;
exports.GlassWidget = StackingComponent_1.StackingComponentHOC(GlassWidgetBase);


/***/ }),

/***/ "./lib/src/widgets/InlineAlert/CompactInlineAlertWidget.js":
/*!*****************************************************************!*\
  !*** ./lib/src/widgets/InlineAlert/CompactInlineAlertWidget.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var InlineAlertBase_1 = __webpack_require__(/*! ./InlineAlertBase */ "./lib/src/widgets/InlineAlert/InlineAlertBase.js");
exports.InlineAlertType = InlineAlertBase_1.InlineAlertType;
exports.InteractiveAlertClass = 'interactiveAlert';
exports.InteractiveIconClass = 'interactiveIconContainer';
exports.CompactAlertStyleName = TypeStyle.style({
    minHeight: 24,
    $nest: (_a = {},
        _a["& ." + InlineAlertBase_1.MessageClass] = {
            flexGrow: 1,
            margin: "3px 8px",
        },
        _a["& ." + exports.InteractiveIconClass] = {
            flexShrink: 0,
            margin: "6px 8px 0px 8px",
        },
        _a["&." + exports.InteractiveAlertClass] = {
            cursor: 'pointer',
            $nest: (_b = {},
                _b["&." + InlineAlertBase_1.InlineAlertType.Success + ":hover"] = {
                    backgroundColor: InlineAlertBase_1.ColorMap.success.hoverColor,
                },
                _b["&." + InlineAlertBase_1.InlineAlertType.Info + ":hover"] = {
                    backgroundColor: InlineAlertBase_1.ColorMap.info.hoverColor,
                },
                _b["&." + InlineAlertBase_1.InlineAlertType.Warning + ":hover"] = {
                    backgroundColor: InlineAlertBase_1.ColorMap.warning.hoverColor,
                },
                _b["&." + InlineAlertBase_1.InlineAlertType.Error + ":hover"] = {
                    backgroundColor: InlineAlertBase_1.ColorMap.error.hoverColor,
                },
                _b),
        },
        _a),
});
exports.CompactInlineAlertWidget = React.forwardRef(function (props, ref) {
    var className = props.className, icon = props.icon, iconContainerStyle = props.iconContainerStyle, restProps = tslib_1.__rest(props, ["className", "icon", "iconContainerStyle"]);
    var InteractiveIcon = function (interactiveIcon) {
        return React.createElement("div", { children: interactiveIcon, className: exports.InteractiveIconClass, style: iconContainerStyle });
    };
    return (React.createElement(InlineAlertBase_1.InlineAlert, tslib_1.__assign({}, restProps, { className: TypeStyle.classes(className, exports.CompactAlertStyleName, restProps.onClick && exports.InteractiveAlertClass), interactiveElement: icon && InteractiveIcon(icon), ref: ref })));
});


/***/ }),

/***/ "./lib/src/widgets/InlineAlert/InlineAlertAnimator.js":
/*!************************************************************!*\
  !*** ./lib/src/widgets/InlineAlert/InlineAlertAnimator.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(/*! react */ "react");
var react_animate_height_1 = __webpack_require__(/*! react-animate-height */ "./node_modules/react-animate-height/lib/AnimateHeight.js");
var react_transition_group_1 = __webpack_require__(/*! react-transition-group */ "./node_modules/react-transition-group/esm/index.js");
var Animation_1 = __webpack_require__(/*! ../../utils/Animation */ "./lib/src/utils/Animation.js");
exports.InlineAlertAnimator = function (props) {
    var _a = React.useState(0), transitionHeight = _a[0], setTransitionHeight = _a[1];
    var handleEnter = function () {
        setTransitionHeight('auto');
    };
    var handleExit = function () {
        setTransitionHeight(0);
    };
    var childrenArray = React.Children.toArray(props.children);
    var firstChildArray = childrenArray.slice(0, 1);
    if (childrenArray.length > 1) {
        console.warn('Only a single InlineAlertWidget may be passed into InlineAlertAnimator\nOnly the first will be rendered');
    }
    return (React.createElement(react_transition_group_1.TransitionGroup
    // TransitionGroup will not update exiting children's props without a childFactory
    , { 
        // TransitionGroup will not update exiting children's props without a childFactory
        childFactory: function (child) { return React.cloneElement(child, {
            height: transitionHeight,
        }); } }, firstChildArray.map(function (child, id) {
        return React.createElement(react_transition_group_1.Transition, { appear: true, key: id, onEnter: handleEnter, onExit: handleExit, onExited: props.onExitAnimationComplete, timeout: Animation_1.AnimationDuration },
            React.createElement(react_animate_height_1.default, { animateOpacity: true, duration: Animation_1.AnimationDuration, height: transitionHeight }, child));
    })));
};


/***/ }),

/***/ "./lib/src/widgets/InlineAlert/InlineAlertBase.js":
/*!********************************************************!*\
  !*** ./lib/src/widgets/InlineAlert/InlineAlertBase.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var _a;
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var StatusIcons_1 = __webpack_require__(/*! ../../icons/StatusIcons */ "./lib/src/icons/StatusIcons.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
exports.ColorMap = {
    success: {
        borderColor: '#008057',
        backgroundColor: '#F2F8F6',
        hoverColor: '#E5F1ED',
    },
    info: {
        borderColor: '#2979B2',
        backgroundColor: '#EEF5FB',
        hoverColor: '#DEEBF3',
    },
    warning: {
        borderColor: '#FECA56',
        backgroundColor: '#FEF9EF',
        hoverColor: '#FDF3E0',
    },
    error: {
        borderColor: '#C93A47',
        backgroundColor: '#F9EBEC',
        hoverColor: '#F3D8DA',
    },
};
var AlertTestId = 'InlineAlert';
var IconClass = 'alertIcon';
exports.ContentClass = 'contentContainer';
exports.MessageClass = 'alertMessage';
var InlineAlertType;
(function (InlineAlertType) {
    InlineAlertType["Success"] = "success";
    InlineAlertType["Info"] = "info";
    InlineAlertType["Warning"] = "warning";
    InlineAlertType["Error"] = "error";
})(InlineAlertType = exports.InlineAlertType || (exports.InlineAlertType = {}));
exports.AlertBaseStyleName = TypeStyle.style({
    borderRadius: 2,
    borderLeft: "4px solid transparent",
    boxSizing: 'border-box',
    display: 'flex',
    fontSize: '12px',
    letterSpacing: '0.2px',
    lineHeight: 1.5,
    $nest: (_a = {},
        _a["& ." + IconClass] = {
            flexShrink: 0,
            marginLeft: 8,
            marginTop: 5,
        },
        _a["& ." + exports.ContentClass] = {
            display: 'flex',
            flexGrow: 1,
        },
        _a['& button'] = {
            margin: 0,
        },
        _a['&.success'] = {
            backgroundColor: exports.ColorMap.success.backgroundColor,
            borderColor: exports.ColorMap.success.borderColor,
        },
        _a['&.info'] = {
            backgroundColor: exports.ColorMap.info.backgroundColor,
            borderColor: exports.ColorMap.info.borderColor,
        },
        _a['&.warning'] = {
            backgroundColor: exports.ColorMap.warning.backgroundColor,
            borderColor: exports.ColorMap.warning.borderColor,
        },
        _a['&.error'] = {
            backgroundColor: exports.ColorMap.error.backgroundColor,
            borderColor: exports.ColorMap.error.borderColor,
        },
        _a),
});
exports.InlineAlert = React.forwardRef(function (props, ref) {
    var children = props.children, className = props.className, interactiveElement = props.interactiveElement, testId = props.testId, type = props.type, htmlProps = tslib_1.__rest(props, ["children", "className", "interactiveElement", "testId", "type"]);
    return (React.createElement("div", tslib_1.__assign({ "aria-atomic": true, "aria-live": 'polite' }, htmlProps, { className: TypeStyle.classes(exports.AlertBaseStyleName, className, type), "data-tb-test-id": Declarative_1.makeTestId(testId, AlertTestId), ref: ref }),
        React.createElement(StatusIcons_1.StatusIcon, { type: type, className: IconClass }),
        React.createElement("div", { key: 'contentContainer', className: exports.ContentClass },
            React.createElement("div", { className: exports.MessageClass }, children),
            interactiveElement)));
});


/***/ }),

/***/ "./lib/src/widgets/InlineAlert/InlineAlertWidget.js":
/*!**********************************************************!*\
  !*** ./lib/src/widgets/InlineAlert/InlineAlertWidget.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var _a;
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var ButtonWidgetShim_1 = __webpack_require__(/*! ../Button/ButtonWidgetShim */ "./lib/src/widgets/Button/ButtonWidgetShim.js");
var InlineAlertBase_1 = __webpack_require__(/*! ./InlineAlertBase */ "./lib/src/widgets/InlineAlert/InlineAlertBase.js");
exports.InlineAlertType = InlineAlertBase_1.InlineAlertType;
var VerticalPadding = 16;
var ButtonContainerClass = 'buttonContainer';
exports.AlertStyleName = TypeStyle.style({
    paddingTop: VerticalPadding,
    $nest: (_a = {},
        _a["& ." + InlineAlertBase_1.ContentClass] = {
            flexWrap: 'wrap',
            // We use offsetting margin + padding here accommodate wrapping behavior
            // This allows the button to wrap underneath the text, without causing extra height when not wrapped
            marginBottom: -VerticalPadding,
            minHeight: 40,
            paddingBottom: VerticalPadding,
        },
        _a["& ." + InlineAlertBase_1.MessageClass] = {
            margin: "3px 16px " + VerticalPadding + "px 8px",
        },
        _a["& ." + ButtonContainerClass] = {
            margin: "0px 16px " + VerticalPadding + "px 8px",
        },
        _a)
});
var InlineAlertButton = function (button) {
    return React.createElement("div", { className: ButtonContainerClass }, React.cloneElement(button, {
        buttonType: ButtonWidgetShim_1.ButtonType.Outline,
    }));
};
exports.InlineAlertWidget = React.forwardRef(function (props, ref) {
    var button = props.button, className = props.className, restProps = tslib_1.__rest(props, ["button", "className"]);
    return (React.createElement(InlineAlertBase_1.InlineAlert, tslib_1.__assign({}, restProps, { className: TypeStyle.classes(className, exports.AlertStyleName), interactiveElement: button && InlineAlertButton(button), ref: ref })));
});


/***/ }),

/***/ "./lib/src/widgets/InputLabelWidget.js":
/*!*********************************************!*\
  !*** ./lib/src/widgets/InputLabelWidget.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
// tslint:disable:deprecation
var React = __webpack_require__(/*! react */ "react");
var TabStyles_1 = __webpack_require__(/*! ../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var InteractiveDom_1 = __webpack_require__(/*! ../utils/InteractiveDom */ "./lib/src/utils/InteractiveDom.js");
var Typography = TabStyles_1.TabStyles.Typography;
var getStyle = function (disabled) { return ({
    fontSize: Typography.Sizing.Default,
    fontWeight: 'normal',
    color: disabled ? Typography.Color.Disabled : Typography.Color.Primary,
    lineHeight: 'normal',
    cursor: 'default'
}); };
var labelMouseDownHandler = function (e) {
    if (!(e.target instanceof HTMLInputElement)) {
        e.preventDefault();
    }
};
var InputLabelWidget = /** @class */ (function (_super) {
    tslib_1.__extends(InputLabelWidget, _super);
    /** @deprecated this is not a very useful Widget. Please contact #dev-shared-widgets if you have a use case. */
    function InputLabelWidget() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InputLabelWidget.prototype.render = function () {
        return (React.createElement("label", { className: this.props.className, "data-tb-test-id": this.props.testId + '-Label', id: this.props.id, style: tslib_1.__assign(tslib_1.__assign({}, getStyle(this.props.disabled)), this.props.style), onMouseDown: labelMouseDownHandler }, this.props.children));
    };
    InputLabelWidget = tslib_1.__decorate([
        InteractiveDom_1.InteractiveDomHoCDecorator
        /** @deprecated this is not a very useful Widget. Please contact #dev-shared-widgets if you have a use case. */
    ], InputLabelWidget);
    return InputLabelWidget;
}(React.Component));
exports.InputLabelWidget = InputLabelWidget;


/***/ }),

/***/ "./lib/src/widgets/InteractiveLinkWidget.js":
/*!**************************************************!*\
  !*** ./lib/src/widgets/InteractiveLinkWidget.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var Declarative_1 = __webpack_require__(/*! ../utils/Declarative */ "./lib/src/utils/Declarative.js");
var InteractiveDom_1 = __webpack_require__(/*! ../utils/InteractiveDom */ "./lib/src/utils/InteractiveDom.js");
var underline = { textDecoration: 'underline' };
var interactiveStyles = {
    active: underline,
    focus: underline,
    hover: underline,
};
/**
 * The styling of this widget is not extensible for interactive states and does not match defined Tableau styles.
 *
 * @deprecated use `TextLinkWidget`
 */
var InteractiveLinkWidget = /** @class */ (function (_super) {
    tslib_1.__extends(InteractiveLinkWidget, _super);
    function InteractiveLinkWidget() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleClick = function (e) {
            e.preventDefault();
            if (_this.props.onClick) {
                _this.props.onClick();
            }
        };
        return _this;
    }
    InteractiveLinkWidget.prototype.render = function () {
        var anchorProps = {
            'data-tb-test-id': Declarative_1.makeTestId(this.props.testId, 'InteractiveLink'),
            href: this.props.href || '#',
            onClick: this.handleClick,
            style: tslib_1.__assign(tslib_1.__assign({}, this.props.style), { textDecoration: 'none' }),
        };
        return (React.createElement(InteractiveDom_1.InteractiveDomWrapper, { interactiveStyles: interactiveStyles },
            React.createElement("a", tslib_1.__assign({}, anchorProps), this.props.text)));
    };
    return InteractiveLinkWidget;
}(React.PureComponent));
exports.InteractiveLinkWidget = InteractiveLinkWidget;


/***/ }),

/***/ "./lib/src/widgets/List/FilteringList.js":
/*!***********************************************!*\
  !*** ./lib/src/widgets/List/FilteringList.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var SharedWidgets_1 = __webpack_require__(/*! ../../SharedWidgets */ "./lib/src/SharedWidgets.js");
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var BrowserDetection_1 = __webpack_require__(/*! ../../utils/BrowserDetection */ "./lib/src/utils/BrowserDetection.js");
var DomUtil_1 = __webpack_require__(/*! ../../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var FindIndex_1 = __webpack_require__(/*! ../../utils/FindIndex */ "./lib/src/utils/FindIndex.js");
var ReactHelpers_1 = __webpack_require__(/*! ../../utils/ReactHelpers */ "./lib/src/utils/ReactHelpers.js");
var DropdownOverlay_1 = __webpack_require__(/*! ../Dropdown/DropdownOverlay */ "./lib/src/widgets/Dropdown/DropdownOverlay.js");
var List_1 = __webpack_require__(/*! ./List */ "./lib/src/widgets/List/List.js");
var ListItemUtils_1 = __webpack_require__(/*! ./ListItemUtils */ "./lib/src/widgets/List/ListItemUtils.js");
var ListStyles_1 = __webpack_require__(/*! ./ListStyles */ "./lib/src/widgets/List/ListStyles.js");
var FieldWrapperStyleName = TypeStyle.style({
    flexShrink: 0,
    padding: TabStyles_1.TabStyles.Spacing.SmallSpace,
});
var FieldStyle = {
    width: '100%',
};
function findSelectedItem(selectedValue, items) {
    // not using `findSelectableItemIndex` because it doesn't wrap and skips the current value
    var selectedItemIndex = FindIndex_1.findIndex(items, function (item) { return ListItemUtils_1.isSelectableItem(item) && item.value === selectedValue; });
    return items[selectedItemIndex];
}
/**
 * Use `FilteringList` when it's necessary to have custom filtering logic, e.g. via a server request or for custom formatting
 * of the items based on filtering results. Otherwise most cases will probably just want `LocallyFilteringList`.
 */
var FilteringList = /** @class */ (function (_super) {
    tslib_1.__extends(FilteringList, _super);
    function FilteringList() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.listId = DomUtil_1.generateId();
        _this.state = {
            selectedItem: _this.props.selectedValue ?
                _this.props.items[ListItemUtils_1.findIndexOfItemWithValue(_this.props.items, _this.props.selectedValue)] : undefined,
        };
        _this.handleFocusCapture = ReactHelpers_1.mergeEventHandlers(function (e) {
            if (_this.inputElement && e.target !== _this.inputElement) {
                _this.inputElement.focus();
            }
        }, function (e) { var _a, _b; return (_b = (_a = _this.props).onFocusCapture) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        _this.clearInput = function () {
            _this.handleInputChange({ target: { value: '' } });
            _this.setState({ selectedItem: undefined });
        };
        _this.handleInputChange = function (e) {
            if (_this.props.onFilterChange) {
                _this.props.onFilterChange(e.target.value);
            }
        };
        _this.keyDownHandlers = {
            'Ctrl+Home': function () { return _this.moveSelection(-1, +1); },
            'Ctrl+End': function () { return _this.moveSelection(_this.props.items.length, -1); },
            'ArrowUp': function () { return _this.moveSelection(_this.props.items.indexOf(_this.state.selectedItem), -1); },
            'ArrowDown': function () { return _this.moveSelection(_this.props.items.indexOf(_this.state.selectedItem), +1); },
            'Enter': function () {
                if (_this.props.onSelect && _this.state.selectedItem) {
                    _this.props.onSelect(_this.state.selectedItem.value);
                }
            },
            'Escape': function () {
                if (_this.state.selectedItem) {
                    _this.setState({ selectedItem: undefined });
                    return false;
                }
                return true;
            }
        };
        _this.handleKeyDown = ReactHelpers_1.mergeEventHandlers(function (e) {
            var key = (BrowserDetection_1.isCtrl(e) ? 'Ctrl+' : '') + e.key;
            if (_this.keyDownHandlers[key]) {
                if (!_this.keyDownHandlers[key](e)) { // handler returning falsy means the event was handled
                    e.stopPropagation();
                    e.preventDefault();
                }
            }
        }, function (e) { var _a, _b; return (_b = (_a = _this.props).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        _this.handleDivRef = function (ref) {
            _this.rootElement = ref;
            if (!ref) {
                _this.setState({ width: undefined });
            }
            else {
                // pin the width to prevent the widget from shrinking when items are filtered
                window.setTimeout(function () {
                    if (document.body.contains(ref)) {
                        _this.setState({ width: Math.ceil(ref.getBoundingClientRect().width) }, _this.fixHeightForIE);
                    }
                });
            }
        };
        _this.fixHeightForIE = function () {
            if (!BrowserDetection_1.isIE || !_this.rootElement) {
                return;
            }
            _this.rootElement.style.height = '';
            var height = _this.rootElement.getBoundingClientRect().height;
            _this.rootElement.style.height = Math.ceil(height) + 'px';
        };
        _this.handleSelect = function (value) {
            _this.setState({ selectedItem: findSelectedItem(value, _this.props.items) });
            if (_this.props.onSelect) {
                _this.props.onSelect(value);
            }
        };
        _this.updateInputRef = function (ref) {
            _this.inputElement = ref;
        };
        return _this;
    }
    FilteringList.prototype.componentDidUpdate = function (prevProps, prevState) {
        var _a = this.props, items = _a.items, preserveSelection = _a.preserveSelection;
        var selectedItem = this.state.selectedItem;
        var prevSelectedItem = prevState.selectedItem || {};
        // preserve selection across item list updates
        if (prevProps.items !== items) {
            if (preserveSelection && selectedItem && prevSelectedItem.value === selectedItem.value) {
                this.setState({ selectedItem: findSelectedItem(selectedItem.value, items) });
            }
            else {
                this.setState({ selectedItem: undefined });
            }
        }
        if (prevProps.items !== items || prevProps.children !== this.props.children) {
            this.fixHeightForIE();
        }
        // scroll the selected item into view
        if (selectedItem && ((prevSelectedItem.value !== selectedItem.value) || (prevProps.items !== items))) {
            var elem = document.getElementById(this.listId + "-" + items.indexOf(selectedItem));
            if (elem) {
                DomUtil_1.scrollIntoView(elem);
            }
        }
    };
    FilteringList.prototype.componentDidMount = function () {
        if (this.props.autoFocus) {
            DomUtil_1.timeoutFocus(this.inputElement);
        }
    };
    FilteringList.prototype.moveSelection = function (start, direction) {
        var items = this.props.items;
        this.setState({ selectedItem: items[ListItemUtils_1.findSelectableItemIndex(items, start, direction)] });
    };
    FilteringList.prototype.render = function () {
        var _this = this;
        // tslint:disable-next-line:max-line-length
        var _a = this.props, autoComplete = _a.autoComplete, autoFocus = _a.autoFocus, children = _a.children, className = _a.className, listTestId = _a.listTestId, inputTestId = _a.inputTestId, items = _a.items, onFilterChange = _a.onFilterChange, onSelect = _a.onSelect, preserveSelection = _a.preserveSelection, searchPlaceholder = _a.searchPlaceholder, searchText = _a.searchText, selectedValue = _a.selectedValue, style = _a.style, testId = _a.testId, divProps = tslib_1.__rest(_a, ["autoComplete", "autoFocus", "children", "className", "listTestId", "inputTestId", "items", "onFilterChange", "onSelect", "preserveSelection", "searchPlaceholder", "searchText", "selectedValue", "style", "testId"]);
        var currentSelectedValue = this.state.selectedItem && this.state.selectedItem.value;
        // tslint:disable-next-line:no-any SingleSelectDropdown overrides this prop when it clones regardless of List type
        delete divProps['selectOnEnterKey'];
        return React.createElement(DropdownOverlay_1.DropdownPositionedAboveContext.Consumer, null, function (reverse) {
            return React.createElement("div", tslib_1.__assign({}, divProps, { className: TypeStyle.classes(ListStyles_1.FilteringListStyleName, reverse && 'reverse', className), "data-tb-test-id": testId, onFocusCapture: _this.handleFocusCapture, onKeyDown: _this.handleKeyDown, ref: _this.handleDivRef, style: tslib_1.__assign({ width: _this.state.width }, style) }),
                React.createElement(SharedWidgets_1.TextFieldWidget, { "aria-activedescendant": currentSelectedValue ? _this.listId + "-" + items.indexOf(_this.state.selectedItem) : undefined, "aria-autocomplete": 'list', "aria-controls": _this.listId, "aria-expanded": true, "aria-label": divProps['aria-label'], "aria-labelledby": divProps['aria-labelledby'], autoComplete: autoComplete, className: FieldWrapperStyleName, kind: 'search', label: undefined, onChange: _this.handleInputChange, onClear: _this.clearInput, placeholder: searchPlaceholder, ref: _this.updateInputRef, role: 'combobox', style: FieldStyle, testId: inputTestId, value: searchText || '' }),
                children,
                React.createElement(List_1.List, { disableTabAccessibility: true, id: _this.listId, items: items, onSelect: _this.handleSelect, selectedValue: currentSelectedValue, selectOnEnterKey: false, testId: listTestId }));
        });
    };
    FilteringList.defaultProps = {
        preserveSelection: true,
    };
    return FilteringList;
}(React.Component));
exports.FilteringList = FilteringList;


/***/ }),

/***/ "./lib/src/widgets/List/List.js":
/*!**************************************!*\
  !*** ./lib/src/widgets/List/List.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var DomUtil_1 = __webpack_require__(/*! ../../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var FindIndex_1 = __webpack_require__(/*! ../../utils/FindIndex */ "./lib/src/utils/FindIndex.js");
var PointerEvents_1 = __webpack_require__(/*! ../../utils/PointerEvents */ "./lib/src/utils/PointerEvents.js");
var ReactHelpers_1 = __webpack_require__(/*! ../../utils/ReactHelpers */ "./lib/src/utils/ReactHelpers.js");
var ListItemUtils_1 = __webpack_require__(/*! ./ListItemUtils */ "./lib/src/widgets/List/ListItemUtils.js");
var ListStyles_1 = __webpack_require__(/*! ./ListStyles */ "./lib/src/widgets/List/ListStyles.js");
/**
 * `List` displays a keyboard-navigable list of items similar to an HTML `<select multiple>`. However, unlike `<select multiple>`,
 * it only supports single-selection, as defined in the WAI-ARIA spec for the listbox role. List supports typeahead-focus as described
 * in that spec, and displays a background color on the selected item. Items are supplied via an array of `ListItem`, which has properties
 * similar to `<option>`.
 */
var List = /** @class */ (function (_super) {
    tslib_1.__extends(List, _super);
    function List() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.listElement = null;
        _this.itemTextContent = [];
        _this.typeAheadQuery = '';
        _this.typeAheadTimeoutHandle = 0;
        _this.state = {
            activeItemIndex: Math.max(0, _this.props.selectedValue ? ListItemUtils_1.findIndexOfItemWithValue(_this.props.items, _this.props.selectedValue) : 0),
        };
        _this.handleFocus = ReactHelpers_1.mergeEventHandlers(function (e) {
            if (e.target !== e.currentTarget) {
                var closestOption = DomUtil_1.closest(e.target, '[role="option"]');
                if (!closestOption) {
                    return;
                }
                var activeItemIndex = parseInt(closestOption.getAttribute('data-itemindex'), 10);
                if (!isNaN(activeItemIndex) && activeItemIndex !== _this.state.activeItemIndex) {
                    _this.setState({ activeItemIndex: activeItemIndex });
                }
            }
        }, function (e) { var _a, _b; return (_b = (_a = _this.props).onFocus) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        _this.handleClick = ReactHelpers_1.mergeEventHandlers(function (e) {
            e.preventDefault(); // TFS 1079434, "click" events come from touch in VizClient so prevent the native click "echo"
            _this.handleItemSelection(e.target);
        }, function (e) { var _a, _b; return (_b = (_a = _this.props).onClick) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        _this.keyDownHandlers = Object.freeze({
            'ArrowUp': function () { return ListItemUtils_1.findFocusableItemIndex(_this.props.items, _this.state.activeItemIndex, -1); },
            'ArrowDown': function () { return ListItemUtils_1.findFocusableItemIndex(_this.props.items, _this.state.activeItemIndex, +1); },
            'Home': function () { return ListItemUtils_1.findFocusableItemIndex(_this.props.items, -1, 1); },
            'End': function () { return ListItemUtils_1.findFocusableItemIndex(_this.props.items, _this.props.items.length, -1); },
            ' ': function (e) {
                if (!e.repeat) {
                    _this.handleItemSelection(e.target);
                }
                return _this.state.activeItemIndex;
            },
            'Enter': function (e) {
                if (_this.props.selectOnEnterKey) {
                    _this.keyDownHandlers[' '](e);
                }
                return _this.state.activeItemIndex;
            },
        });
        _this.handleKeyDown = ReactHelpers_1.mergeEventHandlers(function (e) {
            if (_this.keyDownHandlers[e.key]) {
                e.stopPropagation();
                e.preventDefault();
                var activeItemIndex = _this.keyDownHandlers[e.key](e);
                if (activeItemIndex !== _this.state.activeItemIndex) {
                    _this.setState({ activeItemIndex: activeItemIndex });
                }
            }
        }, function (e) { var _a, _b; return (_b = (_a = _this.props).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        _this.handleKeyPress = ReactHelpers_1.mergeEventHandlers(function (e) {
            if (e.key === ' ' || e.key === 'Enter' || e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) {
                return;
            }
            window.clearTimeout(_this.typeAheadTimeoutHandle);
            _this.typeAheadTimeoutHandle = window.setTimeout(_this.resetQuery, 500);
            _this.typeAheadQuery += e.key;
            var query = _this.typeAheadQuery.toLowerCase();
            var activeItemIndex = FindIndex_1.findIndex(_this.itemTextContent, function (text, itemIndex) {
                return ListItemUtils_1.isFocusableItem(_this.props.items[itemIndex]) && text.toLowerCase().indexOf(query) === 0;
            }, _this.state.activeItemIndex + (query.length === 1 ? 1 : 0));
            if (activeItemIndex >= 0) {
                _this.setState({ activeItemIndex: activeItemIndex });
            }
        }, function (e) { var _a, _b; return (_b = (_a = _this.props).onKeyPress) === null || _b === void 0 ? void 0 : _b.call(_a, e); });
        _this.handleListRef = function (ref) {
            _this.listElement = ref;
        };
        _this.resetQuery = function () {
            _this.typeAheadQuery = '';
        };
        return _this;
    }
    List.prototype.componentDidMount = function () {
        this.memoizeItemTextContent();
    };
    List.prototype.componentDidUpdate = function (prevProps, prevState) {
        var items = this.props.items;
        if (!items) {
            return;
        }
        if (prevProps.items !== items) {
            this.memoizeItemTextContent();
        }
        if (items.length && this.state.activeItemIndex >= items.length) {
            this.setState({ activeItemIndex: items.length - 1 });
            return;
        }
        if (prevState.activeItemIndex !== this.state.activeItemIndex) {
            this.syncFocus();
        }
    };
    List.prototype.handleItemSelection = function (target) {
        var itemNode = DomUtil_1.closest(target, '[role="option"]:not([aria-disabled="true"])');
        if (!this.props.onSelect || !itemNode) {
            return;
        }
        var value = itemNode.getAttribute('data-itemvalue');
        this.props.onSelect(value);
    };
    List.prototype.memoizeItemTextContent = function () {
        this.itemTextContent = [];
        var listNode = this.listElement;
        if (!listNode) {
            return;
        }
        var item;
        // tslint:disable-next-line:no-any
        for (var _i = 0, _a = listNode.children; _i < _a.length; _i++) {
            item = _a[_i];
            this.itemTextContent.push(item.textContent);
        }
    };
    List.prototype.syncFocus = function () {
        var _a;
        if (this.listElement && this.listElement.contains(document.activeElement)) {
            var activeItem = this.listElement.querySelector("[data-itemindex=\"" + this.state.activeItemIndex + "\"]");
            (_a = activeItem) === null || _a === void 0 ? void 0 : _a.focus();
        }
    };
    List.prototype.renderItems = function (items, selectedValue, activeItemIndex) {
        var _this = this;
        if (!items) {
            return [];
        }
        var listId = this.props.id;
        var setsize = items.filter(ListItemUtils_1.isFocusableItem).length;
        var itemNodes = [];
        var _loop_1 = function (index, posinset) {
            var item = items[index];
            if (item.separator) {
                itemNodes.push(React.createElement("div", { "data-tb-test-id": item.testId, key: "separator%%" + index, role: 'separator' }));
            }
            else {
                if (!item.value) {
                    throw new Error("Item has no value: " + JSON.stringify(item));
                }
                var makeItemElem = function (listItem) {
                    // per option role spec, unselected items should be aria-selected=false if selectable, but undefined if not selectable
                    var isSelected = !!selectedValue && listItem.value === selectedValue ? true : (!!_this.props.onSelect ? false : undefined);
                    var tabIndex = index === activeItemIndex ? 0 : -1;
                    posinset++; // increment first as aria-posinset starts counting from 1
                    return ListItem({ index: index, isSelected: isSelected, item: listItem, listId: listId, posinset: posinset, setsize: setsize, tabIndex: tabIndex });
                };
                // this logic has much in common with similar logic in ListMenuWidget::buildMenuFromMenuItemInfos
                if (item.group) {
                    var groupLabelId = DomUtil_1.generateId();
                    var groupItemNodes = [];
                    for (index++; ListItemUtils_1.isFocusableItem(items[index]); index++) {
                        groupItemNodes.push(makeItemElem(items[index]));
                    }
                    index--;
                    itemNodes.push(React.createElement("div", { role: 'group', "aria-labelledby": groupLabelId, key: "group%%" + item.value },
                        React.createElement("div", { role: 'presentation', id: groupLabelId, "data-tb-test-id": item.testId, key: 'title' }, ListItemContent({ item: item })),
                        groupItemNodes));
                }
                else {
                    itemNodes.push(makeItemElem(item));
                }
            }
            out_index_1 = index;
            out_posinset_1 = posinset;
        };
        var out_index_1, out_posinset_1;
        for (var index = 0, posinset = 0; index < items.length; index++) {
            _loop_1(index, posinset);
            index = out_index_1;
            posinset = out_posinset_1;
        }
        return itemNodes;
    };
    List.prototype.render = function () {
        // tslint:disable-next-line:max-line-length
        var _a = this.props, className = _a.className, disableTabAccessibility = _a.disableTabAccessibility, items = _a.items, onClick = _a.onClick, onSelect = _a.onSelect, selectedValue = _a.selectedValue, selectOnEnterKey = _a.selectOnEnterKey, testId = _a.testId, divProps = tslib_1.__rest(_a, ["className", "disableTabAccessibility", "items", "onClick", "onSelect", "selectedValue", "selectOnEnterKey", "testId"]);
        return (React.createElement(PointerEvents_1.PointerEventWrapper, { pointerClick: this.handleClick },
            React.createElement("div", tslib_1.__assign({}, divProps, { className: TypeStyle.classes(ListStyles_1.ListStyleName, className), "data-tb-test-id": testId, onFocus: this.handleFocus, onKeyDown: this.handleKeyDown, onKeyPress: this.handleKeyPress, ref: this.handleListRef, role: 'listbox' }), this.renderItems(items, selectedValue, disableTabAccessibility ? undefined : this.state.activeItemIndex))));
    };
    return List;
}(React.Component));
exports.List = List;
// tslint:disable-next-line: max-line-length
var ListItem = function (_a) {
    var index = _a.index, item = _a.item, isSelected = _a.isSelected, listId = _a.listId, posinset = _a.posinset, setsize = _a.setsize, tabIndex = _a.tabIndex;
    return React.createElement("div", { "aria-disabled": item.disabled, "aria-posinset": posinset, "aria-selected": isSelected, "aria-setsize": setsize, "data-itemindex": index, "data-itemvalue": item.value, "data-tb-test-id": item.testId, key: "item%%" + item.value, id: listId ? listId + "-" + index : undefined, role: 'option', tabIndex: tabIndex, title: item.tooltip }, ListItemContent({ item: item }));
};
var ListItemContent = function (_a) {
    var item = _a.item;
    return React.createElement("span", { className: ListStyles_1.EllipsedStyleName }, item.content || item.value);
};


/***/ }),

/***/ "./lib/src/widgets/List/ListItemUtils.js":
/*!***********************************************!*\
  !*** ./lib/src/widgets/List/ListItemUtils.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/** Intended only for use for searching lists of items. Does not wrap, skips item at `fromIndex`,
 * and returns `fromIndex` if no match is found.  */
function findIndex(items, fn, fromIndex, direction) {
    for (var index = fromIndex + direction; index >= 0 && index < items.length; index += direction) {
        if (fn(items[index])) {
            return index;
        }
    }
    return fromIndex;
}
function findFocusableItemIndex(items, fromIndex, direction) {
    return findIndex(items, isFocusableItem, fromIndex, direction);
}
exports.findFocusableItemIndex = findFocusableItemIndex;
function findSelectableItemIndex(items, fromIndex, direction) {
    return findIndex(items, isSelectableItem, fromIndex, direction);
}
exports.findSelectableItemIndex = findSelectableItemIndex;
function findIndexOfItemWithValue(items, value) {
    return findIndex(items, function (item) { return !!value && !item.group && item.value === value; }, -1, +1);
}
exports.findIndexOfItemWithValue = findIndexOfItemWithValue;
function isFocusableItem(item) {
    return !!item && !!item.value && !item.separator && !item.group;
}
exports.isFocusableItem = isFocusableItem;
function isSelectableItem(item) {
    return !!item && !item.disabled && isFocusableItem(item);
}
exports.isSelectableItem = isSelectableItem;
var caseInsensitiveValueMatch = function (item, filterValue) {
    return isFocusableItem(item) && item.value.toLowerCase().indexOf(filterValue.toLowerCase()) >= 0;
};
// tslint:disable-next-line:max-line-length
function standardItemFilter(items, filterValue, filterFn) {
    if (filterFn === void 0) { filterFn = caseInsensitiveValueMatch; }
    return items.filter(function (item) {
        return item.group || item.separator || filterFn(item, filterValue);
    }).filter(function (item, index, filteredItems) {
        return !(item.separator && index > 0 && filteredItems[index - 1].separator);
    }).filter(function (item, index, filteredItems) {
        return !(item.separator && (index === 0 || index === filteredItems.length - 1));
    });
}
exports.standardItemFilter = standardItemFilter;


/***/ }),

/***/ "./lib/src/widgets/List/ListStyles.js":
/*!********************************************!*\
  !*** ./lib/src/widgets/List/ListStyles.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var PreventUserSelect_1 = __webpack_require__(/*! ../../styles/PreventUserSelect */ "./lib/src/styles/PreventUserSelect.js");
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var TextEllipsis_1 = __webpack_require__(/*! ../../styles/TextEllipsis */ "./lib/src/styles/TextEllipsis.js");
var BrowserDetection_1 = __webpack_require__(/*! ../../utils/BrowserDetection */ "./lib/src/utils/BrowserDetection.js");
var Opacity = TabStyles_1.TabStyles.Opacity, Sizing = TabStyles_1.TabStyles.Sizing, Spacing = TabStyles_1.TabStyles.Spacing, Typography = TabStyles_1.TabStyles.Typography;
var _a = TabStyles_1.TabStyles.Colors, F2_5 = _a.F2_5, F3 = _a.F3;
exports.ListStyleName = TypeStyle.style(PreventUserSelect_1.PreventUserSelect, {
    color: Typography.Color.Primary,
    fontSize: Typography.Sizing.Default,
    lineHeight: 'normal',
    overflowY: 'auto',
    padding: Spacing.DefaultSpace,
    '-webkit-overflow-scrolling': 'touch',
    $nest: {
        '& [role="separator"]': {
            background: F3,
            height: 1,
            margin: '9.5px 0',
        },
        '& [role="group"] > :first-child': {
            alignItems: 'center',
            display: 'flex',
            fontWeight: 'bold',
            minHeight: Sizing.ListRowHeight,
        },
        '& [role="option"]': {
            alignItems: 'center',
            display: 'flex',
            minHeight: Sizing.ListRowHeight,
            paddingLeft: Spacing.DefaultSpace,
            paddingRight: Spacing.DefaultSpace,
            $nest: {
                '&::after': !BrowserDetection_1.isIE ? {} : {
                    content: "\"\"",
                    minHeight: 'inherit',
                    fontSize: 0,
                },
                '&:hover': {
                    backgroundColor: F2_5,
                },
                '&:focus': {
                // here to show the right precedence position for these styles if we use them later
                },
                '&:active, &[aria-selected="true"]': {
                    backgroundColor: F3,
                },
                '&[aria-disabled="true"]': {
                    backgroundColor: 'transparent',
                    opacity: Opacity.Disabled,
                },
            }
        }
    }
});
exports.EllipsedStyleName = TypeStyle.style({ flexGrow: 1 }, TextEllipsis_1.TextEllipsis);
exports.FilteringListStyleName = TypeStyle.style({
    display: 'flex',
    flexDirection: 'column',
    lineHeight: 'normal',
    $nest: {
        '&.reverse': {
            flexDirection: 'column-reverse',
        },
    },
});


/***/ }),

/***/ "./lib/src/widgets/List/LocallyFilteringList.js":
/*!******************************************************!*\
  !*** ./lib/src/widgets/List/LocallyFilteringList.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var Localize_1 = __webpack_require__(/*! ../../../gen-src/Localize */ "./lib/gen-src/Localize.js");
var FilteringList_1 = __webpack_require__(/*! ./FilteringList */ "./lib/src/widgets/List/FilteringList.js");
var ListItemUtils_1 = __webpack_require__(/*! ./ListItemUtils */ "./lib/src/widgets/List/ListItemUtils.js");
/** `FilteringList` with default filtering behavior. */
// tslint:disable-next-line:max-line-length
var LocallyFilteringList = /** @class */ (function (_super) {
    tslib_1.__extends(LocallyFilteringList, _super);
    function LocallyFilteringList() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = LocallyFilteringList.defaultStateFor(_this.props);
        _this.handleFilterChange = function (value) {
            var filteredItems = ListItemUtils_1.standardItemFilter(_this.props.items, value, _this.props.itemFilterFn);
            if (filteredItems.length === 0) {
                filteredItems.push({ value: Localize_1.Messages.noMatches(), disabled: true });
            }
            _this.setState({
                searchText: value,
                filteredItems: filteredItems,
            });
        };
        return _this;
    }
    LocallyFilteringList.defaultStateFor = function (props) {
        return {
            filteredItems: props.items,
            searchText: '',
        };
    };
    LocallyFilteringList.prototype.componentDidUpdate = function (prevProps) {
        if (prevProps.items !== this.props.items || prevProps.itemFilterFn !== this.props.itemFilterFn) {
            this.handleFilterChange(this.state.searchText);
        }
    };
    LocallyFilteringList.prototype.render = function () {
        var _a = this.props, items = _a.items, itemFilterFn = _a.itemFilterFn, listProps = tslib_1.__rest(_a, ["items", "itemFilterFn"]);
        return (React.createElement(FilteringList_1.FilteringList, tslib_1.__assign({}, listProps, { items: this.state.filteredItems, onFilterChange: this.handleFilterChange, searchText: this.state.searchText })));
    };
    return LocallyFilteringList;
}(React.Component));
exports.LocallyFilteringList = LocallyFilteringList;


/***/ }),

/***/ "./lib/src/widgets/ListMenuDisplayFormatters/TextFormatterWidget.js":
/*!**************************************************************************!*\
  !*** ./lib/src/widgets/ListMenuDisplayFormatters/TextFormatterWidget.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var Icons_1 = __webpack_require__(/*! ../../icons/Icons */ "./lib/src/icons/Icons.js");
var PreventUserSelect_1 = __webpack_require__(/*! ../../styles/PreventUserSelect */ "./lib/src/styles/PreventUserSelect.js");
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var TextEllipsis_1 = __webpack_require__(/*! ../../styles/TextEllipsis */ "./lib/src/styles/TextEllipsis.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var DomUtil_1 = __webpack_require__(/*! ../../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var DomWidgets_1 = __webpack_require__(/*! ../DomWidgets */ "./lib/src/widgets/DomWidgets.js");
var Sizing = TabStyles_1.TabStyles.Sizing, Colors = TabStyles_1.TabStyles.Colors, Spacing = TabStyles_1.TabStyles.Spacing, Typography = TabStyles_1.TabStyles.Typography;
var getStyles = function () {
    return {
        MenuItem: tslib_1.__assign(tslib_1.__assign({ height: Sizing.ListRowHeight, paddingLeft: Spacing.DefaultSpace, paddingRight: Spacing.DefaultSpace, lineHeight: Sizing.ListRowHeight + 'px', position: 'relative' }, TextEllipsis_1.TextEllipsis), PreventUserSelect_1.PreventUserSelect),
        GroupLabel: tslib_1.__assign(tslib_1.__assign({ fontWeight: 'bold', height: TabStyles_1.TabStyles.Sizing.ListRowHeight, lineHeight: TabStyles_1.TabStyles.Sizing.ListRowHeight + 'px' }, TextEllipsis_1.TextEllipsis), PreventUserSelect_1.PreventUserSelect),
        Highlighted: {
            backgroundColor: Colors.F2_5
        },
        Active: {
            backgroundColor: Colors.F3
        },
        WithCheckGutter: {
            paddingLeft: Icons_1.MenuItemCheckIcon.checkedItemPaddingLeft
        },
        WithSubMenu: {
            paddingRight: Icons_1.MenuItemArrowIcon.width
        },
        Disabled: {
            color: Typography.Color.Disabled
        },
        ArrowIcon: {
            position: 'absolute',
            right: 0
        }
    };
};
/**
 * Using closure the formatter has access to the text value that it wants to display, and gets its other props
 * from the dropdown. This will be rendered in the MenuItemWidget.
 *
 * @param displayValue The text value to be displayed
 */
exports.TextMenuDisplayFormatter = function (displayValue, title) {
    return /** @class */ (function (_super) {
        tslib_1.__extends(TextFormatterWidget, _super);
        function TextFormatterWidget(props) {
            var _this = _super.call(this, props) || this;
            _this.handleMouseOver = function (e) {
                if (title) {
                    // NOTE: The custom title will override the default title when the displayed value within the menu item is truncated.
                    return;
                }
                _this.setState({ title: (DomUtil_1.isElementOverflownX(e.currentTarget)) ? displayValue : undefined });
            };
            _this.state = { title: title };
            return _this;
        }
        TextFormatterWidget.prototype.getSubMenuIcon = function () {
            if (this.props.hasSubMenu) {
                var styles = getStyles();
                var arrowIcon = Icons_1.MenuItemArrowIcon.icon({ disabled: this.props.disabled });
                return React.createElement(DomWidgets_1.Img, { style: styles.ArrowIcon, src: arrowIcon, "aria-hidden": true });
            }
            else {
                return null;
            }
        };
        TextFormatterWidget.prototype.getCheckedStyles = function () {
            var checkIcon = Icons_1.MenuItemCheckIcon.icon({ active: this.props.active || this.props.isHighlighted, disabled: this.props.disabled });
            return {
                backgroundImage: "url('" + checkIcon + "')",
                backgroundRepeat: 'no-repeat',
                backgroundPosition: Spacing.DefaultSpace + "px center"
            };
        };
        TextFormatterWidget.prototype.render = function () {
            var styles = getStyles();
            var style = this.props.isGroupLabel ? styles.GroupLabel : tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, styles.MenuItem), Declarative_1.conditional(this.props.hasSubMenu, styles.WithSubMenu)), Declarative_1.conditional(this.props.isHighlighted, styles.Highlighted)), Declarative_1.conditional(this.props.active, styles.Active)), Declarative_1.conditional(this.props.disabled, styles.Disabled)), Declarative_1.conditional(this.props.showCheckGutter, styles.WithCheckGutter)), Declarative_1.conditional(this.props.checked, this.getCheckedStyles()));
            return (React.createElement("div", { "data-tb-test-id": Declarative_1.makeTestId(this.props.testId, 'TextMenuItem'), onMouseOver: this.handleMouseOver, style: style, title: this.state.title },
                displayValue,
                this.getSubMenuIcon()));
        };
        return TextFormatterWidget;
    }(React.Component));
};


/***/ }),

/***/ "./lib/src/widgets/ListMenuWidget.js":
/*!*******************************************!*\
  !*** ./lib/src/widgets/ListMenuWidget.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
// tslint:disable:deprecation
var React = __webpack_require__(/*! react */ "react");
var TabStyles_1 = __webpack_require__(/*! ../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var Declarative_1 = __webpack_require__(/*! ../utils/Declarative */ "./lib/src/utils/Declarative.js");
var DomUtil_1 = __webpack_require__(/*! ../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var FindIndex_1 = __webpack_require__(/*! ../utils/FindIndex */ "./lib/src/utils/FindIndex.js");
var MenuDividerWidget_1 = __webpack_require__(/*! ./MenuDividerWidget */ "./lib/src/widgets/MenuDividerWidget.js");
var MenuItemWidget_1 = __webpack_require__(/*! ./MenuItemWidget */ "./lib/src/widgets/MenuItemWidget.js");
exports.ListMenuCursorDriftAllowanceMs = 250;
var Colors = TabStyles_1.TabStyles.Colors, Spacing = TabStyles_1.TabStyles.Spacing, Typography = TabStyles_1.TabStyles.Typography;
exports.ListMenuStyles = {
    backgroundColor: Colors.White,
    boxSizing: 'border-box',
    color: Typography.Color.Primary,
    fontSize: Typography.Sizing.Default,
    fontWeight: 'normal',
    lineHeight: 'normal',
    outline: 'none',
    padding: Spacing.DefaultSpace,
    position: 'relative',
};
var isMenuItemEnabled = function (item) { return item && !item.isDivider && !item.disabled && !item.isUnselectable; };
var stopPropagation = function (e) { e.stopPropagation(); };
var ListMenuWidget = /** @class */ (function (_super) {
    tslib_1.__extends(ListMenuWidget, _super);
    function ListMenuWidget(props) {
        var _this = _super.call(this, props) || this;
        _this.domRef = React.createRef();
        _this.xVelocity = 0;
        _this.handleKeyDown = function (e) {
            if (e.altKey || e.ctrlKey || e.metaKey) {
                return;
            }
            if (Declarative_1.isAlphabeticChar(e.key) && !_this.props.letterSearchDisabled) {
                var nextIndexOfFirstLetter_1 = _this.findNextMenuItemStartingWithLetter(e.key);
                if (nextIndexOfFirstLetter_1 > -1) {
                    _this.setActiveItemState(function () { return nextIndexOfFirstLetter_1; }, true);
                }
                e.stopPropagation();
                e.preventDefault();
                return;
            }
            var menuItemCount = _this.props.menuItemInfos.length;
            switch (e.key) {
                case 'ArrowUp':
                    _this.setActiveItemState(function () { return _this.findNextEnabledItemIndex(_this.state.activeItemIndex, -1); }, true);
                    break;
                case 'ArrowDown':
                    _this.setActiveItemState(function () { return _this.findNextEnabledItemIndex(_this.state.activeItemIndex, 1); }, true);
                    break;
                case 'ArrowLeft':
                    if (_this.props.onLeftArrowKeyDown) {
                        _this.props.onLeftArrowKeyDown();
                    }
                    break;
                case 'Home':
                    _this.setActiveItemState(function () { return _this.findNextEnabledItemIndex(-1, 1); }, true);
                    break;
                case 'End':
                    _this.setActiveItemState(function () { return _this.findNextEnabledItemIndex(menuItemCount, -1); }, true);
                    break;
                case ' ':
                case 'Enter':
                    _this.selectActive();
                    break; // let's not scroll the menu or the page
                case 'Escape':
                    break; // eat the keyDown event since we'll handle it in keyUp
                default:
                    // Do not prevent default or stopPropagation on unhandled key presses
                    return;
            }
            e.preventDefault();
            e.stopPropagation();
        };
        _this.handleKeyUp = function (e) {
            if (e.key === 'Escape') {
                if (_this.props.onEscapeKeyUp) {
                    _this.props.onEscapeKeyUp();
                }
                else {
                    _this.props.requestCloseAll();
                }
                e.preventDefault();
                e.stopPropagation();
            }
        };
        _this.clearSubmenu = function (itemIndex) {
            _this.setActiveItemState(function () { return itemIndex; }, false);
        };
        _this.handleItemHover = function (itemIndex) {
            var activeItemIndex = _this.state.activeItemIndex;
            var activeItemIsShowingSubmenu = activeItemIndex === _this.displayedSubmenuItemIndex;
            // TFSID 707410: allow the pointer to stray on the way to a submenu
            if (activeItemIsShowingSubmenu && _this.xVelocity >= 2) {
                clearTimeout(_this.submenuTimeoutId);
                _this.submenuTimeoutId = window.setTimeout(_this.clearSubmenu.bind(_this, itemIndex), exports.ListMenuCursorDriftAllowanceMs);
            }
            else {
                _this.clearSubmenu(itemIndex);
            }
        };
        _this.handleItemSelect = function (value) {
            _this.props.onSelect(value);
        };
        _this.handleMouseMove = function (e) {
            _this.xVelocity = _this.oldX !== undefined ? Math.abs(e.pageX - _this.oldX) : 0;
            _this.oldX = e.pageX;
        };
        _this.handleSubmenuShown = function (itemIndex) {
            _this.displayedSubmenuItemIndex = itemIndex;
        };
        _this.state = {
            activeItemIndex: _this.props.__INTERNAL__focusIndex || 0,
            keyboardFocused: true
        };
        return _this;
    }
    ListMenuWidget.prototype.componentDidMount = function () {
        this.addStopPropogationListeners();
    };
    // this is only here for filtering and should be removed when we remove the searchbox support --ckovatch 2018/02/08
    ListMenuWidget.prototype.componentDidUpdate = function (prevProps) {
        if (prevProps.menuItemInfos === this.props.menuItemInfos) {
            return;
        }
        // find previously highlighted string, keep if possible, otherwise select the first item
        var highlightedValue = undefined;
        if (this.state.activeItemIndex > -1 && this.state.activeItemIndex < prevProps.menuItemInfos.length) {
            highlightedValue = prevProps.menuItemInfos[this.state.activeItemIndex].keyboardAccessibleValue;
        }
        // find new selection index - either previous text selection, or the start of the list
        var newActiveIndex = Math.max(0, FindIndex_1.findIndex(this.props.menuItemInfos, function (item) { return isMenuItemEnabled(item) && item.keyboardAccessibleValue === highlightedValue; }, 0, this));
        if (this.state.activeItemIndex !== newActiveIndex) {
            this.setState({
                activeItemIndex: newActiveIndex
            });
        }
    };
    ListMenuWidget.prototype.componentWillUnmount = function () {
        this.removeStopPropogationListeners();
    };
    ListMenuWidget.prototype.selectActive = function () {
        if (this.state.activeItemIndex < 0 || this.state.activeItemIndex >= this.props.menuItemInfos.length) {
            console.warn("Tried to select a invalid index: " + this.state.activeItemIndex);
            return;
        }
        var currentItem = this.props.menuItemInfos[this.state.activeItemIndex];
        if (isMenuItemEnabled(currentItem)) {
            this.props.onSelect(currentItem.value);
        }
    };
    /**
     * We stop the propogation of scroll events because components like the dropdown have an event listener on their scrolling
     * root to close the dropdown.  We want the listmenu to be able to scroll without triggering the scrolling root scroll event.
     */
    ListMenuWidget.prototype.addStopPropogationListeners = function () {
        var _a, _b;
        (_a = this.domRef.current) === null || _a === void 0 ? void 0 : _a.addEventListener('scroll', stopPropagation);
        (_b = this.domRef.current) === null || _b === void 0 ? void 0 : _b.addEventListener('wheel', stopPropagation);
    };
    ListMenuWidget.prototype.removeStopPropogationListeners = function () {
        var _a, _b;
        (_a = this.domRef.current) === null || _a === void 0 ? void 0 : _a.removeEventListener('scroll', stopPropagation);
        (_b = this.domRef.current) === null || _b === void 0 ? void 0 : _b.removeEventListener('wheel', stopPropagation);
    };
    ListMenuWidget.prototype.findNextEnabledItemIndex = function (currentIndex, direction) {
        var menuItemCount = this.props.menuItemInfos.length;
        for (var i = currentIndex + direction; i !== currentIndex; i += direction) {
            if (i >= menuItemCount) {
                i = 0;
            }
            else if (i < 0) {
                i = menuItemCount - 1;
            }
            if (i === currentIndex) {
                return currentIndex;
            }
            if (isMenuItemEnabled(this.props.menuItemInfos[i])) {
                return i;
            }
        }
        return currentIndex;
    };
    ListMenuWidget.prototype.findNextMenuItemStartingWithLetter = function (letter) {
        return FindIndex_1.findIndex(this.props.menuItemInfos, function (item) {
            return isMenuItemEnabled(item) && !!item.keyboardAccessibleValue &&
                item.keyboardAccessibleValue.charAt(0).toUpperCase() === letter.charAt(0).toUpperCase();
        }, this.state.activeItemIndex + 1, this);
    };
    ListMenuWidget.prototype.setActiveItemState = function (activeItemIndex, keyboardFocused) {
        var _this = this;
        clearTimeout(this.submenuTimeoutId);
        this.setState(function (prevState, props) { return ({ activeItemIndex: activeItemIndex(), keyboardFocused: keyboardFocused }); }, function () {
            _this.displayedSubmenuItemIndex = undefined;
            if (!_this.state.keyboardFocused && !_this.props.letterSearchDisabled) {
                // If no individual item is focused, ensure focus is still on the menu so keyboard input is received
                _this.domRef.current.focus();
            }
        });
    };
    ListMenuWidget.prototype.shouldShowCheckGutter = function () {
        for (var i = 0; i < this.props.menuItemInfos.length; i++) {
            if (typeof this.props.menuItemInfos[i].checked !== 'undefined') {
                return true;
            }
        }
        return false;
    };
    ListMenuWidget.prototype.buildMenuFromMenuItemInfos = function () {
        var _this = this;
        var menuItems = this.props.menuItemInfos;
        var showCheckGutter = this.shouldShowCheckGutter();
        var menuChildren = [];
        var _loop_1 = function (index) {
            var menuItem = menuItems[index];
            if (menuItem.isDivider) {
                menuChildren.push(React.createElement(MenuDividerWidget_1.MenuDividerWidget, { key: index }));
            }
            else {
                var makeMenuItem = function (item) {
                    if (!item.value) {
                        throw new Error("Each non-divider menu item requires a value");
                    }
                    return React.createElement(MenuItemWidget_1.MenuItemWidget, { checked: item.checked, disabled: item.disabled, displayFormatterBoundWithData: item.displayFormatterBoundWithData, isGroupLabel: item.isGroup, isHighlighted: !item.disabled && !item.isUnselectable && _this.state.activeItemIndex === index, isUnselectable: item.isUnselectable, itemIndex: index, key: index, keyboardFocused: _this.state.keyboardFocused && !_this.props.focusDisabled, menuItemInfos: item.menuItemInfos, onHover: _this.handleItemHover, onSelect: _this.handleItemSelect, onSubmenuShown: _this.handleSubmenuShown, requestCloseAll: _this.props.requestCloseAll, role: Declarative_1.conditional(_this.props.role === 'listbox', 'option'), scrollingRootId: _this.props.scrollingRootId, showCheckGutter: showCheckGutter, stackingRootId: _this.props.stackingRootId, subMenuAllowAutoPosition: _this.props.subMenuAllowAutoPosition, subMenuMaxHeight: item.subMenuMaxHeight, subMenuShouldAutoPositionOnScrollingRootScroll: _this.props.subMenuShouldAutoPositionOnScrollingRootScroll, subMenuStyle: item.subMenuStyle, testId: _this.props.testId, value: item.value, zIndex: _this.props.zIndex });
                };
                // this logic has much in common with similar logic in List::renderItems
                if (menuItem.isGroup) {
                    var groupLabelId = DomUtil_1.generateId();
                    var groupIndex_1 = index;
                    var groupItems = [];
                    // first add the label element to top of the group
                    groupItems.push(React.createElement("div", { role: 'presentation', id: groupLabelId, key: 'title', onMouseEnter: function () { return _this.handleItemHover(groupIndex_1); } }, makeMenuItem(menuItem)));
                    // then add items into the group until we see a divider or another group label
                    for (index++; !!menuItems[index] && !menuItems[index].isDivider && !menuItems[index].isGroup; index++) {
                        groupItems.push(makeMenuItem(menuItems[index]));
                    }
                    index--;
                    menuChildren.push(React.createElement("div", { role: 'group', "aria-labelledby": groupLabelId, key: groupIndex_1 }, groupItems));
                }
                else {
                    menuChildren.push(makeMenuItem(menuItem));
                }
            }
            out_index_1 = index;
        };
        var out_index_1;
        for (var index = 0; index < menuItems.length; index++) {
            _loop_1(index);
            index = out_index_1;
        }
        return menuChildren;
    };
    ListMenuWidget.prototype.render = function () {
        var style = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, exports.ListMenuStyles), this.props.menuStyle), Declarative_1.conditional(!!this.props.maxHeight, {
            maxHeight: this.props.maxHeight,
            overflowY: 'auto',
            WebkitOverflowScrolling: 'touch',
        }));
        return (React.createElement("div", { "aria-label": this.props['aria-label'], "aria-labelledby": this.props['aria-labelledby'], "data-tb-test-id": this.props.testId + "-ListMenu", id: this.props.id, onKeyDown: this.handleKeyDown, onKeyUp: this.handleKeyUp, onMouseMoveCapture: this.handleMouseMove, ref: this.domRef, role: this.props.role, style: style, tabIndex: -1 }, this.buildMenuFromMenuItemInfos()));
    };
    return ListMenuWidget;
}(React.Component));
exports.ListMenuWidget = ListMenuWidget;


/***/ }),

/***/ "./lib/src/widgets/MenuDividerWidget.js":
/*!**********************************************!*\
  !*** ./lib/src/widgets/MenuDividerWidget.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var TabStyles_1 = __webpack_require__(/*! ../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var Sizing = TabStyles_1.TabStyles.Sizing, Colors = TabStyles_1.TabStyles.Colors;
var DividerStyleName = TypeStyle.style({
    border: 'none',
    borderTop: Sizing.BorderWidth + "px solid " + Colors.L3,
    marginBottom: Sizing.ListRowHeight / 2,
    marginLeft: 0,
    marginRight: 0,
    marginTop: Sizing.ListRowHeight / 2,
});
exports.MenuDividerWidget = function () {
    return React.createElement("hr", { "aria-orientation": 'horizontal', className: DividerStyleName, role: 'separator' });
};
exports.MenuDividerWidget.displayName = 'MenuDividerWidget';


/***/ }),

/***/ "./lib/src/widgets/MenuItemInfo.js":
/*!*****************************************!*\
  !*** ./lib/src/widgets/MenuItemInfo.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var TextFormatterWidget_1 = __webpack_require__(/*! ./ListMenuDisplayFormatters/TextFormatterWidget */ "./lib/src/widgets/ListMenuDisplayFormatters/TextFormatterWidget.js");
/**
 * This converts the original dropdowns with only text values to use the displayFormatter
 */
exports.convertMenuItemInfoToGeneric = function (basicMenuItemInfo) {
    return basicMenuItemInfo.map(function (basic) { return ({
        checked: basic.checked,
        disabled: basic.disabled,
        displayFormatterBoundWithData: TextFormatterWidget_1.TextMenuDisplayFormatter(basic.displayValue, basic.title),
        isDivider: basic.isDivider,
        isGroup: basic.isGroup,
        isUnselectable: false,
        keyboardAccessibleValue: basic.displayValue,
        menuItemInfos: !!basic.menuItemInfos ? exports.convertMenuItemInfoToGeneric(basic.menuItemInfos) : undefined,
        subMenuMaxHeight: basic.subMenuMaxHeight,
        subMenuStyle: basic.subMenuStyle,
        textForDropdownButton: basic.displayValue,
        value: basic.value,
    }); });
};


/***/ }),

/***/ "./lib/src/widgets/MenuItemWidget.js":
/*!*******************************************!*\
  !*** ./lib/src/widgets/MenuItemWidget.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var DomUtil_1 = __webpack_require__(/*! ../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var InteractiveDom_1 = __webpack_require__(/*! ../utils/InteractiveDom */ "./lib/src/utils/InteractiveDom.js");
var Overlay_1 = __webpack_require__(/*! ../utils/Overlay */ "./lib/src/utils/Overlay.js");
var FlyoutListMenuWidget_1 = __webpack_require__(/*! ./FlyoutListMenuWidget */ "./lib/src/widgets/FlyoutListMenuWidget.js");
var ListMenuWidget_1 = __webpack_require__(/*! ./ListMenuWidget */ "./lib/src/widgets/ListMenuWidget.js");
exports.ActiveMenuItemSubmenuDelayMs = 150; // TFSID 707410
var SubMenuOffset = function () { return -(
// tslint:disable-next-line:max-line-length
parseFloat((FlyoutListMenuWidget_1.FlyoutListMenuStyles.borderTopWidth || FlyoutListMenuWidget_1.FlyoutListMenuStyles.borderTop || FlyoutListMenuWidget_1.FlyoutListMenuStyles.borderWidth || FlyoutListMenuWidget_1.FlyoutListMenuStyles.border || '0')) +
    parseFloat((ListMenuWidget_1.ListMenuStyles.paddingTop || ListMenuWidget_1.ListMenuStyles.padding || '0'))); };
var SubMenuAnchorOrigin = { vertical: Overlay_1.VerticalOriginOption.top, horizontal: Overlay_1.HorizontalOriginOption.right };
var SubMenuStackedOrigin = { vertical: Overlay_1.VerticalOriginOption.top, horizontal: Overlay_1.HorizontalOriginOption.left };
var MenuItemStyle = { outline: 'none' };
function shouldShowSubmenu(props, state) {
    return state.menuItemActive
        && !!props.isHighlighted
        && !props.disabled
        && !props.isUnselectable
        && !!props.menuItemInfos;
}
var MenuItemWidget = /** @class */ (function (_super) {
    tslib_1.__extends(MenuItemWidget, _super);
    function MenuItemWidget() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.domRef = React.createRef();
        _this.subMenuDomId = DomUtil_1.generateId();
        _this.state = {
            menuItemActive: false
        };
        _this.hasSubMenu = function () {
            return !!_this.props.menuItemInfos;
        };
        _this.handleKeyDown = function (e) {
            if (_this.props.disabled) {
                return;
            }
            switch (e.key) {
                case ' ':
                case 'Enter':
                    _this.handleSelect();
                    break;
                case 'ArrowRight':
                    if (_this.hasSubMenu()) {
                        _this.handleSelect();
                    }
                    break;
                default:
                    return;
            }
            e.preventDefault();
            e.stopPropagation();
        };
        // MenuItems with submenus show immediately on button press, but only after a delay on hover
        _this.handleSelect = function () {
            if (_this.props.disabled || _this.props.isUnselectable) {
                return;
            }
            if (_this.hasSubMenu()) {
                clearTimeout(_this.showSubMenuTimeoutId);
                _this.setState({ menuItemActive: true });
            }
            else {
                _this.props.onSelect(_this.props.value);
            }
        };
        _this.handleClick = function (e) {
            e.preventDefault(); // TFS 1079434
            _this.handleSelect();
        };
        _this.handleItemMouseEnter = function (e) {
            if (_this.props.disabled || _this.props.isUnselectable) {
                return;
            }
            _this.props.onHover(_this.props.itemIndex);
            if (_this.hasSubMenu()) {
                _this.showSubMenuTimeoutId = window.setTimeout(function () { return _this.setState({ menuItemActive: true }); }, exports.ActiveMenuItemSubmenuDelayMs);
            }
        };
        _this.handleItemMouseLeave = function (e) {
            clearTimeout(_this.showSubMenuTimeoutId);
        };
        // MenuItems without submenus immediately show active styling on button press
        _this.handleActive = function (active) {
            if (_this.hasSubMenu()) {
                return;
            }
            _this.setState({ menuItemActive: active });
        };
        // submenu says mouse has entered, so notify containing menu not to dismiss if
        // pointer strayed onto the next item on the way over, TFSID 707410
        _this.handleSubmenuMouseEnter = function () {
            _this.props.onHover(_this.props.itemIndex);
        };
        _this.handleSubmenuClose = function () {
            _this.setState({ menuItemActive: false });
        };
        _this.getItemClientRect = function () {
            if (!_this.domRef.current) {
                return undefined;
            }
            var _a = _this.domRef.current.getBoundingClientRect(), height = _a.height, width = _a.width, left = _a.left, right = _a.right, top = _a.top, bottom = _a.bottom;
            return { height: height, width: width, left: left, right: right, top: top + SubMenuOffset(), bottom: bottom + SubMenuOffset() };
        };
        return _this;
    }
    MenuItemWidget.prototype.componentDidMount = function () {
        var _this = this;
        // use a timeout on initial mount as a proxy for "probably attached to document by now"
        window.setTimeout(function () { return _this.updateFocus(); });
    };
    MenuItemWidget.prototype.componentDidUpdate = function (prevProps, prevState) {
        // If the user hovers over and highlights another menu item while a sub menu is open
        if (prevProps.isHighlighted && !this.props.isHighlighted && this.state.menuItemActive) {
            this.setState({ menuItemActive: false });
        }
        if (!shouldShowSubmenu(prevProps, prevState) && shouldShowSubmenu(this.props, this.state)) {
            this.props.onSubmenuShown(this.props.itemIndex);
        }
        this.updateFocus();
    };
    MenuItemWidget.prototype.componentWillUnmount = function () {
        clearTimeout(this.showSubMenuTimeoutId);
    };
    MenuItemWidget.prototype.updateFocus = function () {
        var _a = this.props, isHighlighted = _a.isHighlighted, keyboardFocused = _a.keyboardFocused;
        // Put keyboard focus on highlighted item, but not if it has a child submenu open
        if (isHighlighted && !this.state.menuItemActive && keyboardFocused && document.body.contains(this.domRef.current)) {
            this.domRef.current.focus();
        }
    };
    MenuItemWidget.prototype.getDisplayElement = function () {
        var displayValueFormatterProps = {
            active: this.state.menuItemActive && this.props.isHighlighted,
            checked: this.props.checked,
            disabled: this.props.disabled,
            hasSubMenu: this.hasSubMenu(),
            isGroupLabel: this.props.isGroupLabel,
            isHighlighted: this.props.isHighlighted,
            showCheckGutter: this.props.showCheckGutter,
            testId: this.props.testId
        };
        return React.createElement(this.props.displayFormatterBoundWithData, displayValueFormatterProps);
    };
    MenuItemWidget.prototype.render = function () {
        var showSubmenu = shouldShowSubmenu(this.props, this.state);
        var hasSubmenu = this.hasSubMenu();
        if (this.props.isGroupLabel) {
            return this.getDisplayElement();
        }
        return React.createElement(React.Fragment, null,
            React.createElement(InteractiveDom_1.InteractiveDomWrapper, { disabled: this.props.disabled, handleActive: this.handleActive, key: 'item', pointerClick: this.handleClick },
                React.createElement("div", { "aria-checked": this.props.checked, "aria-disabled": this.props.disabled, "aria-expanded": showSubmenu ? true : (hasSubmenu ? false : undefined), "aria-haspopup": hasSubmenu ? 'menu' : undefined, "data-tb-test-id": this.props.testId + "-" + this.props.value + "-MenuItem", onKeyDown: this.handleKeyDown, onMouseEnter: this.handleItemMouseEnter, onMouseLeave: this.handleItemMouseLeave, ref: this.domRef, role: this.props.role || (this.props.checked === undefined ? 'menuitem' : 'menuitemcheckbox'), style: MenuItemStyle, tabIndex: -1 },
                    this.getDisplayElement(),
                    showSubmenu && React.createElement(FlyoutListMenuWidget_1.GenericFlyoutListMenuWidget, { allowAutoPosition: this.props.subMenuAllowAutoPosition, anchorOrigin: SubMenuAnchorOrigin, getAnchorClientRect: this.getItemClientRect, id: this.subMenuDomId, maxHeight: this.props.subMenuMaxHeight, menuItemInfos: this.props.menuItemInfos, menuStyle: this.props.subMenuStyle, onEscapeKeyUp: this.handleSubmenuClose, onLeftArrowKeyDown: this.handleSubmenuClose, onMouseEnter: this.handleSubmenuMouseEnter, onSelect: this.props.onSelect, requestCloseAll: this.props.requestCloseAll, scrollingRootId: this.props.scrollingRootId, shouldAutoPositionOnScrollingRootScroll: this.props.subMenuShouldAutoPositionOnScrollingRootScroll, stackedOrigin: SubMenuStackedOrigin, stackingRootId: this.props.stackingRootId, testId: this.props.testId + "-" + this.props.value, zIndex: this.props.zIndex }))),
            showSubmenu && React.createElement("div", { "aria-owns": this.subMenuDomId, key: 'submenu' }));
    };
    return MenuItemWidget;
}(React.PureComponent));
exports.MenuItemWidget = MenuItemWidget;


/***/ }),

/***/ "./lib/src/widgets/ProgressBarWidgets.js":
/*!***********************************************!*\
  !*** ./lib/src/widgets/ProgressBarWidgets.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TabStyles_1 = __webpack_require__(/*! ../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var getProgressBarContainerStyle = function () {
    return {
        backgroundColor: TabStyles_1.TabStyles.Colors.F3,
        borderRadius: TabStyles_1.TabStyles.Sizing.BorderRadius,
        height: TabStyles_1.TabStyles.Sizing.BaseUnit,
        position: 'relative',
    };
};
exports.ProgressBarContainer = function (props) {
    var style = tslib_1.__assign(tslib_1.__assign({}, getProgressBarContainerStyle()), { width: props.width });
    return React.createElement("div", { style: style, children: props.children });
};
var getProgressBarStyle = function () {
    return {
        backgroundColor: TabStyles_1.TabStyles.Colors.GoLight,
        height: '100%',
        left: 0,
        position: 'absolute',
        top: 0,
    };
};
exports.ProgressCompleteBar = function (props) {
    var style = tslib_1.__assign(tslib_1.__assign({}, getProgressBarStyle()), { width: 100 * props.fractionComplete + "%" });
    return React.createElement("div", { style: style, children: props.children });
};
var getProgressBarAnimationWidth = function () { return TabStyles_1.TabStyles.Sizing.BaseUnit; };
var getProgressBarAnimationStaticStyle = function () {
    return {
        backgroundColor: TabStyles_1.TabStyles.Colors.GoDark,
        height: '100%',
        position: 'absolute',
        top: 0,
        width: getProgressBarAnimationWidth(),
    };
};
exports.ProgressBarAnimation = function (_a) {
    var containerWidth = _a.containerWidth;
    var animationClassName = TypeStyle.style({
        animationDirection: 'alternate',
        animationDuration: '1000ms',
        animationIterationCount: 'infinite',
        animationName: TypeStyle.keyframes({
            '0%': { transform: "translate3d(0px, 0px, 0px)" },
            '100%': { transform: "translate3d(" + (containerWidth - getProgressBarAnimationWidth()) + "px, 0px, 0px)" },
        }),
        animationTimingFunction: 'ease-in-out',
    });
    return React.createElement("div", { className: animationClassName, style: getProgressBarAnimationStaticStyle() });
};


/***/ }),

/***/ "./lib/src/widgets/SelectableButtonGroupWidget.js":
/*!********************************************************!*\
  !*** ./lib/src/widgets/SelectableButtonGroupWidget.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var ReactDOM = __webpack_require__(/*! react-dom */ "react-dom");
var Declarative_1 = __webpack_require__(/*! ../utils/Declarative */ "./lib/src/utils/Declarative.js");
var FindIndex_1 = __webpack_require__(/*! ../utils/FindIndex */ "./lib/src/utils/FindIndex.js");
var SelectableButtonGroupSelectionBehavior;
(function (SelectableButtonGroupSelectionBehavior) {
    /** Multiple buttons can be selected within the group. */
    SelectableButtonGroupSelectionBehavior["Multiple"] = "Multiple";
    /** A single button (at most) can be selected within the group. */
    SelectableButtonGroupSelectionBehavior["Single"] = "Single";
})(SelectableButtonGroupSelectionBehavior = exports.SelectableButtonGroupSelectionBehavior || (exports.SelectableButtonGroupSelectionBehavior = {}));
var SelectableButtonGroupWidget = /** @class */ (function (_super) {
    tslib_1.__extends(SelectableButtonGroupWidget, _super);
    function SelectableButtonGroupWidget(props) {
        var _this = _super.call(this, props) || this;
        _this.childButtons = [];
        _this.buttonElements = [];
        _this.handleButtonRefs = [];
        _this.handleButtonRefWrapper = function (buttonIndex) {
            if (_this.handleButtonRefs[buttonIndex] === undefined) {
                _this.handleButtonRefs[buttonIndex] = function (ref) {
                    _this.buttonElements[buttonIndex] = ReactDOM.findDOMNode(ref);
                };
            }
            return _this.handleButtonRefs[buttonIndex];
        };
        _this.handleClick = function (e) {
            var buttonElement = e.currentTarget;
            var buttonIndex = FindIndex_1.findIndex(_this.childButtons, function (button, index) { return buttonElement === _this.buttonElements[index]; });
            var selected = _this.childButtons[buttonIndex].props.selected;
            if (_this.props.selectionBehavior === SelectableButtonGroupSelectionBehavior.Single && selected) {
                return;
            }
            if (_this.props.onChange) {
                _this.props.onChange(buttonIndex, !selected);
            }
        };
        _this.handleFocus = function (e) {
            var target = e.target;
            var focusIndex = FindIndex_1.findIndex(_this.childButtons, function (button, index) { return target === _this.buttonElements[index] && !button.props.disabled; });
            if (focusIndex >= 0 && focusIndex !== _this.state.focusIndex) {
                _this.setState({ focusIndex: focusIndex });
            }
        };
        _this.handleKeyDown = function (e) {
            var buttonCount = _this.childButtons.length;
            var increment = 0;
            var focusIndex = _this.state.focusIndex;
            if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {
                increment = -1;
            }
            else if (e.key === 'ArrowDown' || e.key === 'ArrowRight') {
                increment = 1;
            }
            else if (e.key === 'Home') {
                focusIndex = -1;
                increment = 1;
            }
            else if (e.key === 'End') {
                focusIndex = buttonCount;
                increment = -1;
            }
            else {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
            do {
                focusIndex = (focusIndex + increment + buttonCount) % buttonCount;
                if (focusIndex === _this.state.focusIndex) {
                    return;
                }
            } while (_this.childButtons[focusIndex].props.disabled);
            var isSingleSelect = _this.props.selectionBehavior === SelectableButtonGroupSelectionBehavior.Single;
            if (isSingleSelect && !_this.isButtonSelected(focusIndex) && _this.props.onChange) {
                _this.props.onChange(focusIndex, true);
            }
            if (focusIndex !== _this.state.focusIndex) {
                _this.setState({ focusIndex: focusIndex }, function () {
                    if (_this.buttonElements[_this.state.focusIndex] !== undefined) {
                        _this.buttonElements[_this.state.focusIndex].focus();
                    }
                });
            }
        };
        _this.updateChildButtons();
        _this.state = { focusIndex: _this.getInitialFocusIndex() };
        return _this;
    }
    SelectableButtonGroupWidget.prototype.updateChildButtons = function () {
        var childButtons = [];
        var selectedButtonsCount = 0;
        React.Children.map(this.props.children, function (child) {
            if (child.props.buttonType !== undefined) {
                childButtons.push(child);
                if (child.props.selected) {
                    selectedButtonsCount++;
                }
            }
        });
        if (childButtons.length < 2) {
            throw Error("Invalid button count: 2+ are required");
        }
        if (this.props.selectionBehavior === SelectableButtonGroupSelectionBehavior.Single && selectedButtonsCount > 1) {
            // tslint:disable-next-line max-line-length
            throw Error("Invalid selected button count: SelectableButtonGroupSelectionBehavior.Single requires one or zero buttons to be selected. " + selectedButtonsCount + " are selected");
        }
        this.childButtons = childButtons;
    };
    SelectableButtonGroupWidget.prototype.getInitialFocusIndex = function () {
        var focusIndex = FindIndex_1.findIndex(this.childButtons, function (button) { return !!button.props.selected && !button.props.disabled; });
        if (focusIndex < 0) {
            focusIndex = FindIndex_1.findIndex(this.childButtons, function (button) { return !button.props.disabled; });
        }
        return focusIndex;
    };
    SelectableButtonGroupWidget.prototype.isButtonSelected = function (index) {
        return !!this.childButtons[index].props.selected;
    };
    SelectableButtonGroupWidget.prototype.renderChildren = function () {
        var _this = this;
        var buttonIndex = 0;
        return React.Children.map(this.props.children, function (child) {
            if (child.props.buttonType === undefined) {
                return child;
            }
            var buttonPropsOverride = {
                disableTabAccessibility: _this.state.focusIndex !== buttonIndex,
                handleClick: _this.handleClick,
                key: buttonIndex,
                ref: _this.handleButtonRefWrapper(buttonIndex),
                role: _this.props.selectionBehavior === SelectableButtonGroupSelectionBehavior.Single ? 'radio' : 'button',
                selected: !!child.props.selected
            };
            buttonIndex++;
            return React.cloneElement(child, buttonPropsOverride);
        });
    };
    SelectableButtonGroupWidget.prototype.render = function () {
        this.updateChildButtons();
        var isSingleSelect = this.props.selectionBehavior === SelectableButtonGroupSelectionBehavior.Single;
        var divProps = tslib_1.__assign({ 'data-tb-test-id': Declarative_1.makeTestId(this.props.testId, 'SelectableButtonGroup'), onFocus: this.handleFocus, onKeyDown: this.handleKeyDown, role: isSingleSelect ? 'radiogroup' : undefined, style: this.props.style, title: this.props.title }, Declarative_1.conditional(!isSingleSelect, { 'aria-multiselectable': true }));
        return (React.createElement("div", tslib_1.__assign({}, divProps), this.renderChildren()));
    };
    return SelectableButtonGroupWidget;
}(React.Component));
exports.SelectableButtonGroupWidget = SelectableButtonGroupWidget;


/***/ }),

/***/ "./lib/src/widgets/Selectors/CheckBoxWithLabelGroupWidget.js":
/*!*******************************************************************!*\
  !*** ./lib/src/widgets/Selectors/CheckBoxWithLabelGroupWidget.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var SharedWidgets_1 = __webpack_require__(/*! ../../SharedWidgets */ "./lib/src/SharedWidgets.js");
/**
 * This Widget should be used *only* if the list of checkboxes forms a logical group with a visible label.
 * See https://www.w3.org/TR/wai-aria-practices-1.1/#checkbox
 */
// tslint:disable-next-line:max-line-length
var CheckBoxWithLabelGroupWidget = /** @class */ (function (_super) {
    tslib_1.__extends(CheckBoxWithLabelGroupWidget, _super);
    function CheckBoxWithLabelGroupWidget() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CheckBoxWithLabelGroupWidget.prototype.render = function () {
        var _a;
        // tslint:disable-next-line:deprecation
        var _b = this.props, checkBoxWithLabelPropsList = _b.checkBoxWithLabelPropsList, children = _b.children, divProps = tslib_1.__rest(_b, ["checkBoxWithLabelPropsList", "children"]);
        return React.createElement("div", tslib_1.__assign({ role: 'group' }, divProps), children || ((_a = checkBoxWithLabelPropsList) === null || _a === void 0 ? void 0 : _a.map(function (props, index) { return React.createElement(SharedWidgets_1.CheckBoxWithLabelWidget, tslib_1.__assign({}, props, { key: index })); })));
    };
    return CheckBoxWithLabelGroupWidget;
}(React.PureComponent));
exports.CheckBoxWithLabelGroupWidget = CheckBoxWithLabelGroupWidget;


/***/ }),

/***/ "./lib/src/widgets/Selectors/RadioButtonWithLabelGroupWidget.js":
/*!**********************************************************************!*\
  !*** ./lib/src/widgets/Selectors/RadioButtonWithLabelGroupWidget.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var DomUtil_1 = __webpack_require__(/*! ../../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var SelectorShims_1 = __webpack_require__(/*! ./SelectorShims */ "./lib/src/widgets/Selectors/SelectorShims.js");
var RadioLayoutType;
(function (RadioLayoutType) {
    RadioLayoutType[RadioLayoutType["Veritical"] = 0] = "Veritical";
    RadioLayoutType[RadioLayoutType["Horizontal"] = 1] = "Horizontal";
})(RadioLayoutType = exports.RadioLayoutType || (exports.RadioLayoutType = {}));
var StyleName = TypeStyle.style({
    $nest: {
        '&.horizontal': { display: 'flex', flexWrap: 'wrap' },
        '&.horizontal.justify': { justifyContent: 'space-between' },
        '&.horizontal > :not(:last-child)': { marginRight: TabStyles_1.TabStyles.Spacing.ExtraLargeSpace },
    }
});
/** Displays a group of radio options */
var RadioButtonWithLabelGroupWidget = /** @class */ (function (_super) {
    tslib_1.__extends(RadioButtonWithLabelGroupWidget, _super);
    function RadioButtonWithLabelGroupWidget(props) {
        var _this = _super.call(this, props) || this;
        _this.groupId = DomUtil_1.generateId();
        if (!props.ariaLabel && !props['aria-labelledby'] && !props['aria-label']) {
            // tslint:disable-next-line:no-console
            console.trace('either aria-label or aria-labelledby should be provided for WCAG compliance');
        }
        return _this;
    }
    RadioButtonWithLabelGroupWidget.prototype.render = function () {
        var _this = this;
        // tslint:disable-next-line:max-line-length
        var _a = this.props, ariaLabel = _a.ariaLabel, buttonList = _a.buttonList, checkedIndex = _a.checkedIndex, handleChange = _a.handleChange, justifyHorizontalItems = _a.justifyHorizontalItems, layout = _a.layout, name = _a.name, removeLeftMargin = _a.removeLeftMargin, testId = _a.testId, divProps = tslib_1.__rest(_a, ["ariaLabel", "buttonList", "checkedIndex", "handleChange", "justifyHorizontalItems", "layout", "name", "removeLeftMargin", "testId"]);
        var buttons = buttonList.map(function (buttonOption, index) {
            return React.createElement(SelectorShims_1.RadioButtonWithLabelWidget, tslib_1.__assign({}, buttonOption, { checked: index === checkedIndex, groupName: name || _this.groupId, handleChange: handleChange, index: index, key: index, removeLeftMargin: removeLeftMargin }));
        });
        return (React.createElement("div", tslib_1.__assign({ "data-tb-test-id": Declarative_1.makeTestId('RadioButtonWithLabelGroupWidget', testId) }, divProps, { "aria-label": ariaLabel || divProps['aria-label'], children: buttons, className: TypeStyle.classes(StyleName, divProps.className, {
                horizontal: layout === RadioLayoutType.Horizontal,
                justify: justifyHorizontalItems,
            }), role: 'radiogroup' })));
    };
    return RadioButtonWithLabelGroupWidget;
}(React.Component));
exports.RadioButtonWithLabelGroupWidget = RadioButtonWithLabelGroupWidget;


/***/ }),

/***/ "./lib/src/widgets/Selectors/SelectorShims.js":
/*!****************************************************!*\
  !*** ./lib/src/widgets/Selectors/SelectorShims.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var tableau_ui_1 = __webpack_require__(/*! @tableau/tableau-ui */ "./node_modules/@tableau/tableau-ui/dist/tableau-ui.min.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var ClickBusting_1 = __webpack_require__(/*! ../../config/ClickBusting */ "./lib/src/config/ClickBusting.js");
var SharedWidgets_1 = __webpack_require__(/*! ../../SharedWidgets */ "./lib/src/SharedWidgets.js");
var ReactHelpers_1 = __webpack_require__(/*! ../../utils/ReactHelpers */ "./lib/src/utils/ReactHelpers.js");
var StyleName = TypeStyle.style({
    boxSizing: 'border-box',
});
var WithLabelStyleName = TypeStyle.style({
    display: 'flex',
});
var LeftMarginStyleName = TypeStyle.style({
    marginLeft: SharedWidgets_1.TabStyles.Spacing.DefaultSpace,
});
var SelectorShim = function (props) {
    var Component = props.componentType, removeLeftMargin = props.removeLeftMargin, testId = props.testId, inputProps = tslib_1.__rest(props, ["componentType", "removeLeftMargin", "testId"]);
    return (React.createElement(Component, tslib_1.__assign({}, inputProps, { className: TypeStyle.classes(StyleName, !!inputProps.children && WithLabelStyleName, !removeLeftMargin && LeftMarginStyleName, ClickBusting_1.ClickBustingConfig.suppressionClassName), labelProps: tslib_1.__assign({ 'data-tb-test-id': testId + "-Label" }, ReactHelpers_1.EventUtilsOptOut) })));
};
SelectorShim.displayName = 'SelectorShim';
var CheckBoxWithLabelWidget = /** @class */ (function (_super) {
    tslib_1.__extends(CheckBoxWithLabelWidget, _super);
    function CheckBoxWithLabelWidget() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleChange = function (e) {
            var _a, _b;
            // IE11 bug fix: https://github.com/facebook/react/issues/4457
            if (_this.props.disabled) {
                return;
            }
            if (_this.props.onChange) {
                _this.props.onChange(e);
            }
            else {
                (_b = (_a = _this.props).handleChange) === null || _b === void 0 ? void 0 : _b.call(_a, e.target.checked);
            }
        };
        return _this;
    }
    CheckBoxWithLabelWidget.prototype.render = function () {
        var _a = this.props, containerStyle = _a.containerStyle, handleChange = _a.handleChange, label = _a.label, selectorProps = tslib_1.__rest(_a, ["containerStyle", "handleChange", "label"]);
        return (React.createElement(SelectorShim, tslib_1.__assign({}, selectorProps, { children: label || selectorProps.children, onChange: this.handleChange, style: containerStyle, componentType: tableau_ui_1.Checkbox, "data-tb-test-id": selectorProps.testId + "-CheckBox" })));
    };
    return CheckBoxWithLabelWidget;
}(React.PureComponent));
exports.CheckBoxWithLabelWidget = CheckBoxWithLabelWidget;
var CheckBoxWidget = /** @class */ (function (_super) {
    tslib_1.__extends(CheckBoxWidget, _super);
    function CheckBoxWidget() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CheckBoxWidget.prototype.render = function () {
        // tslint:disable-next-line:deprecation
        var _a = this.props, hover = _a.hover, checkboxProps = tslib_1.__rest(_a, ["hover"]);
        return React.createElement(CheckBoxWithLabelWidget, tslib_1.__assign({}, checkboxProps, { label: '' }));
    };
    return CheckBoxWidget;
}(React.PureComponent));
exports.CheckBoxWidget = CheckBoxWidget;
var RadioButtonWithLabelWidget = /** @class */ (function (_super) {
    tslib_1.__extends(RadioButtonWithLabelWidget, _super);
    function RadioButtonWithLabelWidget() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleChange = function () {
            // IE11 bug fix: https://github.com/facebook/react/issues/4457
            if (_this.props.disabled || !_this.props.handleChange || _this.props.checked) {
                return;
            }
            _this.props.handleChange(_this.props.value, _this.props.index);
        };
        return _this;
    }
    RadioButtonWithLabelWidget.prototype.render = function () {
        var _a = this.props, containerStyle = _a.containerStyle, groupName = _a.groupName, handleChange = _a.handleChange, index = _a.index, label = _a.label, value = _a.value, selectorProps = tslib_1.__rest(_a, ["containerStyle", "groupName", "handleChange", "index", "label", "value"]);
        return (React.createElement(SelectorShim, tslib_1.__assign({}, selectorProps, { children: selectorProps.children || label, onChange: this.handleChange, style: containerStyle, componentType: tableau_ui_1.Radio, "data-tb-test-id": selectorProps.testId + "-RadioButton", name: groupName, 
            // tslint:disable-next-line:no-any
            value: value })));
    };
    return RadioButtonWithLabelWidget;
}(React.PureComponent));
exports.RadioButtonWithLabelWidget = RadioButtonWithLabelWidget;
var RadioButtonWidget = /** @class */ (function (_super) {
    tslib_1.__extends(RadioButtonWidget, _super);
    function RadioButtonWidget() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RadioButtonWidget.prototype.render = function () {
        return React.createElement(RadioButtonWithLabelWidget, tslib_1.__assign({}, this.props, { label: '' }));
    };
    return RadioButtonWidget;
}(React.PureComponent));
exports.RadioButtonWidget = RadioButtonWidget;


/***/ }),

/***/ "./lib/src/widgets/Slider/RangeSliderWidget.js":
/*!*****************************************************!*\
  !*** ./lib/src/widgets/Slider/RangeSliderWidget.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var SliderBaseWidget_1 = __webpack_require__(/*! ./SliderBaseWidget */ "./lib/src/widgets/Slider/SliderBaseWidget.js");
/**
 * This slider has two handles and lets a user select a range of values between those two handles.
 * It allows the user to choose any number from min to max, including decimal numbers.
 */
function RangeSliderWidget(props) {
    return React.createElement(SliderBaseWidget_1.SliderBaseWidget, tslib_1.__assign({}, props, { testId: Declarative_1.makeTestId(props.testId, 'RangeSlider') }));
}
exports.RangeSliderWidget = RangeSliderWidget;


/***/ }),

/***/ "./lib/src/widgets/Slider/SliderBaseWidget.js":
/*!****************************************************!*\
  !*** ./lib/src/widgets/Slider/SliderBaseWidget.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var SliderWidget_1 = __webpack_require__(/*! ./SliderWidget */ "./lib/src/widgets/Slider/SliderWidget.js");
var SliderHandleContainer_1 = __webpack_require__(/*! ./SliderHandleContainer */ "./lib/src/widgets/Slider/SliderHandleContainer.js");
var SliderTickBarWidget_1 = __webpack_require__(/*! ./SliderTickBarWidget */ "./lib/src/widgets/Slider/SliderTickBarWidget.js");
var SliderTrackWidget_1 = __webpack_require__(/*! ./SliderTrackWidget */ "./lib/src/widgets/Slider/SliderTrackWidget.js");
var SliderValueLogic_1 = __webpack_require__(/*! ./SliderValueLogic */ "./lib/src/widgets/Slider/SliderValueLogic.js");
var SliderStyles_1 = __webpack_require__(/*! ./SliderStyles */ "./lib/src/widgets/Slider/SliderStyles.js");
var HandleType;
(function (HandleType) {
    HandleType["Both"] = "both";
    HandleType["Left"] = "left";
    HandleType["Right"] = "right";
})(HandleType = exports.HandleType || (exports.HandleType = {}));
/**
 * A horizontal slider widget with one or two handles.
 */
var SliderBaseWidget = /** @class */ (function (_super) {
    tslib_1.__extends(SliderBaseWidget, _super);
    function SliderBaseWidget(props) {
        var _this = _super.call(this, props) || this;
        _this.getTickCount = function () {
            // And now for a word on how the ticks and handle manage to render all aligned and the handle(s) snaps to ticks:
            //
            // * The way SliderValueLogic does snapping via Math.round, so the number of integers from min to max become the
            //   number of snap points and by the magic of math are evenly distributed horizontally.
            // * The tick rendering in SliderTickBarWidget evenly distributes ticks horizontally as well, and the number of
            //   ticks also equals the number of integers from min to max.
            // * In other words, there are the same number of snap spots and number of ticks, and both are evenly distributed
            //   horizontally.
            // * Finally, to get the ticks to perfectly line up with the handle(s) (and the press indicator on the handle) we
            //   just have to make sure that the horizontal areas for the ticks and the handle start at the same x position of
            //   the page and are the same width.  This is controlled by the styles defined in SliderStyles.
            return !!_this.props.isDiscrete ? Math.floor(_this.props.max) - Math.ceil(_this.props.min) + 1 : 0;
        };
        _this.getIndicatorAndDataBarPositions = function (leftHandlePosition, rightHandlePosition) {
            if (isSingleHandleSlider(_this.props.value) && !_this.props.isDiscrete) {
                if (_this.props.openEndedAt === SliderWidget_1.OpenEndedAt.Min) {
                    return { indicatorBarPosition: { start: 0, end: leftHandlePosition } };
                }
                else if (_this.props.openEndedAt === SliderWidget_1.OpenEndedAt.Max) {
                    return { indicatorBarPosition: { start: leftHandlePosition, end: 1 } };
                }
            }
            else if (!isSingleHandleSlider(_this.props.value)) {
                var dataBarPosition = undefined;
                if (_this.props.trackBarDataRange) {
                    var dataBarStartPosition = _this.sliderValueLogic.calculateSliderPositionAsProportion(_this.props.trackBarDataRange.from);
                    var dataBarEndPosition = _this.sliderValueLogic.calculateSliderPositionAsProportion(_this.props.trackBarDataRange.to);
                    dataBarPosition = {
                        start: Math.max(leftHandlePosition, dataBarStartPosition),
                        end: Math.min(rightHandlePosition, dataBarEndPosition) || undefined,
                    };
                }
                return { indicatorBarPosition: { start: leftHandlePosition, end: rightHandlePosition }, dataBarPosition: dataBarPosition };
            }
            return {};
        };
        /**
         * A convenience method to fire the onChange method from props for when a single value (i.e. handle) has changed.
         */
        _this.fireOnChangeForSingleValue = function (handle, newValue) {
            if (!_this.props.onChange) {
                return;
            }
            if (isSingleHandleSlider(_this.props.value)) {
                if (newValue !== _this.props.value) {
                    _this.props.onChange(newValue);
                }
            }
            else {
                if (handle === HandleType.Left && newValue !== _this.props.value.from) {
                    _this.props.onChange({ from: Math.min(newValue, _this.props.value.to), to: _this.props.value.to });
                }
                else if (handle === HandleType.Right && newValue !== _this.props.value.to) {
                    _this.props.onChange({ from: _this.props.value.from, to: Math.max(newValue, _this.props.value.from) });
                }
            }
        };
        /**
         * A convenience method to fire the onChange method from props for when both values have changed (i.e. both handles).
         */
        _this.fireOnChangeForTwoValues = function (newFromValue, newToValue) {
            if (!_this.props.onChange || isSingleHandleSlider(_this.props.value) || newFromValue > newToValue) {
                return;
            }
            _this.props.onChange({ from: newFromValue, to: newToValue });
        };
        _this.handleHandleDragStart = function (handle, position) {
            _this.setState({ areHandlesBeingDragged: true });
            var newValue = _this.sliderValueLogic.calculateNewSliderValueFromProportion(position);
            _this.fireOnChangeForSingleValue(handle, newValue);
        };
        _this.handleHandleDragMove = function (handle, position) {
            var newValue = _this.sliderValueLogic.calculateNewSliderValueFromProportion(position);
            _this.fireOnChangeForSingleValue(handle, newValue);
        };
        _this.handleBothHandleDragStart = function () {
            _this.setState({ areHandlesBeingDragged: true });
        };
        _this.handleBothHandleDragMove = function (leftHandlePosition, rightHandlePosition) {
            var newFromValue = _this.sliderValueLogic.calculateNewSliderValueFromProportion(leftHandlePosition);
            var newToValue = _this.sliderValueLogic.calculateNewSliderValueFromProportion(rightHandlePosition);
            _this.fireOnChangeForTwoValues(newFromValue, newToValue);
        };
        _this.handleHandleRelease = function () {
            _this.setState({ areHandlesBeingDragged: false });
        };
        _this.handleHandleKeyDown = function (handle, key) {
            _this.setState({ areHandlesBeingDragged: true });
            if (handle === HandleType.Both) {
                if (!isSingleHandleSlider(_this.props.value)) {
                    var newSliderRangeValue = _this.sliderValueLogic.calculateNewSliderRangeValueForKey(key, _this.props.value);
                    if (newSliderRangeValue) {
                        _this.fireOnChangeForTwoValues(newSliderRangeValue.from, newSliderRangeValue.to);
                    }
                }
            }
            else {
                var oldValue = void 0;
                if (isSingleHandleSlider(_this.props.value)) {
                    oldValue = _this.props.value;
                }
                else {
                    oldValue = handle === HandleType.Left ? _this.props.value.from : _this.props.value.to;
                }
                var newValue = _this.sliderValueLogic.calculateNewSliderValueForKey(key, oldValue);
                if (newValue !== undefined) {
                    _this.fireOnChangeForSingleValue(handle, newValue);
                }
            }
        };
        _this.handleRangeHandleFocus = function (focus) {
            _this.setState({ isRangeHandleFocused: focus });
        };
        _this.validateProps(props);
        _this.state = { areHandlesBeingDragged: false, isRangeHandleFocused: false };
        _this.sliderValueLogic = new SliderValueLogic_1.SliderValueLogic(_this.props.min, _this.props.max, !!_this.props.isDiscrete);
        return _this;
    }
    SliderBaseWidget.prototype.validateProps = function (props) {
        // tslint:disable-next-line:deprecation
        var ariaLabel = props.ariaLabel, ariaAttributes = props.ariaAttributes, min = props.min, max = props.max, value = props.value;
        if (!ariaLabel && !ariaAttributes) {
            throw new Error("Either ariaAttributes or ariaLabel must be provided.");
        }
        if (isNaN(min) || isNaN(max) ||
            (isSingleHandleSlider(value) && isNaN(value)) ||
            (!isSingleHandleSlider(value) && (isNaN(value.from) || isNaN(value.to)))) {
            throw new Error("NaN is not a valid value for min, max, or value(s).");
        }
    };
    SliderBaseWidget.prototype.componentDidUpdate = function (prevProps, prevState) {
        this.validateProps(this.props);
        var _a = this.props, isDiscrete = _a.isDiscrete, max = _a.max, min = _a.min, onHandleRelease = _a.onHandleRelease;
        if (isDiscrete !== prevProps.isDiscrete || min !== prevProps.min || max !== prevProps.max) {
            this.sliderValueLogic = new SliderValueLogic_1.SliderValueLogic(min, max, !!isDiscrete);
            this.forceUpdate();
        }
        if (prevState.areHandlesBeingDragged && !this.state.areHandlesBeingDragged) {
            if (onHandleRelease) {
                onHandleRelease();
            }
            else if (prevProps.onHandleRelease) {
                prevProps.onHandleRelease();
            }
        }
    };
    SliderBaseWidget.prototype.getSliderHandleAriaAttributes = function (value, handleType) {
        var ariaAttributes = tslib_1.__assign(tslib_1.__assign({}, (handleType === HandleType.Right ? this.props.ariaAttributes.rightHandle : this.props.ariaAttributes.leftHandle)), { 'aria-valuemax': this.props.isDiscrete ? Math.floor(this.props.max) : this.props.max, 'aria-valuemin': this.props.isDiscrete ? Math.ceil(this.props.min) : this.props.min, 'aria-valuenow': value });
        // tslint:disable:deprecation
        if (!ariaAttributes['aria-label'] && this.props.ariaLabel) {
            // this prop is deprecated and its behaivor is *wrong* per WAI-ARIA spec -- this is just here to preserve the old prop behavior
            ariaAttributes['aria-label'] = this.props.ariaLabel;
        }
        // tslint:enable:deprecation
        return ariaAttributes;
    };
    SliderBaseWidget.prototype.render = function () {
        var styles = SliderStyles_1.getSliderStyles();
        var leftHandlePosition = undefined;
        var leftHandleAriaAttributes = undefined;
        var rightHandlePosition = undefined;
        var rightHandleAriaAttributes = undefined;
        if (isSingleHandleSlider(this.props.value)) {
            leftHandlePosition = this.sliderValueLogic.calculateSliderPositionAsProportion(this.props.value);
            leftHandleAriaAttributes = this.getSliderHandleAriaAttributes(this.props.value, HandleType.Left);
        }
        else {
            leftHandlePosition = this.sliderValueLogic.calculateSliderPositionAsProportion(this.props.value.from);
            leftHandleAriaAttributes = this.getSliderHandleAriaAttributes(this.props.value.from, HandleType.Left);
            rightHandlePosition = this.sliderValueLogic.calculateSliderPositionAsProportion(this.props.value.to);
            rightHandleAriaAttributes = this.getSliderHandleAriaAttributes(this.props.value.to, HandleType.Right);
        }
        var tickCount = this.getTickCount();
        var indicatorAndDataBarPositions = this.getIndicatorAndDataBarPositions(leftHandlePosition, rightHandlePosition);
        return (React.createElement("div", { "data-tb-test-id": this.props.testId, style: tslib_1.__assign(tslib_1.__assign({}, styles.OuterContainer), this.props.style) },
            React.createElement("div", { style: styles.TrackAndHandleContainer },
                tickCount > 1 && React.createElement(SliderTickBarWidget_1.SliderTickBarWidget, { testId: this.props.testId, tickCount: tickCount }),
                React.createElement(SliderTrackWidget_1.SliderTrackWidget, { dataBarPosition: indicatorAndDataBarPositions.dataBarPosition, handleIsBeingDragged: this.state.areHandlesBeingDragged, isRangeHandleFocused: this.state.isRangeHandleFocused, rangeIndicatorBarPosition: indicatorAndDataBarPositions.indicatorBarPosition, testId: this.props.testId }),
                React.createElement(SliderHandleContainer_1.SliderHandleContainer, { disabled: this.props.disabled, handles: { leftHandlePosition: leftHandlePosition, rightHandlePosition: rightHandlePosition }, handlesAriaAttributes: { leftHandleAriaAttributes: leftHandleAriaAttributes, rightHandleAriaAttributes: rightHandleAriaAttributes }, onBothHandleDragMove: this.handleBothHandleDragMove, onBothHandleDragStart: this.handleBothHandleDragStart, onHandleDragMove: this.handleHandleDragMove, onHandleDragStart: this.handleHandleDragStart, onHandleKeyDown: this.handleHandleKeyDown, onHandleRelease: this.handleHandleRelease, onRangeHandleFocus: this.handleRangeHandleFocus, testId: this.props.testId }))));
    };
    SliderBaseWidget.defaultProps = {
        ariaAttributes: { leftHandle: undefined, rightHandle: undefined },
    };
    return SliderBaseWidget;
}(React.Component));
exports.SliderBaseWidget = SliderBaseWidget;
/**
 * If this is true, then the slider should have a single handle. Conversely, if false, it should have two handles.
 */
var isSingleHandleSlider = function (value) {
    return typeof value === 'number';
};


/***/ }),

/***/ "./lib/src/widgets/Slider/SliderHandleContainer.js":
/*!*********************************************************!*\
  !*** ./lib/src/widgets/Slider/SliderHandleContainer.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var BrowserDetection_1 = __webpack_require__(/*! ../../utils/BrowserDetection */ "./lib/src/utils/BrowserDetection.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var GlobalPointerEventCapturer_1 = __webpack_require__(/*! ../../utils/GlobalPointerEventCapturer */ "./lib/src/utils/GlobalPointerEventCapturer.js");
var PointerEvents_1 = __webpack_require__(/*! ../../utils/PointerEvents */ "./lib/src/utils/PointerEvents.js");
var UserInteraction_1 = __webpack_require__(/*! ../../utils/UserInteraction */ "./lib/src/utils/UserInteraction.js");
var SliderBaseWidget_1 = __webpack_require__(/*! ./SliderBaseWidget */ "./lib/src/widgets/Slider/SliderBaseWidget.js");
var SliderHandleContainerCoordinateLogic = __webpack_require__(/*! ./SliderHandleContainerCoordinateLogic */ "./lib/src/widgets/Slider/SliderHandleContainerCoordinateLogic.js");
var SliderHandleContainerDragHandleLogic = __webpack_require__(/*! ./SliderHandleContainerDragHandleLogic */ "./lib/src/widgets/Slider/SliderHandleContainerDragHandleLogic.js");
var SliderHandleWidget_1 = __webpack_require__(/*! ./SliderHandleWidget */ "./lib/src/widgets/Slider/SliderHandleWidget.js");
var SliderStyles_1 = __webpack_require__(/*! ./SliderStyles */ "./lib/src/widgets/Slider/SliderStyles.js");
var SliderValueLogic_1 = __webpack_require__(/*! ./SliderValueLogic */ "./lib/src/widgets/Slider/SliderValueLogic.js");
/**
 * This component is responsible for displaying the handles and making them interactive.  I.e. dragging.
 *
 * It does not deal with the min and maxes or the actual value of the slider.  That is all handled in the
 * SliderWidget itself.
 *
 * Note that to deal with mouse/touch events outside the bounds of the element and window, we have to attach event
 * handlers to the window itself.
 */
var SliderHandleContainer = /** @class */ (function (_super) {
    tslib_1.__extends(SliderHandleContainer, _super);
    function SliderHandleContainer(props) {
        var _this = _super.call(this, props) || this;
        // We only have to get this ref because we have to do setCapture and releaseCapture on IE.  Without that IE won't
        // send us move and end events for a drag once the pointer or finger leaves the bounds of the element (i.e. goes
        // off the page).  We let the GlobalPointerEventCapturer deal with the actual setCapture and releaseCapture.
        _this.containerElement = null;
        // We need this ref to get bounding client rects and to focus() it.
        _this.leftHandleWidgetRef = null;
        // We need this ref to get bounding client rects and to focus() it.
        _this.rightHandleWidgetRef = null;
        // We need this ref to focus the range slider.
        _this.rangeHandleElement = null;
        _this.getHandleCount = function () {
            return typeof _this.props.handles.rightHandlePosition === 'undefined' ? 1 : 2;
        };
        _this.isSingleHandleBeingDragged = function (handleType) {
            return handleType === SliderBaseWidget_1.HandleType.Left || handleType === SliderBaseWidget_1.HandleType.Right;
        };
        _this.determineSingleHandleDragOffsetIfNeeded = function (handleType, isDragDirectlyOnHandle, eventPositionAsProportion) {
            if (!isDragDirectlyOnHandle) {
                return undefined;
            }
            var currentHandlePosition;
            if (handleType === SliderBaseWidget_1.HandleType.Left) {
                currentHandlePosition = _this.props.handles.leftHandlePosition;
            }
            else if (handleType === SliderBaseWidget_1.HandleType.Right) {
                currentHandlePosition = _this.props.handles.rightHandlePosition;
            }
            return currentHandlePosition ? currentHandlePosition - eventPositionAsProportion : undefined;
        };
        _this.determineWhichHandleShouldBeDraggedForEvent = function (touchEvent, eventClientCoordinates) {
            if (!touchEvent) {
                if (_this.getHandleCount() === 1) {
                    return SliderHandleContainerDragHandleLogic.determineWhichHandleShouldBeDraggedForMouseAndOneHandle(eventClientCoordinates, _this.leftHandleWidgetRef.getBoundingClientRectForIcon());
                }
                else {
                    return SliderHandleContainerDragHandleLogic.determineWhichHandleShouldBeDraggedForMouseAndTwoHandles(eventClientCoordinates, _this.leftHandleWidgetRef.getBoundingClientRectForIcon(), _this.rightHandleWidgetRef.getBoundingClientRectForIcon());
                }
            }
            else {
                if (_this.getHandleCount() === 1) {
                    return SliderHandleContainerDragHandleLogic.determineWhichHandleShouldBeDraggedForTouchAndOneHandle(eventClientCoordinates, _this.leftHandleWidgetRef.getBoundingClientRectForInteractiveArea());
                }
                else {
                    return SliderHandleContainerDragHandleLogic.determineWhichHandleShouldBeDraggedForTouchAndTwoHandles(eventClientCoordinates, _this.leftHandleWidgetRef.getBoundingClientRectForInteractiveArea(), _this.rightHandleWidgetRef.getBoundingClientRectForInteractiveArea(), _this.rangeHandleElement.getBoundingClientRect());
                }
            }
        };
        _this.fireHandleDragStartEvents = function (handleType, eventPositionAsProportion, singleHandleDragOffsetAsProportion) {
            if (_this.isSingleHandleBeingDragged(handleType)) {
                if (_this.props.onHandleDragStart && !isNaN(eventPositionAsProportion)) {
                    var position = eventPositionAsProportion + (singleHandleDragOffsetAsProportion || 0);
                    _this.props.onHandleDragStart(handleType, position);
                }
            }
            else if (_this.props.onBothHandleDragStart) {
                _this.props.onBothHandleDragStart();
            }
        };
        _this.fireHandleDragMoveEvents = function (leftHandlePosition, rightHandlePosition) {
            if (_this.isSingleHandleBeingDragged(_this.state.handleBeingDragged)) {
                if (_this.props.onHandleDragMove && !isNaN(leftHandlePosition)) {
                    _this.props.onHandleDragMove(_this.state.handleBeingDragged, leftHandlePosition);
                }
            }
            else if (_this.props.onBothHandleDragMove && typeof rightHandlePosition !== 'undefined' &&
                !isNaN(leftHandlePosition) && !isNaN(rightHandlePosition)) {
                _this.props.onBothHandleDragMove(leftHandlePosition, rightHandlePosition);
            }
        };
        _this.handleHandleRelease = function () {
            _this.setState({ handleBeingDragged: undefined });
            if (_this.props.onHandleRelease) {
                _this.props.onHandleRelease();
            }
        };
        _this.setKeyboardFocusOnHandle = function (handleType) {
            var _a;
            var handleElementRefToFocus = null;
            if (handleType === SliderBaseWidget_1.HandleType.Left) {
                handleElementRefToFocus = _this.leftHandleWidgetRef;
            }
            else if (handleType === SliderBaseWidget_1.HandleType.Right) {
                handleElementRefToFocus = _this.rightHandleWidgetRef;
            }
            else if (handleType === SliderBaseWidget_1.HandleType.Both) {
                handleElementRefToFocus = _this.rangeHandleElement;
            }
            (_a = handleElementRefToFocus) === null || _a === void 0 ? void 0 : _a.focus();
        };
        _this.dragStart = function (handleType, eventClientCoordinates, isDirectlyOnHandle, startedByTouchEvent) {
            if (!_this.containerElement) {
                return;
            }
            var positionAsProportion = SliderHandleContainerCoordinateLogic.convertClientCoordinateIntoProportionOfContainer(eventClientCoordinates.x, _this.containerElement.getBoundingClientRect());
            if (_this.globalPointerEventCapturer) {
                _this.globalPointerEventCapturer.addListeners();
            }
            // We set this offset if the user interacted directly w/ the handle, and use it later to avoid jerking the handle
            // directly to the location of the event.
            var singleHandleDragOffsetAsProportion = _this.determineSingleHandleDragOffsetIfNeeded(handleType, isDirectlyOnHandle, positionAsProportion);
            var handlePositionsAtDragStart = {
                leftHandlePosition: (handleType === SliderBaseWidget_1.HandleType.Left) ? positionAsProportion : _this.props.handles.leftHandlePosition,
                rightHandlePosition: (handleType === SliderBaseWidget_1.HandleType.Right) ? positionAsProportion : _this.props.handles.rightHandlePosition
            };
            _this.setState({
                handleBeingTouched: startedByTouchEvent ? handleType : undefined,
                handleBeingDragged: handleType,
                dragOriginInClientCoordinates: eventClientCoordinates,
                handlePositionsAtDragStart: handlePositionsAtDragStart,
                singleHandleDragOffsetAsProportion: singleHandleDragOffsetAsProportion
            });
            _this.fireHandleDragStartEvents(handleType, positionAsProportion, singleHandleDragOffsetAsProportion);
            // The reason we are doing this is that, in the case of mouse events, the initial down event may not have been on
            // the handle.  It may have been on the track.  So we have to manually give input focus to the handle.
            _this.setKeyboardFocusOnHandle(handleType);
        };
        _this.dragMove = function (eventClientCoordinates) {
            if (!_this.containerElement) {
                return;
            }
            var isSingleHandleBeingDragged = _this.isSingleHandleBeingDragged(_this.state.handleBeingDragged);
            if (isSingleHandleBeingDragged && _this.props.onHandleDragMove) {
                var handlePositionAtDragStart = _this.state.handleBeingDragged === SliderBaseWidget_1.HandleType.Left ?
                    _this.state.handlePositionsAtDragStart.leftHandlePosition :
                    _this.state.handlePositionsAtDragStart.rightHandlePosition;
                var newPosition = SliderHandleContainerCoordinateLogic.calculateProportionalPositionWhenDraggingSingleHandle(_this.state.dragOriginInClientCoordinates.x, handlePositionAtDragStart, eventClientCoordinates.x, _this.containerElement.getBoundingClientRect());
                _this.fireHandleDragMoveEvents(newPosition);
            }
            else if (!isSingleHandleBeingDragged && _this.props.onBothHandleDragMove) {
                // Both handles are being dragged
                var newPositions = SliderHandleContainerCoordinateLogic.calculateProportionalPositionsWhenDraggingBothHandles(_this.state.dragOriginInClientCoordinates.x, _this.state.handlePositionsAtDragStart.leftHandlePosition, _this.state.handlePositionsAtDragStart.rightHandlePosition, eventClientCoordinates.x, _this.containerElement.getBoundingClientRect());
                _this.fireHandleDragMoveEvents(newPositions.leftHandlePosition, newPositions.rightHandlePosition);
            }
        };
        _this.dragEnd = function () {
            if (_this.state.handleBeingDragged === undefined) {
                return;
            }
            if (_this.globalPointerEventCapturer) {
                _this.globalPointerEventCapturer.removeListeners();
            }
            _this.setState({
                handleBeingTouched: undefined,
                dragOriginInClientCoordinates: undefined,
                handlePositionsAtDragStart: undefined,
            });
            _this.handleHandleRelease();
        };
        _this.handleContainerRef = function (element) {
            _this.containerElement = element;
            // We instantiate this here rather than in the constructor since we need the ref
            if (_this.containerElement) {
                _this.globalPointerEventCapturer = new GlobalPointerEventCapturer_1.GlobalPointerEventCapturer(_this.containerElement, _this.handlePointerMove, _this.handlePointerUp);
            }
        };
        _this.setLeftHandleWidgetRef = function (component) {
            _this.leftHandleWidgetRef = component;
        };
        _this.setRightHandleWidgetRef = function (component) {
            _this.rightHandleWidgetRef = component;
        };
        _this.setRangeHandleRef = function (element) {
            _this.rangeHandleElement = element;
        };
        _this.handlePointerDown = function (event) {
            if (_this.props.disabled || !_this.leftHandleWidgetRef || (_this.getHandleCount() === 2 && !_this.rightHandleWidgetRef)) {
                return;
            }
            var castedEvent = event;
            var clientCoordinates = UserInteraction_1.getClientPosition(castedEvent);
            var dragInfo = _this.determineWhichHandleShouldBeDraggedForEvent(UserInteraction_1.isTouchEvent(castedEvent), clientCoordinates);
            if (!dragInfo) {
                return;
            }
            event.preventDefault();
            event.stopPropagation();
            _this.dragStart(dragInfo.handleType, clientCoordinates, dragInfo.directlyOnIcon, UserInteraction_1.isTouchEvent(castedEvent));
        };
        _this.handlePointerMove = function (event) {
            if (_this.props.disabled || !_this.containerElement) {
                return;
            }
            event.preventDefault();
            event.stopPropagation();
            _this.dragMove(UserInteraction_1.getClientPosition(event));
        };
        _this.handlePointerUp = function (event) {
            _this.dragEnd();
            if (_this.props.disabled) {
                return;
            }
            event.preventDefault();
            event.stopPropagation();
        };
        _this.makeKeyDownHandler = function (handleType) {
            return function (event) {
                if (_this.props.disabled || !_this.props.onHandleKeyDown) {
                    return;
                }
                if (SliderValueLogic_1.SliderValueLogic.KeysRelevantForManipulatingSlider[event.key]) {
                    _this.setState({ handleBeingDragged: handleType });
                    _this.props.onHandleKeyDown(handleType, event.key);
                    event.preventDefault();
                    event.stopPropagation();
                }
            };
        };
        _this.handleHandleKeyUp = function (event) {
            if (_this.props.disabled) {
                return;
            }
            if (SliderValueLogic_1.SliderValueLogic.KeysRelevantForManipulatingSlider[event.key]) {
                _this.handleHandleRelease();
                event.preventDefault();
                event.stopPropagation();
            }
        };
        _this.handleBlur = function (e) {
            if (!e.currentTarget.contains(e.relatedTarget) && !!_this.state.handleBeingDragged) {
                _this.handleHandleRelease();
            }
        };
        _this.renderLeftHandle = function () {
            if (isNaN(_this.props.handles.leftHandlePosition)) {
                return null;
            }
            var isActive = _this.state.handleBeingDragged === SliderBaseWidget_1.HandleType.Left || _this.state.handleBeingDragged === SliderBaseWidget_1.HandleType.Both;
            var isBeingTouched = _this.state.handleBeingTouched === SliderBaseWidget_1.HandleType.Left || _this.state.handleBeingTouched === SliderBaseWidget_1.HandleType.Both;
            var iconType = _this.getHandleCount() === 1 ? SliderHandleWidget_1.SliderHandleIconType.Normal : SliderHandleWidget_1.SliderHandleIconType.Left;
            return (React.createElement(SliderHandleWidget_1.SliderHandleWidget, { ariaAttributes: _this.props.handlesAriaAttributes.leftHandleAriaAttributes, disabled: _this.props.disabled, iconType: iconType, isActive: isActive, isBeingTouched: isBeingTouched, onKeyDown: _this.makeKeyDownHandler(SliderBaseWidget_1.HandleType.Left), onKeyUp: _this.handleHandleKeyUp, position: _this.props.handles.leftHandlePosition, ref: _this.setLeftHandleWidgetRef, testId: _this.props.testId }));
        };
        _this.renderRightHandle = function () {
            // tslint:disable-next-line:max-line-length
            if (_this.getHandleCount() === 1 || typeof _this.props.handles.rightHandlePosition === 'undefined' || isNaN(_this.props.handles.rightHandlePosition)) {
                return null;
            }
            var isActive = _this.state.handleBeingDragged === SliderBaseWidget_1.HandleType.Right || _this.state.handleBeingDragged === SliderBaseWidget_1.HandleType.Both;
            var isBeingTouched = _this.state.handleBeingTouched === SliderBaseWidget_1.HandleType.Right || _this.state.handleBeingTouched === SliderBaseWidget_1.HandleType.Both;
            return (React.createElement(SliderHandleWidget_1.SliderHandleWidget, { ariaAttributes: _this.props.handlesAriaAttributes.rightHandleAriaAttributes, disabled: _this.props.disabled, iconType: SliderHandleWidget_1.SliderHandleIconType.Right, isActive: isActive, isBeingTouched: isBeingTouched, onKeyDown: _this.makeKeyDownHandler(SliderBaseWidget_1.HandleType.Right), onKeyUp: _this.handleHandleKeyUp, position: _this.props.handles.rightHandlePosition, ref: _this.setRightHandleWidgetRef, testId: _this.props.testId }));
        };
        _this.handleRangeHandleFocusBlur = function (e) {
            if (_this.props.onRangeHandleFocus) {
                _this.props.onRangeHandleFocus(e.type === 'focus');
            }
        };
        _this.state = {};
        return _this;
    }
    SliderHandleContainer.prototype.componentWillUnmount = function () {
        if (this.globalPointerEventCapturer) {
            this.globalPointerEventCapturer.removeListeners();
        }
    };
    SliderHandleContainer.prototype.renderRangeHandle = function (style) {
        if (this.props.disabled || isNaN(this.props.handles.leftHandlePosition) || this.getHandleCount() === 1 ||
            // tslint:disable-next-line:triple-equals
            this.props.handles.rightHandlePosition == /* <-- intentional */ undefined || isNaN(this.props.handles.rightHandlePosition)) {
            return null;
        }
        var leftPositionAsPercentage = this.props.handles.leftHandlePosition * 100;
        var rightPositionAsPercentage = 100 - (this.props.handles.rightHandlePosition * 100);
        return (React.createElement("span", { "data-tb-test-id": Declarative_1.makeTestId(this.props.testId, 'RangeHandle'), onBlur: this.handleRangeHandleFocusBlur, onFocus: this.handleRangeHandleFocusBlur, onKeyDown: this.makeKeyDownHandler(SliderBaseWidget_1.HandleType.Both), onKeyUp: this.handleHandleKeyUp, ref: this.setRangeHandleRef, style: tslib_1.__assign(tslib_1.__assign({}, style), { left: leftPositionAsPercentage + "%", right: rightPositionAsPercentage + "%" }), tabIndex: 0 }));
    };
    SliderHandleContainer.prototype.render = function () {
        var dataTestId = Declarative_1.makeTestId(this.props.testId, 'SliderHandleContainer');
        var styles = SliderStyles_1.getSliderHandleContainerStyles();
        var containerStyle = styles.Container;
        if (BrowserDetection_1.isEdge) {
            containerStyle.touchAction = 'none';
        }
        // The container.  This will be the size of the whole slider (sans some padding).
        // The additional onTouchStart handler here is needed for mobile browsers.
        return (React.createElement(PointerEvents_1.PointerEventWrapper, { pointerDown: this.handlePointerDown, disabled: this.props.disabled },
            React.createElement("div", { "data-tb-test-id": dataTestId, ref: this.handleContainerRef, onBlur: this.handleBlur, onTouchStart: this.handlePointerDown, style: containerStyle },
                this.renderLeftHandle(),
                this.renderRangeHandle(styles.RangeHandleArea),
                this.renderRightHandle())));
    };
    return SliderHandleContainer;
}(React.Component));
exports.SliderHandleContainer = SliderHandleContainer;


/***/ }),

/***/ "./lib/src/widgets/Slider/SliderHandleContainerCoordinateLogic.js":
/*!************************************************************************!*\
  !*** ./lib/src/widgets/Slider/SliderHandleContainerCoordinateLogic.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Math_1 = __webpack_require__(/*! ../../utils/Math */ "./lib/src/utils/Math.js");
/**
 * This contains logic related to converting client coordinates into positions in the SliderHandleContainer and to
 * positioning handles.  The SliderHandleContainer needs this when processing mouse and touch events.
 */
function convertClientCoordinateIntoProportionOfContainer(
// Client coordinates means, basically, the location on the page irrespective of the current viewport position or
// zoom level.  E.g. 0,0 is always the top left of the page.
xPositionInClientCoordinates, containerBoundingClientRect) {
    var xPositionRelativeToLeftOfSlider = xPositionInClientCoordinates - containerBoundingClientRect.left;
    var proportion = xPositionRelativeToLeftOfSlider / (Math.max(1, containerBoundingClientRect.width));
    return Math_1.clamp(proportion, 0, 1);
}
exports.convertClientCoordinateIntoProportionOfContainer = convertClientCoordinateIntoProportionOfContainer;
/**
 * This function handles calculation of the new position for a single handle being dragged when a move
 * event occurs.
 */
function calculateProportionalPositionWhenDraggingSingleHandle(sourceXPositionForDragInClientCoordinates, sourceHandlePositionAsProportion, newXPositionInClientCoordinates, containerBoundingClientRect) {
    var difference = newXPositionInClientCoordinates - sourceXPositionForDragInClientCoordinates;
    var proportionalDifference = difference / containerBoundingClientRect.width;
    var newHandlePosition = sourceHandlePositionAsProportion + proportionalDifference;
    return Math_1.clamp(newHandlePosition, 0, 1);
}
exports.calculateProportionalPositionWhenDraggingSingleHandle = calculateProportionalPositionWhenDraggingSingleHandle;
/**
 * This function basically does all the math required to calculate what the new position for both handles should be
 * when they are both being dragged and a move event occurs.  This is more complicated than dragging a single handle
 * because in that case, we can (more or less) just move the handle directly underneath the move event's location.
 */
function calculateProportionalPositionsWhenDraggingBothHandles(
// We need these source positions to determine how far we should move the handles
sourceXPositionForDragInClientCoordinates, sourceLeftHandlePositionAsProprtion, sourceRightHandlePositionAsProprtion, newXPositionInClientCoordinates, containerBoundingClientRect) {
    var difference = newXPositionInClientCoordinates - sourceXPositionForDragInClientCoordinates;
    var proportionalDifference = difference / containerBoundingClientRect.width;
    var newLeftHandlePosition = sourceLeftHandlePositionAsProprtion + proportionalDifference;
    var newRightHandlePosition = sourceRightHandlePositionAsProprtion + proportionalDifference;
    var sourceProportionalDifferenceBetweenHandles = sourceRightHandlePositionAsProprtion - sourceLeftHandlePositionAsProprtion;
    if (newLeftHandlePosition < 0) {
        return {
            leftHandlePosition: 0,
            rightHandlePosition: sourceProportionalDifferenceBetweenHandles,
        };
    }
    else if (newRightHandlePosition > 1) {
        return {
            leftHandlePosition: 1 - sourceProportionalDifferenceBetweenHandles,
            rightHandlePosition: 1,
        };
    }
    else {
        return {
            leftHandlePosition: newLeftHandlePosition,
            rightHandlePosition: newRightHandlePosition,
        };
    }
}
exports.calculateProportionalPositionsWhenDraggingBothHandles = calculateProportionalPositionsWhenDraggingBothHandles;


/***/ }),

/***/ "./lib/src/widgets/Slider/SliderHandleContainerDragHandleLogic.js":
/*!************************************************************************!*\
  !*** ./lib/src/widgets/Slider/SliderHandleContainerDragHandleLogic.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Geometry_1 = __webpack_require__(/*! ../../utils/Geometry */ "./lib/src/utils/Geometry.js");
var SliderBaseWidget_1 = __webpack_require__(/*! ./SliderBaseWidget */ "./lib/src/widgets/Slider/SliderBaseWidget.js");
/**
 * This contains logic related to determining which handle to drag given the client coordinates from a mouse or touch
 * event.  The SliderHandleContainer needs this and is the only user.
 *
 * The logic for this at a high level is (even though this is broken into multiple methods):
 * ```
 * if mouse then
 *   if there is only one handle then
 *     return the left handle (clicking anywhere on the track grabs the handle)
 *   otherwise (if there are two handles) then
 *     if the click is between the *ICONS* return saying that both handles should be dragged
 *     otherwise return the handle that is closer to the click
 * otherwise (if touch) then
 *   if there is only one handle then
 *     if the touch is directly on the *INTERACTIVE AREA* for the left handle, return that
 *   otherwise (if there are two handles) then
 *     if the touch is on both the *INTERACTIVE AREA*s for both handles, return the one that is closer to the touch
 *     otherwise if it is on only one of the *INTERACTIVE AREA*s return that
 * and if none of those situations above are true, return nothing
 * ```
 */
function determineWhichHandleShouldBeDraggedForMouseAndOneHandle(clientCoordinates, leftHandleIconBoundingClientRect) {
    var point = { left: clientCoordinates.x, top: clientCoordinates.y };
    var directlyOnIcon = Geometry_1.doesRectangleContainPoint(leftHandleIconBoundingClientRect, point);
    return { handleType: SliderBaseWidget_1.HandleType.Left, directlyOnIcon: directlyOnIcon };
}
exports.determineWhichHandleShouldBeDraggedForMouseAndOneHandle = determineWhichHandleShouldBeDraggedForMouseAndOneHandle;
function determineWhichHandleShouldBeDraggedForMouseAndTwoHandles(clientCoordinates, leftHandleIconBoundingClientRect, rightHandleIconBoundingClientRect) {
    var point = { left: clientCoordinates.x, top: clientCoordinates.y };
    if (Geometry_1.doesRectangleContainPoint(leftHandleIconBoundingClientRect, point)) {
        return { handleType: SliderBaseWidget_1.HandleType.Left, directlyOnIcon: true };
    }
    else if (Geometry_1.doesRectangleContainPoint(rightHandleIconBoundingClientRect, point)) {
        return { handleType: SliderBaseWidget_1.HandleType.Right, directlyOnIcon: true };
    }
    if (clientCoordinates.x >= leftHandleIconBoundingClientRect.right &&
        clientCoordinates.x <= rightHandleIconBoundingClientRect.left) {
        return { handleType: SliderBaseWidget_1.HandleType.Both, directlyOnIcon: false };
    }
    else if (clientCoordinates.x <= leftHandleIconBoundingClientRect.right) {
        return { handleType: SliderBaseWidget_1.HandleType.Left, directlyOnIcon: false };
    }
    return { handleType: SliderBaseWidget_1.HandleType.Right, directlyOnIcon: false };
}
exports.determineWhichHandleShouldBeDraggedForMouseAndTwoHandles = determineWhichHandleShouldBeDraggedForMouseAndTwoHandles;
function determineWhichHandleShouldBeDraggedForTouchAndOneHandle(clientCoordinates, leftHandleInteractiveAreaBoundingClientRect) {
    var point = { left: clientCoordinates.x, top: clientCoordinates.y };
    // For touch we are "more loose" with our interpretation of what counts as being directly on the icon than mouse.
    var directlyOnIcon = Geometry_1.doesRectangleContainPoint(leftHandleInteractiveAreaBoundingClientRect, point);
    if (directlyOnIcon) {
        return { handleType: SliderBaseWidget_1.HandleType.Left, directlyOnIcon: true };
    }
    // we don't allow the user to touch and drag anywhere on the track, like they can w/ a mouse, since that is
    // actually quite annoying on touch when the user is trying to scroll the page (instead of manipulate the slider).
    return undefined;
}
exports.determineWhichHandleShouldBeDraggedForTouchAndOneHandle = determineWhichHandleShouldBeDraggedForTouchAndOneHandle;
function determineWhichHandleShouldBeDraggedForTouchAndTwoHandles(clientCoordinates, leftHandleInteractiveAreaBoundingClientRect, rightHandleInteractiveAreaBoundingClientRect, rangeHandleInteractiveAreaBoundingClientRect) {
    var point = { left: clientCoordinates.x, top: clientCoordinates.y };
    // For touch we are "more loose" with our interpretation of what counts as being directly on the icon than mouse.
    var directlyOnLeftIcon = Geometry_1.doesRectangleContainPoint(leftHandleInteractiveAreaBoundingClientRect, point);
    var directlyOnRightIcon = Geometry_1.doesRectangleContainPoint(rightHandleInteractiveAreaBoundingClientRect, point);
    var directlyOnRangeHandle = Geometry_1.doesRectangleContainPoint(rangeHandleInteractiveAreaBoundingClientRect, point);
    if (directlyOnLeftIcon && directlyOnRightIcon) {
        var distanceToLeftHandle = Math.abs(point.left - leftHandleInteractiveAreaBoundingClientRect.left);
        var distanceToRightHandle = Math.abs(point.left - rightHandleInteractiveAreaBoundingClientRect.right);
        var isCloserToLeftHandle = distanceToLeftHandle < distanceToRightHandle;
        return { handleType: isCloserToLeftHandle ? SliderBaseWidget_1.HandleType.Left : SliderBaseWidget_1.HandleType.Right, directlyOnIcon: true };
    }
    else if (directlyOnLeftIcon) {
        return { handleType: SliderBaseWidget_1.HandleType.Left, directlyOnIcon: true };
    }
    else if (directlyOnRightIcon) {
        return { handleType: SliderBaseWidget_1.HandleType.Right, directlyOnIcon: true };
    }
    else if (directlyOnRangeHandle) {
        return { handleType: SliderBaseWidget_1.HandleType.Both, directlyOnIcon: true };
    }
    // we don't allow the user to touch and drag anywhere on the track, like they can w/ a mouse, since that is
    // actually quite annoying on touch when the user is trying to scroll the page (instead of manipulate the slider).
    return undefined;
}
exports.determineWhichHandleShouldBeDraggedForTouchAndTwoHandles = determineWhichHandleShouldBeDraggedForTouchAndTwoHandles;


/***/ }),

/***/ "./lib/src/widgets/Slider/SliderHandleWidget.js":
/*!******************************************************!*\
  !*** ./lib/src/widgets/Slider/SliderHandleWidget.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var InteractiveDom_1 = __webpack_require__(/*! ../../utils/InteractiveDom */ "./lib/src/utils/InteractiveDom.js");
var Icons_1 = __webpack_require__(/*! ../../icons/Icons */ "./lib/src/icons/Icons.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var Geometry_1 = __webpack_require__(/*! ../../utils/Geometry */ "./lib/src/utils/Geometry.js");
var SliderStyles_1 = __webpack_require__(/*! ./SliderStyles */ "./lib/src/widgets/Slider/SliderStyles.js");
var FocusIndicators_1 = __webpack_require__(/*! ../../styles/FocusIndicators */ "./lib/src/styles/FocusIndicators.js");
var FocusIndicatorStyleName = TypeStyle.style({
    $nest: {
        '&.focus-within::after': {
            content: "\"\"",
            pointerEvents: 'none',
            width: 16,
            height: 16,
            display: 'inline-block',
            borderRadius: '50%',
            top: 12,
            left: -8,
            position: 'absolute',
            boxShadow: FocusIndicators_1.DefaultFocusIndicator.boxShadow,
        },
        '&:not(:only-child).focus-within::after': {
            borderTopLeftRadius: '66.66% 50%',
            borderBottomLeftRadius: '66.66% 50%',
            borderBottomRightRadius: 0,
            borderTopRightRadius: 0,
            left: -12,
            width: 13,
        },
        '&:not(:only-child):last-child.focus-within::after': {
            transform: 'rotate(180deg)',
            transformOrigin: '12px 8px',
        }
    }
});
var SliderHandleIconType;
(function (SliderHandleIconType) {
    SliderHandleIconType["Normal"] = "normal";
    SliderHandleIconType["Left"] = "left";
    SliderHandleIconType["Right"] = "right";
})(SliderHandleIconType = exports.SliderHandleIconType || (exports.SliderHandleIconType = {}));
/**
 * This is just the handle part of the slider.
 *
 * It is interactive, BUT that logic (e.g. dragging) is handled by the container.  This allows some stuff like clicking
 * anywhere on the track to grab and drag the handle, rather than only being able to click on the handle.
 */
var SliderHandleWidget = /** @class */ (function (_super) {
    tslib_1.__extends(SliderHandleWidget, _super);
    function SliderHandleWidget(props) {
        var _this = _super.call(this, props) || this;
        // We capture this ref so that we can 'focus()' it, and it is used indirectly for some hit testing logic in the
        // SliderHandleContainer.
        _this.imgRef = null;
        // We capture this ref so that can give its client bounding box out to the SliderHandleContainer.  This area is
        // effectively the handle's touch target (or mouse target) area.
        _this.interactiveAreaRef = null;
        _this.chooseIconAndStylesForRender = function () {
            var styles = SliderStyles_1.getSliderHandleStyles();
            var iconSet = undefined;
            var interactiveAreaStyle = undefined;
            var imgStyle = undefined;
            switch (_this.props.iconType) {
                case SliderHandleIconType.Left:
                    iconSet = Icons_1.SliderLeftHandleIcon;
                    interactiveAreaStyle = styles.HandleInteractiveAreaLeft;
                    imgStyle = styles.HandleIconLeft;
                    break;
                case SliderHandleIconType.Right:
                    iconSet = Icons_1.SliderRightHandleIcon;
                    interactiveAreaStyle = styles.HandleInteractiveAreaRight;
                    imgStyle = styles.HandleIconRight;
                    break;
                default:
                    iconSet = Icons_1.SliderHandleIcon;
                    interactiveAreaStyle = styles.HandleInteractiveArea;
                    imgStyle = styles.HandleIcon;
                    break;
            }
            if (_this.props.disabled) {
                interactiveAreaStyle = tslib_1.__assign(tslib_1.__assign({}, interactiveAreaStyle), styles.DisabledHandleMixin);
                imgStyle = tslib_1.__assign(tslib_1.__assign({}, imgStyle), styles.DisabledHandleInnerFocusAreaMixin);
            }
            var iconState = {
                active: _this.state.isHovered || _this.props.isActive,
                disabled: _this.props.disabled,
                focus: _this.state.isFocused,
            };
            var iconImageDataUrl = iconSet.icon(iconState);
            return {
                positioningContainerStyle: styles.PositioningContainer,
                pressIndicationBarStyle: styles.PressIndicationBar,
                interactiveAreaStyle: interactiveAreaStyle,
                imgStyle: imgStyle,
                iconImageDataUrl: iconImageDataUrl,
            };
        };
        _this.handleImgRef = function (element) {
            _this.imgRef = element;
        };
        _this.handleInteractiveAreaRef = function (element) {
            _this.interactiveAreaRef = element;
        };
        _this.handleFocus = function (focus) {
            _this.setState({ isFocused: !_this.props.disabled && focus });
        };
        _this.handleHover = function (hover) {
            if (!_this.props.disabled) {
                _this.setState({ isHovered: hover });
            }
        };
        _this.state = { isHovered: false, isFocused: false };
        return _this;
    }
    SliderHandleWidget.prototype.focus = function () {
        if (this.imgRef) {
            this.imgRef.focus();
        }
    };
    SliderHandleWidget.prototype.getBoundingClientRectForIcon = function () {
        if (this.imgRef) {
            var rect = this.imgRef.getBoundingClientRect();
            // The left and right icons have several pixels of transparency between what appears like the edge of the artwork
            // and the actual edge of the image.  Unfortunately we are using the client bounding rect of the icon for some
            // behavior (e.g. see the dragStart method in SliderHandleContainer, which has logic that has to know whether
            // the user (with a mouse) clicked specifically on the icon or not).
            // To make the actual client bounding rect matchup visually with the edge of the artwork, we have to shrink
            // the bounding rect slightly.
            if (this.props.iconType === SliderHandleIconType.Left) {
                return Geometry_1.addClientRectRight(rect, -1 * Icons_1.SliderLeftHandleIcon.artworkOffsetFromRightSide);
            }
            else if (this.props.iconType === SliderHandleIconType.Right) {
                return Geometry_1.addClientRectLeft(rect, Icons_1.SliderRightHandleIcon.artworkOffsetFromLeftSide);
            }
            return rect;
        }
        else {
            throw new Error("Can't determinte bounding rectangle of unmounted handle");
        }
    };
    SliderHandleWidget.prototype.getBoundingClientRectForInteractiveArea = function () {
        if (this.interactiveAreaRef) {
            return this.interactiveAreaRef.getBoundingClientRect();
        }
        else {
            throw new Error("Can't determinte bounding rectangle of unmounted element");
        }
    };
    SliderHandleWidget.prototype.render = function () {
        var dataTestId = Declarative_1.makeTestId(this.props.testId, 'SliderHandle');
        var positionAsPercentage = this.props.position * 100;
        var _a = this.chooseIconAndStylesForRender(), positioningContainerStyle = _a.positioningContainerStyle, pressIndicationBarStyle = _a.pressIndicationBarStyle, interactiveAreaStyle = _a.interactiveAreaStyle, imgStyle = _a.imgStyle, iconImageDataUrl = _a.iconImageDataUrl;
        var renderTouchDragIndicator = this.props.isActive && this.props.isBeingTouched;
        return (React.createElement(InteractiveDom_1.InteractiveDomWrapper, { handleHover: this.handleHover, handleFocus: this.handleFocus },
            React.createElement("span", { className: TypeStyle.classes(FocusIndicatorStyleName, this.state.isFocused && 'focus-within'), "data-tb-test-id": dataTestId, style: tslib_1.__assign(tslib_1.__assign({}, positioningContainerStyle), { left: positionAsPercentage + "%" }) },
                renderTouchDragIndicator &&
                    React.createElement("span", { style: pressIndicationBarStyle, "data-tb-test-id": dataTestId + '-touch-drag-indicator' }),
                React.createElement("span", { style: interactiveAreaStyle, ref: this.handleInteractiveAreaRef }),
                React.createElement("img", tslib_1.__assign({}, this.props.ariaAttributes, { "aria-orientation": 'horizontal', "data-tb-test-id": Declarative_1.makeTestId(this.props.testId, 'SliderHandleIconArea'), onKeyDown: this.props.onKeyDown, onKeyUp: this.props.onKeyUp, ref: this.handleImgRef, role: 'slider', src: iconImageDataUrl, style: imgStyle, tabIndex: this.props.disabled ? undefined : 0 })))));
    };
    return SliderHandleWidget;
}(React.Component));
exports.SliderHandleWidget = SliderHandleWidget;


/***/ }),

/***/ "./lib/src/widgets/Slider/SliderStyles.js":
/*!************************************************!*\
  !*** ./lib/src/widgets/Slider/SliderStyles.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var Icons_1 = __webpack_require__(/*! ../../icons/Icons */ "./lib/src/icons/Icons.js");
var FocusIndicators_1 = __webpack_require__(/*! ../../styles/FocusIndicators */ "./lib/src/styles/FocusIndicators.js");
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var sliderHandleIconHalfSize = { w: Math.ceil(Icons_1.SliderHandleIcon.width / 2), h: Math.ceil(Icons_1.SliderHandleIcon.height / 2) };
var sliderHeight = 40;
// It's just a coincidence that the following two constants are equal
var sliderTickHeight = 4;
var sliderTrackHeight = 4;
var sliderHandleSize = { w: 40, h: 40 };
var sliderHandleHalfSize = { w: sliderHandleSize.w / 2, h: sliderHandleSize.h / 2 };
var sliderHandlePressIndicationBarHeight = 16;
var sliderSpaceBetweenTickBarAndTrack = 11;
var sliderLeftRightPadding = 14;
exports.getSliderTrackStyles = function () {
    var basicStyles = {
        Track: {
            position: 'absolute',
            left: sliderHandleIconHalfSize.w,
            right: sliderHandleIconHalfSize.w,
            backgroundColor: TabStyles_1.TabStyles.Colors.L3,
            height: sliderTrackHeight,
            top: (sliderHeight - sliderTrackHeight) / 2,
        },
        RangeIndicatorBar: {
            position: 'absolute',
            top: 0,
            bottom: 0,
            backgroundColor: TabStyles_1.TabStyles.Colors.L7,
        },
        DataBar: {
            position: 'absolute',
            top: 0,
            bottom: 0,
            backgroundColor: TabStyles_1.TabStyles.Colors.L8,
        }
    };
    return tslib_1.__assign(tslib_1.__assign({}, basicStyles), { RangeIndicatorBarDarkened: tslib_1.__assign(tslib_1.__assign({}, basicStyles.RangeIndicatorBar), { backgroundColor: TabStyles_1.TabStyles.Colors.L8 }), RangeIndicatorBarFocused: tslib_1.__assign(tslib_1.__assign({}, basicStyles.RangeIndicatorBar), { backgroundColor: TabStyles_1.TabStyles.Colors.Focus, boxShadow: FocusIndicators_1.DefaultFocusIndicator.boxShadow }), DataBarDarkened: tslib_1.__assign(tslib_1.__assign({}, basicStyles.DataBar), { backgroundColor: TabStyles_1.TabStyles.Colors.L9 }), DataBarFocused: tslib_1.__assign(tslib_1.__assign({}, basicStyles.DataBar), { backgroundColor: "rgb(24, 71, 102)", boxShadow: FocusIndicators_1.DefaultFocusIndicator.boxShadow }) });
};
exports.getSliderTickBarStyles = function () {
    return {
        Bar: {
            position: 'absolute',
            left: sliderHandleIconHalfSize.w,
            // The + 1 here is to make the spread of the ticks match the width of the track bar (above).  Since we position
            // the ticks using `left: X%`, the far right tick is actually 1px into the `right` space.  The + 1
            // counterintuitivly shrinks the width of the tick bar so that the final tick is now directly above the right end
            // of the slider track.
            right: sliderHandleIconHalfSize.w + 1,
            height: sliderTickHeight,
            top: (sliderHeight - sliderTrackHeight) / 2 - sliderSpaceBetweenTickBarAndTrack - sliderTickHeight,
        },
        Tick: {
            position: 'absolute',
            borderLeft: "solid 1px " + TabStyles_1.TabStyles.Colors.L6,
            height: sliderTickHeight,
            width: 0,
        }
    };
};
exports.getSliderHandleStyles = function () {
    var basicStyles = {
        PositioningContainer: {
            position: 'absolute',
        },
        PressIndicationBar: {
            position: 'absolute',
            borderLeft: "solid 2px " + TabStyles_1.TabStyles.Colors.L9,
            // If we dont push it to the left by 1 px the looks off center from the circle icon
            marginLeft: -1,
            width: 0,
            height: sliderHandlePressIndicationBarHeight,
            top: -3,
        },
        HandleInteractiveArea: {
            position: 'absolute',
            touchAction: 'none',
            width: Icons_1.SliderHandleIcon.width,
            height: Icons_1.SliderHandleIcon.height,
            boxSizing: 'content-box',
            paddingTop: sliderHandleHalfSize.h - sliderHandleIconHalfSize.h,
            paddingBottom: sliderHandleHalfSize.h - sliderHandleIconHalfSize.h,
            paddingLeft: sliderHandleHalfSize.w - sliderHandleIconHalfSize.w,
            paddingRight: sliderHandleHalfSize.w - sliderHandleIconHalfSize.w,
            marginLeft: -1 * sliderHandleHalfSize.w,
            WebkitTouchCallout: 'none',
            WebkitUserSelect: 'none',
            MozUserSelect: 'none',
            msUserSelect: 'none',
            userSelect: 'none',
        },
        HandleIcon: {
            position: 'absolute',
            touchAction: 'none',
            cursor: 'pointer',
            width: Icons_1.SliderHandleIcon.width,
            height: Icons_1.SliderHandleIcon.height,
            marginLeft: -1 * (sliderHandleIconHalfSize.w),
            marginTop: (sliderHandleHalfSize.h - sliderHandleIconHalfSize.h),
            outline: 'none',
            WebkitTouchCallout: 'none',
            WebkitUserSelect: 'none',
            MozUserSelect: 'none',
            msUserSelect: 'none',
            userSelect: 'none',
            WebkitTapHighlightColor: 'transparent',
        }
    };
    return tslib_1.__assign(tslib_1.__assign({}, basicStyles), { HandleInteractiveAreaLeft: tslib_1.__assign(tslib_1.__assign({}, basicStyles.HandleInteractiveArea), { paddingLeft: basicStyles.HandleInteractiveArea.paddingLeft - 5, paddingRight: basicStyles.HandleInteractiveArea.paddingRight + 5 }), HandleInteractiveAreaRight: tslib_1.__assign(tslib_1.__assign({}, basicStyles.HandleInteractiveArea), { paddingLeft: basicStyles.HandleInteractiveArea.paddingLeft + 6, paddingRight: basicStyles.HandleInteractiveArea.paddingRight - 4 }), HandleIconLeft: tslib_1.__assign(tslib_1.__assign({}, basicStyles.HandleIcon), { marginLeft: basicStyles.HandleIcon.marginLeft - 5 }), HandleIconRight: tslib_1.__assign(tslib_1.__assign({}, basicStyles.HandleIcon), { marginLeft: basicStyles.HandleIcon.marginLeft + 6 }), DisabledHandleMixin: {
            touchAction: undefined,
        }, DisabledHandleInnerFocusAreaMixin: {
            touchAction: undefined,
            cursor: undefined,
        } });
};
exports.getSliderHandleContainerStyles = function () {
    return {
        Container: {
            position: 'absolute',
            top: 0, bottom: 0, left: 0, right: 0,
            // We restrict the horizontal space (that the handle can be positioned in) a bit and take away half the width of
            // the handle icon on the left and right sides.  This way, because we center the handle at a given position, if
            // the handle is at the far left it isn't half outside the bounds of the slider.  Same thing if it is at the far
            // right.
            //
            // Also the + 1 here is to:
            // A. Make the handle area occupy the same amount of horizontal space as the tick bar (which is one pixel smaller
            // than the track, see above)
            // B. accommodate the press indicator bar being moved to the left 1px (so it will line up w/ the ticks)
            marginLeft: sliderHandleIconHalfSize.w + 1,
            marginRight: sliderHandleIconHalfSize.w,
        },
        RangeHandleArea: {
            position: 'absolute',
            cursor: 'pointer',
            height: Icons_1.SliderHandleIcon.height,
            outline: 'none',
            top: sliderHandleHalfSize.h - sliderHandleIconHalfSize.h,
        }
    };
};
exports.getSliderStyles = function () {
    return {
        OuterContainer: {
            paddingLeft: sliderLeftRightPadding,
            paddingRight: sliderLeftRightPadding,
            WebkitTapHighlightColor: 'transparent',
            TapHighlightColor: 'transparent',
        },
        TrackAndHandleContainer: {
            position: 'relative',
            height: sliderHeight,
        },
    };
};


/***/ }),

/***/ "./lib/src/widgets/Slider/SliderTickBarWidget.js":
/*!*******************************************************!*\
  !*** ./lib/src/widgets/Slider/SliderTickBarWidget.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var SliderStyles_1 = __webpack_require__(/*! ./SliderStyles */ "./lib/src/widgets/Slider/SliderStyles.js");
function calculateTickProportionalPositions(tickCount) {
    var tickPositionsAsProportions = [];
    if (tickCount === 1) {
        tickPositionsAsProportions.push(0.5);
    }
    else if (tickCount > 1) {
        // We subtract 1 from tickCount to make the final division below result in exactly 1.
        // For example, if tickCount === 4:
        // * (dividing by tickCount):     [0, 0.25, 0.5,  0.75]
        // * (dividing by tickCount - 1): [0, 0.33, 0.66, 1.0]
        // We want to position the marks like the later.
        var tickCountForSpacing = tickCount - 1;
        for (var i = 0; i < tickCount; i++) {
            tickPositionsAsProportions.push(i / tickCountForSpacing);
        }
    }
    return tickPositionsAsProportions;
}
exports.calculateTickProportionalPositions = calculateTickProportionalPositions;
/**
 * The tick bar is a bar, of ticks.  It is not interactive.
 */
function SliderTickBarWidget(props) {
    var tickPositionsAsProportions = calculateTickProportionalPositions(props.tickCount);
    var tickPositionsAsPercentages = tickPositionsAsProportions.map(function (x) { return x * 100; });
    var styles = SliderStyles_1.getSliderTickBarStyles();
    return (React.createElement("div", { style: styles.Bar, "data-tb-test-id": Declarative_1.makeTestId(props.testId, 'SliderTickBar') }, tickPositionsAsPercentages.map(function (tickPositionAsPercentage, i) {
        return React.createElement("span", { key: i, style: tslib_1.__assign(tslib_1.__assign({}, styles.Tick), { left: tickPositionAsPercentage + "%" }) });
    })));
}
exports.SliderTickBarWidget = SliderTickBarWidget;


/***/ }),

/***/ "./lib/src/widgets/Slider/SliderTrackWidget.js":
/*!*****************************************************!*\
  !*** ./lib/src/widgets/Slider/SliderTrackWidget.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var SliderStyles_1 = __webpack_require__(/*! ./SliderStyles */ "./lib/src/widgets/Slider/SliderStyles.js");
/**
 * The slider track appears underneath the slider handles in the slider widget.  This component itself is not
 * interactive, but the track can seem like its interactive since the SliderHandleContainer is positioned on top of
 * it and does let you click anywhere in the track to grab the handles.
 */
function SliderTrackWidget(props) {
    var styles = SliderStyles_1.getSliderTrackStyles();
    var indicatorBar;
    if (props.rangeIndicatorBarPosition) {
        var leftPositionAsPercentage = props.rangeIndicatorBarPosition.start * 100;
        var rightPositionAsPercentage = (1 - props.rangeIndicatorBarPosition.end) * 100;
        var style = props.handleIsBeingDragged ? styles.RangeIndicatorBarDarkened :
            (props.isRangeHandleFocused ? styles.RangeIndicatorBarFocused : styles.RangeIndicatorBar);
        indicatorBar = React.createElement("div", { style: tslib_1.__assign(tslib_1.__assign({}, style), { left: leftPositionAsPercentage + "%", right: rightPositionAsPercentage + "%" }) });
    }
    var dataBar;
    if (props.dataBarPosition) {
        var leftPositionAsPercentage = props.dataBarPosition.start * 100;
        var rightPositionAsPercentage = (1 - props.dataBarPosition.end) * 100;
        var style = props.handleIsBeingDragged ? styles.DataBarDarkened :
            (props.isRangeHandleFocused ? styles.DataBarFocused : styles.DataBar);
        dataBar = React.createElement("div", { style: tslib_1.__assign(tslib_1.__assign({}, style), { left: leftPositionAsPercentage + "%", right: rightPositionAsPercentage + "%" }) });
    }
    return (React.createElement("div", { style: styles.Track, "data-tb-test-id": Declarative_1.makeTestId(props.testId, 'SliderTrack') },
        indicatorBar,
        dataBar));
}
exports.SliderTrackWidget = SliderTrackWidget;


/***/ }),

/***/ "./lib/src/widgets/Slider/SliderValueLogic.js":
/*!****************************************************!*\
  !*** ./lib/src/widgets/Slider/SliderValueLogic.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Math_1 = __webpack_require__(/*! ../../utils/Math */ "./lib/src/utils/Math.js");
/**
 * Logic for dealing with calculating:
 *   - The handle positions of the slider based upon the slider value
 *   - The new slider values from key down events
 */
var SliderValueLogic = /** @class */ (function () {
    function SliderValueLogic(min, max, roundToIntegers) {
        this.min = roundToIntegers ? Math.ceil(min) : min;
        this.max = roundToIntegers ? Math.floor(max) : max;
        this.roundToIntegers = roundToIntegers;
    }
    // Range is 0.0 to 1.0, inclusive
    SliderValueLogic.prototype.calculateSliderPositionAsProportion = function (value) {
        if (this.min > this.max) {
            return NaN;
        }
        var valuePrime = this.roundToIntegers ? Math.round(value) : value;
        var proportion = (valuePrime - this.min) / (this.max - this.min);
        return Math_1.clamp(proportion, 0, 1);
    };
    // 0.0 ===> min, 1.0 ===> max
    SliderValueLogic.prototype.calculateNewSliderValueFromProportion = function (proportion) {
        if (this.min > this.max) {
            return NaN;
        }
        else if (proportion < 0) {
            return this.min;
        }
        else if (proportion > 1) {
            return this.max;
        }
        var newValue = this.roundToIntegers ?
            Math.round(proportion * (this.max - this.min)) + this.min :
            proportion * (this.max - this.min) + this.min;
        return Math_1.clamp(newValue, this.min, this.max);
    };
    SliderValueLogic.prototype.calculateNewSliderValueForKey = function (key, currentValue) {
        var valuePrime = this.roundToIntegers ? Math.round(currentValue) : currentValue;
        var onePercentOfRange = (this.max - this.min) / 100;
        var tenthOfRange = (this.max - this.min) / 10;
        var arrowKeyChangeAmount = this.roundToIntegers ? 1 : onePercentOfRange;
        var pageKeyChangeAmount = this.roundToIntegers ? Math.max(Math.round(tenthOfRange), 1) : tenthOfRange;
        var newValue = valuePrime;
        switch (key) {
            case 'ArrowLeft':
            case 'ArrowDown':
                newValue = valuePrime - arrowKeyChangeAmount;
                break;
            case 'ArrowUp':
            case 'ArrowRight':
                newValue = valuePrime + arrowKeyChangeAmount;
                break;
            case 'PageDown':
                newValue = valuePrime - pageKeyChangeAmount;
                break;
            case 'PageUp':
                newValue = valuePrime + pageKeyChangeAmount;
                break;
            case 'Home':
                newValue = this.min;
                break;
            case 'End':
                newValue = this.max;
                break;
            default:
                return undefined;
        }
        return Math_1.clamp(newValue, this.min, this.max);
    };
    SliderValueLogic.prototype.calculateNewSliderRangeValueForKey = function (key, currentValue) {
        var currentValueDelta = Math.max(currentValue.to - currentValue.from, 0);
        var arrowKeyChangeAmount = (this.max - this.min) / 100;
        var pageKeyChangeAmount = (this.max - this.min) / 10;
        var newValue = currentValue;
        switch (key) {
            case 'ArrowDown':
            case 'ArrowLeft':
                if (currentValue.from > this.min) {
                    var newFromValue = Math.max(currentValue.from - arrowKeyChangeAmount, this.min);
                    newValue = { from: newFromValue, to: newFromValue + currentValueDelta };
                }
                break;
            case 'ArrowUp':
            case 'ArrowRight':
                if (currentValue.to < this.max) {
                    var newToValue = Math.min(currentValue.to + arrowKeyChangeAmount, this.max);
                    newValue = { from: newToValue - currentValueDelta, to: newToValue };
                }
                break;
            case 'PageDown':
                if (currentValue.from > this.min) {
                    var newFromValue = Math.max(currentValue.from - pageKeyChangeAmount, this.min);
                    newValue = { from: newFromValue, to: newFromValue + currentValueDelta };
                }
                break;
            case 'PageUp':
                if (currentValue.to < this.max) {
                    var newToValue = Math.min(currentValue.to + pageKeyChangeAmount, this.max);
                    newValue = { from: newToValue - currentValueDelta, to: newToValue };
                }
                break;
            case 'Home':
                newValue = { from: this.min, to: this.min + currentValueDelta };
                break;
            case 'End':
                newValue = { from: this.max - currentValueDelta, to: this.max };
                break;
            default:
                return undefined;
        }
        return { from: Math_1.clamp(newValue.from, this.min, this.max), to: Math_1.clamp(newValue.to, this.min, this.max) };
    };
    SliderValueLogic.KeysRelevantForManipulatingSlider = Object.freeze({
        'ArrowLeft': true,
        'ArrowRight': true,
        'ArrowUp': true,
        'ArrowDown': true,
        'PageUp': true,
        'PageDown': true,
        'Home': true,
        'End': true
    });
    return SliderValueLogic;
}());
exports.SliderValueLogic = SliderValueLogic;


/***/ }),

/***/ "./lib/src/widgets/Slider/SliderWidget.js":
/*!************************************************!*\
  !*** ./lib/src/widgets/Slider/SliderWidget.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var SliderBaseWidget_1 = __webpack_require__(/*! ./SliderBaseWidget */ "./lib/src/widgets/Slider/SliderBaseWidget.js");
/**
 * Enumeration of the possible open ended indicators to apply to a SliderWidget. Use this to
 * apply a darkened track bar for the specified open ended at type.
 */
var OpenEndedAt;
(function (OpenEndedAt) {
    /** Use to darken the track bar from [min, value] inclusive */
    OpenEndedAt[OpenEndedAt["Min"] = 0] = "Min";
    /** Use to darken the track bar from [value, max] inclusive */
    OpenEndedAt[OpenEndedAt["Max"] = 1] = "Max";
})(OpenEndedAt = exports.OpenEndedAt || (exports.OpenEndedAt = {}));
/**
 * This slider has one handle and lets a user select a value. It allows the user to choose any number
 * from min to max, including decimal numbers.
 */
function SliderWidget(props) {
    var ariaAttributes = props.ariaAttributes, sliderProps = tslib_1.__rest(props, ["ariaAttributes"]);
    // tslint:disable-next-line:max-line-length
    return React.createElement(SliderBaseWidget_1.SliderBaseWidget, tslib_1.__assign({}, sliderProps, { ariaAttributes: { leftHandle: ariaAttributes, rightHandle: undefined }, testId: Declarative_1.makeTestId(props.testId, 'Slider') }));
}
exports.SliderWidget = SliderWidget;


/***/ }),

/***/ "./lib/src/widgets/SwitcherTextBase.js":
/*!*********************************************!*\
  !*** ./lib/src/widgets/SwitcherTextBase.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var ClickBusting_1 = __webpack_require__(/*! ../config/ClickBusting */ "./lib/src/config/ClickBusting.js");
var Declarative_1 = __webpack_require__(/*! ../utils/Declarative */ "./lib/src/utils/Declarative.js");
var InputLabelWidget_1 = __webpack_require__(/*! ./InputLabelWidget */ "./lib/src/widgets/InputLabelWidget.js");
var SwitcherTextGroupNamePrefix = 'SwitcherTextGroup';
/**
 * The SwitchTextButton is the individual button within a switcher.  It contains the text and
 * can be toggled.  The underlying input is a radio button.
 */
var SwitcherTextButton = /** @class */ (function (_super) {
    tslib_1.__extends(SwitcherTextButton, _super);
    function SwitcherTextButton() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleChange = function (e) {
            if (!_this.props.checked) {
                _this.props.handleChange(_this.props.idx);
            }
        };
        /**
         * If it is active, call the handleActive with the switcher's idx, otherwise return -1 to say
         * that it is no longer selected.
         */
        _this.handleActive = function (active) {
            _this.props.handleActive(active ? _this.props.idx : -1);
        };
        return _this;
    }
    SwitcherTextButton.prototype.render = function () {
        return (React.createElement(InputLabelWidget_1.InputLabelWidget, { disabled: this.props.disabled, handleActive: this.handleActive, interactiveStyles: {
                disabled: this.props.disabledStyle,
                focus: this.props.focusStyle,
                hover: this.props.hoverStyle,
            }, style: this.props.style, testId: this.props.testId },
            React.createElement("input", { checked: this.props.checked, "data-tb-test-id": Declarative_1.makeTestId(this.props.testId, 'input'), disabled: this.props.disabled, name: this.props.groupName, onChange: this.handleChange, style: {
                    opacity: 0,
                    position: 'absolute'
                }, type: 'radio' }),
            this.props.children));
    };
    return SwitcherTextButton;
}(React.Component));
/**
 * The SwitchTextBase is the container of the switcher buttons.  It maintains the state of what
 * switcher button is active and creates the group id for the underlying radio buttons.
 */
var SwitcherTextBase = /** @class */ (function (_super) {
    tslib_1.__extends(SwitcherTextBase, _super);
    function SwitcherTextBase(props) {
        var _this = _super.call(this, props) || this;
        _this.handleActive = function (idx) {
            // TFSID 694578: prevent visual flicker on iOS when client is ClickBusting
            if (ClickBusting_1.ClickBustingConfig.suppressionClassName && ClickBusting_1.ClickBustingConfig.suppressionClassName.length) {
                return;
            }
            _this.setState({ activerSwitcherIdx: idx });
        };
        _this.groupId = SwitcherTextBase.groupIdIncrementor++;
        _this.state = { activerSwitcherIdx: -1 };
        return _this;
    }
    SwitcherTextBase.prototype.getToggleStyling = function (currentSwitcherIdx) {
        var hasActiveSwitcher = this.state.activerSwitcherIdx >= 0;
        var currentSwitcherIsFirst = currentSwitcherIdx === 0;
        var currentSwitcherIsLast = currentSwitcherIdx === this.props.toggleTexts.length - 1;
        var currentSwitcherInactive = this.state.activerSwitcherIdx !== currentSwitcherIdx;
        var currentSwitcherChecked = this.props.checkedIndex === currentSwitcherIdx;
        return tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, this.props.style.toggleBase), Declarative_1.conditional(currentSwitcherIsFirst, this.props.style.firstToggle)), Declarative_1.conditional(currentSwitcherIsLast, this.props.style.lastToggle)), (hasActiveSwitcher ? (currentSwitcherInactive ? this.props.style.inactiveToggle :
            /* is active */ currentSwitcherChecked ? this.props.style.activeSelectedToggle : this.props.style.activeUnselectedToggle)
            /* no active */ : (currentSwitcherChecked ? this.props.style.selectedToggle : this.props.style.unselectedToggle)));
    };
    SwitcherTextBase.prototype.render = function () {
        var _this = this;
        var groupName = SwitcherTextGroupNamePrefix + String(this.groupId);
        var switchButtons = this.props.toggleTexts.map(function (toggleText, idx) {
            var isChecked = _this.props.checkedIndex === idx;
            var toggleStyle = _this.getToggleStyling(idx);
            var hoverStyle = isChecked ? _this.props.style.hoverSelectedToggle : _this.props.style.hoverUnselectedToggle;
            var focusStyle = isChecked ? _this.props.style.focusSelectedToggle : _this.props.style.focusUnselectedToggle;
            var disabledStyle = isChecked ? _this.props.style.disabledSelectedToggle : _this.props.style.disabledUnselectedToggle;
            return React.createElement(SwitcherTextButton, { checked: isChecked, children: toggleText, disabled: _this.props.disabled, disabledStyle: disabledStyle, focusStyle: focusStyle, groupName: _this.props.name || groupName, handleActive: _this.handleActive, handleChange: _this.props.handleChange, hoverStyle: hoverStyle, idx: idx, key: idx, style: toggleStyle, testId: Declarative_1.makeTestId(_this.props.testId, toggleText) });
        });
        return React.createElement("div", { "aria-label": this.props.ariaLabel, children: switchButtons, className: ClickBusting_1.ClickBustingConfig.suppressionClassName, role: 'radiogroup', style: this.props.style.container });
    };
    SwitcherTextBase.groupIdIncrementor = 0;
    return SwitcherTextBase;
}(React.Component));
exports.SwitcherTextBase = SwitcherTextBase;


/***/ }),

/***/ "./lib/src/widgets/Tabs/AutomaticTabActivator.js":
/*!*******************************************************!*\
  !*** ./lib/src/widgets/Tabs/AutomaticTabActivator.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var BaseTabActivator_1 = __webpack_require__(/*! ./BaseTabActivator */ "./lib/src/widgets/Tabs/BaseTabActivator.js");
/**
 * Automatically activated tabs: tabs are automatically activated and their panel is displayed when they receive focus
 */
var AutomaticTabActivator = /** @class */ (function (_super) {
    tslib_1.__extends(AutomaticTabActivator, _super);
    function AutomaticTabActivator(tabsWidget) {
        return _super.call(this, tabsWidget) || this;
    }
    AutomaticTabActivator.prototype.handleKeyDown = function (tabIndex, keyboardEvent) {
        var nextActiveTabIndex = this.tabIndexFromKeyDown(tabIndex, keyboardEvent.key);
        if (nextActiveTabIndex !== -1) {
            this.tabsWidget.setActiveIndex(nextActiveTabIndex);
            BaseTabActivator_1.BaseTabActivator.preventDefaultAndStopPropagation(keyboardEvent);
        }
    };
    return AutomaticTabActivator;
}(BaseTabActivator_1.BaseTabActivator));
exports.AutomaticTabActivator = AutomaticTabActivator;


/***/ }),

/***/ "./lib/src/widgets/Tabs/BaseTabActivator.js":
/*!**************************************************!*\
  !*** ./lib/src/widgets/Tabs/BaseTabActivator.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Abstract class that defines common interface and functionality between tab activator modes
 */
var BaseTabActivator = /** @class */ (function () {
    function BaseTabActivator(tabsWidget) {
        this.tabsWidget = tabsWidget;
        this.handleKeyDown = this.handleKeyDown.bind(this);
    }
    BaseTabActivator.prototype.tabIndexFromKeyDown = function (tabIndex, keyValue) {
        var numTabs = this.tabsWidget.props.tabs.length;
        switch (keyValue) {
            // With the arrow keys, we wrap around. For example, if the last tab is focused or active and the
            // user keys down on the right arrow, we wrap around so that now the first tab is focused or active.
            case 'ArrowRight':
                return (tabIndex + 1) % numTabs;
            case 'ArrowLeft':
                return (numTabs + tabIndex - 1) % numTabs;
            case 'Home':
                return 0;
            case 'End':
                return numTabs - 1;
            default:
                return -1;
        }
    };
    BaseTabActivator.preventDefaultAndStopPropagation = function (event) {
        event.preventDefault();
        event.stopPropagation();
    };
    return BaseTabActivator;
}());
exports.BaseTabActivator = BaseTabActivator;


/***/ }),

/***/ "./lib/src/widgets/Tabs/ManualTabActivator.js":
/*!****************************************************!*\
  !*** ./lib/src/widgets/Tabs/ManualTabActivator.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var BaseTabActivator_1 = __webpack_require__(/*! ./BaseTabActivator */ "./lib/src/widgets/Tabs/BaseTabActivator.js");
/**
 * Manually activated tabs: users activate a tab and display its panel by pressing space or enter
 */
var ManualTabActivator = /** @class */ (function (_super) {
    tslib_1.__extends(ManualTabActivator, _super);
    function ManualTabActivator(tabsWidget) {
        return _super.call(this, tabsWidget) || this;
    }
    ManualTabActivator.prototype.handleKeyDown = function (tabIndex, keyboardEvent) {
        // Check to see if we should focus a tab (but not change which tab panel is being displayed)
        var tabIndexToFocus = this.tabIndexFromKeyDown(tabIndex, keyboardEvent.key);
        if (tabIndexToFocus !== -1) {
            this.tabsWidget.setFocusedIndex(tabIndexToFocus);
            BaseTabActivator_1.BaseTabActivator.preventDefaultAndStopPropagation(keyboardEvent);
            return;
        }
        // Check to see if we should activate a tab (which would display its corresponding tab panel)
        var tabIndexToActivate = this.tabIndexToActivate(keyboardEvent.key);
        if (tabIndexToActivate !== -1) {
            this.tabsWidget.setActiveIndex(tabIndexToActivate);
            BaseTabActivator_1.BaseTabActivator.preventDefaultAndStopPropagation(keyboardEvent);
        }
    };
    ManualTabActivator.prototype.tabIndexToActivate = function (keyValue) {
        switch (keyValue) {
            case 'Enter':
            case ' ':
                return this.tabsWidget.state.focusedIndex;
            default:
                return -1;
        }
    };
    return ManualTabActivator;
}(BaseTabActivator_1.BaseTabActivator));
exports.ManualTabActivator = ManualTabActivator;


/***/ }),

/***/ "./lib/src/widgets/Tabs/TabActivatorFactory.js":
/*!*****************************************************!*\
  !*** ./lib/src/widgets/Tabs/TabActivatorFactory.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var AutomaticTabActivator_1 = __webpack_require__(/*! ./AutomaticTabActivator */ "./lib/src/widgets/Tabs/AutomaticTabActivator.js");
var ManualTabActivator_1 = __webpack_require__(/*! ./ManualTabActivator */ "./lib/src/widgets/Tabs/ManualTabActivator.js");
var TabsWidget_1 = __webpack_require__(/*! ./TabsWidget */ "./lib/src/widgets/Tabs/TabsWidget.js");
var TabActivatorFactory = /** @class */ (function () {
    function TabActivatorFactory() {
    }
    TabActivatorFactory.CreateInstance = function (tabsWidget) {
        var isActivationModeManual = tabsWidget.props.activationMode === TabsWidget_1.TabActivationMode.Manual;
        return isActivationModeManual ? new ManualTabActivator_1.ManualTabActivator(tabsWidget) : new AutomaticTabActivator_1.AutomaticTabActivator(tabsWidget);
    };
    return TabActivatorFactory;
}());
exports.TabActivatorFactory = TabActivatorFactory;


/***/ }),

/***/ "./lib/src/widgets/Tabs/TabPanel.js":
/*!******************************************!*\
  !*** ./lib/src/widgets/Tabs/TabPanel.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
function TabPanel(props) {
    var containerProps = {
        'aria-labelledby': props.ariaLabelledBy,
        id: props.id,
        role: 'tabpanel',
        style: props.containerStyle
    };
    return (React.createElement("div", tslib_1.__assign({}, containerProps), props.content));
}
exports.TabPanel = TabPanel;


/***/ }),

/***/ "./lib/src/widgets/Tabs/TabWidget.js":
/*!*******************************************!*\
  !*** ./lib/src/widgets/Tabs/TabWidget.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var Icons_1 = __webpack_require__(/*! ../../icons/Icons */ "./lib/src/icons/Icons.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var DomUtil_1 = __webpack_require__(/*! ../../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var TabsWidgetStyles_1 = __webpack_require__(/*! ./TabsWidgetStyles */ "./lib/src/widgets/Tabs/TabsWidgetStyles.js");
/**
 * TabWidget is a component that renders a tab, stylized based on whether it's active, hovered, or pressed
 */
var TabWidget = /** @class */ (function (_super) {
    tslib_1.__extends(TabWidget, _super);
    function TabWidget() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {};
        _this.labelRef = null;
        _this.tabRef = null;
        _this.handleTabRef = function (tabRef) {
            _this.tabRef = tabRef;
        };
        _this.handleLabelRef = function (labelRef) {
            _this.labelRef = labelRef;
        };
        _this.handleMouseEnter = function () {
            var title = (!!_this.labelRef && DomUtil_1.isElementOverflownX(_this.labelRef)) ? _this.props.tabContent.label : undefined;
            _this.setState({ title: title });
        };
        _this.handleClick = function () {
            _this.props.onClick(_this.props.index);
        };
        _this.handleKeyDown = function (keyboardEvent) {
            _this.props.onKeyDown(_this.props.index, keyboardEvent);
        };
        _this.handleFocus = function () {
            _this.props.onFocus(_this.props.index);
        };
        return _this;
    }
    TabWidget.prototype.componentDidUpdate = function (prevProps) {
        if (this.props.isFocused && !prevProps.isFocused && this.tabRef) {
            this.tabRef.focus();
        }
    };
    TabWidget.prototype.render = function () {
        var tabLabelStyles = tslib_1.__assign(tslib_1.__assign({}, TabsWidgetStyles_1.DefaultTabLabelStyles), Declarative_1.conditional(this.props.isActive && !!this.props.flexPercent, { fontWeight: 'bold' }));
        return (React.createElement("div", { "aria-controls": this.props.ariaControls, "aria-label": this.props.tabContent.label, "aria-selected": this.props.isActive, className: TabsWidgetStyles_1.TabStyleName, id: this.props.id, onBlur: this.props.onBlur, onClick: this.handleClick, onFocus: this.handleFocus, onKeyDown: this.handleKeyDown, onMouseEnter: this.handleMouseEnter, onTouchEnd: this.handleClick, ref: this.handleTabRef, role: 'tab', style: tslib_1.__assign({}, (!!this.props.flexPercent && { flex: "1 0 " + this.props.flexPercent + "%" })), tabIndex: this.props.isActive || this.props.isFocused ? 0 : -1, title: this.props.tabContent.title || this.state.title },
            React.createElement("div", { style: this.props.tabContainerStyles },
                React.createElement("div", { style: tabLabelStyles },
                    this.renderIcon(),
                    this.renderLabel()))));
    };
    TabWidget.prototype.renderIcon = function () {
        var tabIcon = this.props.tabContent.icon;
        if (!tabIcon) {
            return undefined;
        }
        var iconProps = {
            'data-tb-test-id': Declarative_1.makeTestId(this.props.id, 'icon'),
            style: TabsWidgetStyles_1.TabContentStyle
        };
        var element = (typeof tabIcon === 'string') ? React.createElement("img", { src: Icons_1.encodeSvg(tabIcon) }) : tabIcon;
        return React.createElement("div", tslib_1.__assign({}, iconProps), element);
    };
    TabWidget.prototype.renderLabel = function () {
        var labelProps = {
            'data-tb-test-id': Declarative_1.makeTestId(this.props.id, 'label'),
            ref: this.handleLabelRef,
            style: TabsWidgetStyles_1.LabelStyle
        };
        return React.createElement("div", { style: TabsWidgetStyles_1.TabContentStyle },
            React.createElement("div", tslib_1.__assign({}, labelProps), this.props.tabContent.label));
    };
    return TabWidget;
}(React.PureComponent));
exports.TabWidget = TabWidget;


/***/ }),

/***/ "./lib/src/widgets/Tabs/TabsWidget.js":
/*!********************************************!*\
  !*** ./lib/src/widgets/Tabs/TabsWidget.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var FocusIndicator_1 = __webpack_require__(/*! ../../utils/FocusIndicator */ "./lib/src/utils/FocusIndicator.js");
var Math_1 = __webpack_require__(/*! ../../utils/Math */ "./lib/src/utils/Math.js");
var TabActivatorFactory_1 = __webpack_require__(/*! ./TabActivatorFactory */ "./lib/src/widgets/Tabs/TabActivatorFactory.js");
var TabPanel_1 = __webpack_require__(/*! ./TabPanel */ "./lib/src/widgets/Tabs/TabPanel.js");
var Styles = __webpack_require__(/*! ./TabsWidgetStyles */ "./lib/src/widgets/Tabs/TabsWidgetStyles.js");
var TabWidget_1 = __webpack_require__(/*! ./TabWidget */ "./lib/src/widgets/Tabs/TabWidget.js");
/**
 * Tabs widget component that renders a tab list and tab panel(s). It renders the active tab's content, in addition to the
 * content of the anchor tab (user-specified), which is rendered to maintain a consistent height when switching tabs.
 *
 * Nomenclature (inspired by https://www.w3.org/TR/wai-aria-practices-1.1/#tabpanel):
 *   - tabs widget: the name of the entire widget
 *   - tab list: a set of tab widgets
 *   - tab: an item in the tab list that serves as a label for one of the tab panels; when active, its panel is shown
 *   - tab indicator: the solid line at the bottom of each tab that changes color if the tab is active, hovered, or pressed
 *   - tab panel: the component that contains the content associated with a tab
 */
/**
 * Mode that dictates whether tabs are activated automatically or manually.
 *   Automatic: tabs are automatically activated and their panel is displayed when they receive focus
 *   Manual: users activate a tab and display its panel by pressing space or enter
 * More information: https://www.w3.org/TR/wai-aria-practices-1.1/examples/tabs/tabs-1/tabs.html
 */
var TabActivationMode;
(function (TabActivationMode) {
    TabActivationMode[TabActivationMode["Automatic"] = 0] = "Automatic";
    TabActivationMode[TabActivationMode["Manual"] = 1] = "Manual";
})(TabActivationMode = exports.TabActivationMode || (exports.TabActivationMode = {}));
/**
 * Dictates the alignment of the tabs within the tab container.
 *   Justified: evenly distributes the tabs within the available container width
 *   Left: left aligns the tabs within the container
 */
var TabListAlignment;
(function (TabListAlignment) {
    TabListAlignment[TabListAlignment["Left"] = 0] = "Left";
    TabListAlignment[TabListAlignment["Justified"] = 1] = "Justified";
})(TabListAlignment = exports.TabListAlignment || (exports.TabListAlignment = {}));
var TabsWidget = /** @class */ (function (_super) {
    tslib_1.__extends(TabsWidget, _super);
    function TabsWidget(props) {
        var _this = _super.call(this, props) || this;
        _this.setActiveIndex = function (index) {
            // Any active index should also gain focus
            _this.setState({ activeIndex: _this.state.activeIndex === index ? _this.state.activeIndex : index, focusedIndex: index });
        };
        _this.setFocusedIndex = function (index) {
            _this.setState({ focusedIndex: index });
        };
        _this.state = { activeIndex: Math_1.clamp(props.initialActiveIndex, 0, props.tabs.length - 1), focusedIndex: -1 };
        _this.activator = TabActivatorFactory_1.TabActivatorFactory.CreateInstance(_this);
        return _this;
    }
    TabsWidget.prototype.componentDidUpdate = function (prevProps, prevState) {
        if (this.state.activeIndex !== prevState.activeIndex && this.props.onActiveIndexChanged) {
            this.props.onActiveIndexChanged(this.state.activeIndex);
        }
    };
    TabsWidget.prototype.buildTabId = function (index) {
        return Declarative_1.makeTestId(this.props.testId, "tab" + (index + 1));
    };
    TabsWidget.prototype.buildTabPanelId = function (index) {
        return Declarative_1.makeTestId(this.props.testId, "tabpanel" + (index + 1));
    };
    TabsWidget.prototype.renderTabList = function () {
        var _this = this;
        return this.props.tabs.map(function (tab, index) {
            var tabProps = {
                ariaControls: _this.buildTabPanelId(index),
                id: _this.buildTabId(index),
                index: index,
                isActive: _this.isTabActive(index),
                isFocused: _this.isTabFocused(index),
                onBlur: function () { return _this.setFocusedIndex(-1); },
                onClick: _this.setActiveIndex,
                onFocus: _this.setFocusedIndex,
                onKeyDown: _this.activator.handleKeyDown,
                tabContainerStyles: Styles.GetTabLabelContainerStyles(),
                tabContent: tab.tabContent
            };
            if (_this.props.dimensionOverrides && _this.props.dimensionOverrides.tabHorizontalPadding) {
                tabProps.tabContainerStyles.paddingRight = _this.props.dimensionOverrides.tabHorizontalPadding;
                tabProps.tabContainerStyles.paddingLeft = _this.props.dimensionOverrides.tabHorizontalPadding;
            }
            if (_this.props.tabListAlignment === undefined || _this.props.tabListAlignment === TabListAlignment.Justified) {
                tabProps.flexPercent = 100 / _this.props.tabs.length;
            }
            return React.createElement(TabWidget_1.TabWidget, tslib_1.__assign({ key: index }, tabProps));
        });
    };
    TabsWidget.prototype.isTabActive = function (tabIndex) {
        return tabIndex === this.state.activeIndex;
    };
    TabsWidget.prototype.isTabFocused = function (tabIndex) {
        return tabIndex === this.state.focusedIndex;
    };
    TabsWidget.prototype.isAnchorTabActive = function () {
        return this.isTabActive(this.props.anchorTabIndex);
    };
    TabsWidget.prototype.renderTabPanel = function (index) {
        var props = {
            ariaLabelledBy: this.buildTabId(index),
            containerStyle: this.getTabPanelContainerStyle(index),
            content: this.props.tabs[index].panelContent,
            id: this.buildTabPanelId(index)
        };
        return React.createElement(TabPanel_1.TabPanel, tslib_1.__assign({}, props));
    };
    TabsWidget.prototype.getTabPanelContainerStyle = function (index) {
        if (index !== this.props.anchorTabIndex) {
            return Styles.NonAnchorTabPanelStyles;
        }
        return this.isAnchorTabActive() ? Styles.ActiveTabVisibility : Styles.InactiveTabVisibility;
    };
    TabsWidget.prototype.isAnIconDefinedInTabs = function () {
        for (var idx = 0; idx < this.props.tabs.length; idx++) {
            if (!!this.props.tabs[idx].tabContent.icon) {
                return true;
            }
        }
        return false;
    };
    TabsWidget.prototype.render = function () {
        var _a, _b;
        // tslint:disable-next-line:max-line-length
        var _c = this.props, activationMode = _c.activationMode, anchorTabIndex = _c.anchorTabIndex, ariaLabel = _c.ariaLabel, dimensionOverrides = _c.dimensionOverrides, initialActiveIndex = _c.initialActiveIndex, onActiveIndexChanged = _c.onActiveIndexChanged, tabListAlignment = _c.tabListAlignment, tabs = _c.tabs, testId = _c.testId, htmlProps = tslib_1.__rest(_c, ["activationMode", "anchorTabIndex", "ariaLabel", "dimensionOverrides", "initialActiveIndex", "onActiveIndexChanged", "tabListAlignment", "tabs", "testId"]);
        var isAnIconDefinedInTabs = this.isAnIconDefinedInTabs();
        var tabListContainerProps = {
            'aria-label': ariaLabel,
            'data-tb-test-id': Declarative_1.makeTestId(testId, 'tablist'),
            role: 'tablist',
            style: Styles.GetTabListStyles(isAnIconDefinedInTabs),
        };
        if ((_a = dimensionOverrides) === null || _a === void 0 ? void 0 : _a.tabHeight) {
            tabListContainerProps.style.height = dimensionOverrides.tabHeight;
        }
        var tabPanelScrollContainerProps = {
            'data-tb-test-id': Declarative_1.makeTestId(testId, 'tabpanel-scroll-container'),
            style: tslib_1.__assign({}, Styles.TabPanelScrollContainerStyles),
        };
        if ((_b = dimensionOverrides) === null || _b === void 0 ? void 0 : _b.tabPanelPadding) {
            tabPanelScrollContainerProps.style.padding = dimensionOverrides.tabPanelPadding;
        }
        var tabPanelContainerProps = {
            'data-tb-test-id': Declarative_1.makeTestId(testId, 'tabpanel-container'),
            style: Styles.TabPanelContainerStyles
        };
        return (React.createElement("div", tslib_1.__assign({}, htmlProps),
            React.createElement(FocusIndicator_1.__UNSTABLE__INTERNAL__FocusIndicator, null,
                React.createElement("div", tslib_1.__assign({}, tabListContainerProps), this.renderTabList())),
            React.createElement("div", tslib_1.__assign({}, tabPanelScrollContainerProps),
                React.createElement("div", tslib_1.__assign({}, tabPanelContainerProps),
                    this.renderTabPanel(anchorTabIndex),
                    Declarative_1.conditional(!this.isAnchorTabActive(), this.renderTabPanel(this.state.activeIndex))))));
    };
    return TabsWidget;
}(React.PureComponent));
exports.TabsWidget = TabsWidget;


/***/ }),

/***/ "./lib/src/widgets/Tabs/TabsWidgetStyles.js":
/*!**************************************************!*\
  !*** ./lib/src/widgets/Tabs/TabsWidgetStyles.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var FocusIndicators_1 = __webpack_require__(/*! ../../styles/FocusIndicators */ "./lib/src/styles/FocusIndicators.js");
var PreventUserSelect_1 = __webpack_require__(/*! ../../styles/PreventUserSelect */ "./lib/src/styles/PreventUserSelect.js");
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var TextEllipsis_1 = __webpack_require__(/*! ../../styles/TextEllipsis */ "./lib/src/styles/TextEllipsis.js");
var Spacing = TabStyles_1.TabStyles.Spacing;
var Colors = TabStyles_1.TabStyles.Colors;
var FontColors = TabStyles_1.TabStyles.Typography.Color;
// Only the active tab should be visible, all others should be hidden
exports.ActiveTabVisibility = { visibility: 'visible' };
exports.InactiveTabVisibility = { visibility: 'hidden' };
exports.TabsWidgetDimensions = {
    tabLabelPadding: Spacing.ExtraLargeSpace,
    textOnlyTabListHeight: 42,
    iconAndTextTabListHeight: 54,
    tabIndicatorHeight: 3
};
// The client specifies which tab panel we should anchor the tab widget height to. It's often the tallest tab panel,
// so that the dialog will always be tall enough and will not resize when switching tabs
exports.NonAnchorTabPanelStyles = {
    position: 'absolute',
    width: '100%',
    left: '0',
    top: '0'
};
exports.TabPanelScrollContainerStyles = {
    overflowY: 'auto',
    padding: Spacing.LargeSpace,
    position: 'relative',
    WebkitOverflowScrolling: 'touch',
};
exports.TabPanelContainerStyles = {
    position: 'relative',
};
exports.GetTabListStyles = function (isAnIconDefinedInTabs) {
    return tslib_1.__assign({ display: 'flex', fontSize: isAnIconDefinedInTabs ? TabStyles_1.TabStyles.Typography.Sizing.Tiny : TabStyles_1.TabStyles.Typography.Sizing.Default, height: isAnIconDefinedInTabs ? exports.TabsWidgetDimensions.iconAndTextTabListHeight : exports.TabsWidgetDimensions.textOnlyTabListHeight }, PreventUserSelect_1.PreventUserSelect);
};
exports.TabStyleName = TypeStyle.style(FocusIndicators_1.PreFocusIndicator, {
    boxSizing: 'border-box',
    display: 'inline-block',
    height: '100%',
    overflow: 'hidden',
    position: 'relative',
    $nest: {
        '&::after': {
            backgroundColor: 'transparent',
            content: "\"\"",
            height: exports.TabsWidgetDimensions.tabIndicatorHeight,
            position: 'absolute',
            bottom: 0,
            left: 0,
            right: 0,
        },
        '&:hover::after': { backgroundColor: Colors.L5 },
        '&[aria-selected="true"]::after': { backgroundColor: Colors.L8 },
        '&&:active::after': { backgroundColor: Colors.L9 },
    }
});
exports.GetTabLabelContainerStyles = function () {
    return {
        alignItems: 'center',
        display: 'flex',
        height: '100%',
        justifyContent: 'center',
        paddingRight: exports.TabsWidgetDimensions.tabLabelPadding,
        paddingLeft: exports.TabsWidgetDimensions.tabLabelPadding,
    };
};
exports.DefaultTabLabelStyles = tslib_1.__assign({ color: FontColors.PrimaryLight, width: '100%' }, TextEllipsis_1.TextEllipsis);
exports.TabContentStyle = {
    alignItems: 'center',
    display: 'flex',
    justifyContent: 'center'
};
exports.LabelStyle = tslib_1.__assign({ display: 'block' }, TextEllipsis_1.TextEllipsis);


/***/ }),

/***/ "./lib/src/widgets/TextAreaWidget.js":
/*!*******************************************!*\
  !*** ./lib/src/widgets/TextAreaWidget.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var TableauUI = __webpack_require__(/*! @tableau/tableau-ui */ "./node_modules/@tableau/tableau-ui/dist/tableau-ui.min.js");
var React = __webpack_require__(/*! react */ "react");
var Declarative_1 = __webpack_require__(/*! ../utils/Declarative */ "./lib/src/utils/Declarative.js");
/** A drop-in replacement for a TEXTAREA element with standard styling, accessible label and validation messages, and focus indication. */
exports.TextAreaWidget = React.forwardRef(function (props, ref) {
    var testId = props.testId, textAreaProps = tslib_1.__rest(props, ["testId"]);
    return React.createElement(TableauUI.TextArea, tslib_1.__assign({ "data-tb-test-id": Declarative_1.makeTestId(testId, 'TextArea') }, textAreaProps, { ref: ref }));
});
exports.TextAreaWidget.displayName = 'TextAreaWidget';


/***/ }),

/***/ "./lib/src/widgets/TextField/TextFieldBase.js":
/*!****************************************************!*\
  !*** ./lib/src/widgets/TextField/TextFieldBase.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var TextInputType;
(function (TextInputType) {
    TextInputType["Text"] = "text";
    TextInputType["Password"] = "password";
})(TextInputType = exports.TextInputType || (exports.TextInputType = {}));


/***/ }),

/***/ "./lib/src/widgets/TextField/TextFieldInputWidget.js":
/*!***********************************************************!*\
  !*** ./lib/src/widgets/TextField/TextFieldInputWidget.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
// tslint:disable:deprecation
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var BrowserDetection_1 = __webpack_require__(/*! ../../utils/BrowserDetection */ "./lib/src/utils/BrowserDetection.js");
var DomUtil_1 = __webpack_require__(/*! ../../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var InteractiveDom_1 = __webpack_require__(/*! ../../utils/InteractiveDom */ "./lib/src/utils/InteractiveDom.js");
var TextFieldBase_1 = __webpack_require__(/*! ./TextFieldBase */ "./lib/src/widgets/TextField/TextFieldBase.js");
var isMSFT = BrowserDetection_1.isIE || BrowserDetection_1.isEdge;
var inputClass = !isMSFT ? '' : TypeStyle.style({
    $nest: {
        '&:focus': { backgroundColor: 'transparent' },
        '&::-ms-clear': { $unique: true, display: 'none' } // This prevents IE from adding a clear button to text inputs
    }
});
var Style = Object.freeze({
    WebkitAppearance: 'none',
    boxSizing: 'border-box',
    fontFamily: 'inherit',
    width: '100%',
});
var TextFieldInputWidget = /** @class */ (function (_super) {
    tslib_1.__extends(TextFieldInputWidget, _super);
    function TextFieldInputWidget() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isComposing = false;
        _this.enterDown = false;
        _this.escDown = false;
        _this.handleBlur = function (e) {
            var _a, _b;
            _this.enterDown = false;
            _this.escDown = false;
            e.relatedTarget = DomUtil_1.findBlurRelatedTarget(e); // polyfill since React refuses to :(
            (_b = (_a = _this.props).handleBlur) === null || _b === void 0 ? void 0 : _b.call(_a, e);
        };
        _this.handleChange = function (e) {
            if (_this.props.disabled || !_this.props.handleChange) {
                return;
            }
            _this.props.handleChange(e.target.value, _this.isComposing);
        };
        _this.handleComposition = function (e) {
            if (e.type === 'compositionend') {
                _this.isComposing = false;
                _this.handleChange(e);
            }
            else {
                _this.isComposing = true;
            }
        };
        _this.handleFocus = function (e) {
            if (!_this.props.shouldSelectTextOnFocus || DomUtil_1.shouldIgnoreFocusEvent(e)) {
                return;
            }
            DomUtil_1.selectInputText(e.target);
        };
        _this.handleKeyDown = function (e) {
            if (_this.props.disabled || _this.isComposing) {
                return;
            }
            if (e.key === 'Enter' && _this.props.handleEnter) {
                _this.enterDown = true;
                return;
            }
            else if (e.key === 'Escape' && _this.props.handleEscape) {
                _this.escDown = true;
                return;
            }
            if (_this.props.onKeyDown) {
                _this.props.onKeyDown(e);
            }
        };
        _this.handleKeyUp = function (e) {
            if (_this.props.disabled || _this.isComposing) {
                return;
            }
            if (e.key === 'Enter' && _this.enterDown && _this.props.handleEnter) {
                _this.enterDown = false;
                _this.props.handleEnter();
            }
            else if (e.key === 'Escape' && _this.escDown && _this.props.handleEscape) {
                _this.escDown = false;
                _this.props.handleEscape();
            }
            else if (_this.props.onKeyUp) {
                _this.props.onKeyUp(e);
            }
        };
        return _this;
    }
    TextFieldInputWidget.prototype.render = function () {
        var _a = this.props, className = _a.className, containerStyle = _a.containerStyle, handleActive = _a.handleActive, handleBlur = _a.handleBlur, handleChange = _a.handleChange, handleEnter = _a.handleEnter, handleEscape = _a.handleEscape, handleFocus = _a.handleFocus, handleHover = _a.handleHover, inputRef = _a.inputRef, inputStyle = _a.inputStyle, interactiveStyles = _a.interactiveStyles, onDarkBackground = _a.onDarkBackground, placeholder = _a.placeholder, placeholderStyle = _a.placeholderStyle, pointerClick = _a.pointerClick, pointerDoubleClick = _a.pointerDoubleClick, pointerDown = _a.pointerDown, pointerUp = _a.pointerUp, shouldSelectTextOnFocus = _a.shouldSelectTextOnFocus, testId = _a.testId, text = _a.text, type = _a.type, inputProps = tslib_1.__rest(_a, ["className", "containerStyle", "handleActive", "handleBlur", "handleChange", "handleEnter", "handleEscape", "handleFocus", "handleHover", "inputRef", "inputStyle", "interactiveStyles", "onDarkBackground", "placeholder", "placeholderStyle", "pointerClick", "pointerDoubleClick", "pointerDown", "pointerUp", "shouldSelectTextOnFocus", "testId", "text", "type"]);
        return (React.createElement("input", tslib_1.__assign({}, inputProps, { className: [className, inputClass].join(' '), "data-tb-test-id": testId + '-TextInput', onBlur: this.handleBlur, onChange: this.handleChange, onCompositionEnd: this.handleComposition, onCompositionStart: this.handleComposition, onCompositionUpdate: this.handleComposition, onFocus: this.handleFocus, onKeyDown: this.handleKeyDown, onKeyUp: this.handleKeyUp, ref: inputRef, style: tslib_1.__assign(tslib_1.__assign({}, Style), inputStyle), type: type, value: text })));
    };
    TextFieldInputWidget.defaultProps = {
        shouldSelectTextOnFocus: true,
        text: '',
        type: TextFieldBase_1.TextInputType.Text,
    };
    TextFieldInputWidget = tslib_1.__decorate([
        InteractiveDom_1.InteractiveDomHoCDecorator
    ], TextFieldInputWidget);
    return TextFieldInputWidget;
}(React.Component));
exports.TextFieldInputWidget = TextFieldInputWidget;


/***/ }),

/***/ "./lib/src/widgets/TextField/TextFieldWidget.js":
/*!******************************************************!*\
  !*** ./lib/src/widgets/TextField/TextFieldWidget.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var tableau_ui_1 = __webpack_require__(/*! @tableau/tableau-ui */ "./node_modules/@tableau/tableau-ui/dist/tableau-ui.min.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var Localize_1 = __webpack_require__(/*! ../../../gen-src/Localize */ "./lib/gen-src/Localize.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var DomUtil_1 = __webpack_require__(/*! ../../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var ReactHelpers_1 = __webpack_require__(/*! ../../utils/ReactHelpers */ "./lib/src/utils/ReactHelpers.js");
/** A drop-in replacement for an INPUT element with standard styling, accessible label and validation messages, and focus indication. */
exports.TextFieldWidget = React.forwardRef(function (props, ref) {
    var className = props.className, onBlur = props.onBlur, onChange = props.onChange, selectOnFocus = props.selectOnFocus, testId = props.testId, fieldProps = tslib_1.__rest(props, ["className", "onBlur", "onChange", "selectOnFocus", "testId"]);
    var isComposing = React.useRef(false);
    var StyleName = TypeStyle.style({
        $nest: {
            '&.required label::after': {
                content: "\"" + Localize_1.Messages.required() + "\"",
                marginLeft: 4,
            },
            '&.required.invalid label::after': {
                color: '#c93a47',
                fontWeight: 'bold',
            },
            '&.optional label::after': {
                content: "\"" + Localize_1.Messages.optional() + "\"",
                marginLeft: 4,
            }
        }
    });
    return React.createElement(tableau_ui_1.TextField, tslib_1.__assign({}, ReactHelpers_1.EventUtilsOptOut, { "data-tb-test-id": Declarative_1.makeTestId(testId, 'TextInput') }, fieldProps, { className: TypeStyle.classes(className, StyleName, {
            required: fieldProps.required === true,
            optional: fieldProps.required === false,
        }), onBlur: onBlur && (function (e) {
            e.relatedTarget = DomUtil_1.findBlurRelatedTarget(e); // polyfill for IE11
            onBlur(e);
        }), onChange: onChange && (function (e) { return onChange(tslib_1.__assign(tslib_1.__assign({}, e), { isComposing: isComposing.current })); }), onCompositionEnd: ReactHelpers_1.mergeEventHandlers(function (e) {
            var _a;
            isComposing.current = false;
            (_a = onChange) === null || _a === void 0 ? void 0 : _a(tslib_1.__assign(tslib_1.__assign({}, e), { isComposing: false }));
        }, props.onCompositionEnd), onCompositionStart: ReactHelpers_1.mergeEventHandlers(function () { return isComposing.current = true; }, props.onCompositionStart), onFocus: function (e) {
            var _a, _b;
            if (DomUtil_1.shouldIgnoreFocusEvent(e)) {
                return;
            }
            if (selectOnFocus) {
                DomUtil_1.selectInputText(e.target);
            }
            (_b = (_a = props).onFocus) === null || _b === void 0 ? void 0 : _b.call(_a, e);
        }, ref: ref }));
});
exports.TextFieldWidget.displayName = 'TextFieldWidget';
exports.TextFieldWidget.defaultProps = { kind: 'outline' };


/***/ }),

/***/ "./lib/src/widgets/TextField/TextFieldWidgetShims.js":
/*!***********************************************************!*\
  !*** ./lib/src/widgets/TextField/TextFieldWidgetShims.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
// tslint:disable:deprecation
var TableauUI = __webpack_require__(/*! @tableau/tableau-ui */ "./node_modules/@tableau/tableau-ui/dist/tableau-ui.min.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var Declarative_1 = __webpack_require__(/*! ../../utils/Declarative */ "./lib/src/utils/Declarative.js");
var DomUtil_1 = __webpack_require__(/*! ../../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var Unicode_1 = __webpack_require__(/*! ../../utils/Unicode */ "./lib/src/utils/Unicode.js");
var TextFieldBase_1 = __webpack_require__(/*! ./TextFieldBase */ "./lib/src/widgets/TextField/TextFieldBase.js");
exports.TextInputType = TextFieldBase_1.TextInputType;
var TextFieldWidget_1 = __webpack_require__(/*! ./TextFieldWidget */ "./lib/src/widgets/TextField/TextFieldWidget.js");
var ShimStyleName = TypeStyle.style({
    display: 'block',
    $nest: {
        '& input': { width: '100%' }
    }
});
var getLabelStyleName = function (labelStyle) { return TypeStyle.style({
    $nest: {
        '& label': labelStyle
    }
}); };
var getMessageStyleName = function (messageStyle) { return TypeStyle.style({
    $nest: {
        '& .message': messageStyle
    }
}); };
function handleFocus(e) {
    DomUtil_1.selectInputText(e.target);
}
var LegacyTextFieldShim = /** @class */ (function (_super) {
    tslib_1.__extends(LegacyTextFieldShim, _super);
    function LegacyTextFieldShim() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isComposing = false;
        _this.enterDown = false;
        _this.escDown = false;
        _this.handleBlur = function (e) {
            var _a, _b;
            _this.enterDown = false;
            _this.escDown = false;
            e.relatedTarget = DomUtil_1.findBlurRelatedTarget(e); // polyfill for IE11
            (_b = (_a = _this.props).handleBlur) === null || _b === void 0 ? void 0 : _b.call(_a, e);
        };
        _this.handleChange = function (e) {
            if (_this.props.disabled || !_this.props.handleChange) {
                return;
            }
            _this.isComposing = e.isComposing;
            _this.props.handleChange(e.target.value, _this.isComposing);
        };
        _this.handleKeyDown = function (e) {
            if (_this.props.disabled || _this.isComposing) {
                return;
            }
            if (e.key === 'Enter' && _this.props.handleEnter) {
                _this.enterDown = true;
            }
            else if (e.key === 'Escape' && _this.props.handleEscape) {
                _this.escDown = true;
            }
            else if (_this.props.onKeyDown) {
                _this.props.onKeyDown(e);
            }
        };
        _this.handleKeyUp = function (e) {
            if (_this.props.disabled || _this.isComposing) {
                return;
            }
            if (e.key === 'Enter' && _this.props.handleEnter && _this.enterDown) {
                _this.enterDown = false;
                _this.props.handleEnter();
            }
            else if (e.key === 'Escape' && _this.props.handleEscape && _this.escDown) {
                _this.escDown = false;
                _this.props.handleEscape();
            }
            else if (_this.props.onKeyUp) {
                _this.props.onKeyUp(e);
            }
        };
        return _this;
    }
    LegacyTextFieldShim.prototype.render = function () {
        var _a = this.props, className = _a.className, containerStyle = _a.containerStyle, handleBlur = _a.handleBlur, handleChange = _a.handleChange, handleEnter = _a.handleEnter, handleEscape = _a.handleEscape, inputRef = _a.inputRef, inputStyle = _a.inputStyle, onDarkBackground = _a.onDarkBackground, placeholderStyle = _a.placeholderStyle, shouldSelectTextOnFocus = _a.shouldSelectTextOnFocus, text = _a.text, type = _a.type, textFieldProps = tslib_1.__rest(_a, ["className", "containerStyle", "handleBlur", "handleChange", "handleEnter", "handleEscape", "inputRef", "inputStyle", "onDarkBackground", "placeholderStyle", "shouldSelectTextOnFocus", "text", "type"]);
        if (placeholderStyle) {
            // intentionally ignored in the new world, native placeholder doesn't need this
        }
        return (React.createElement(TextFieldWidget_1.TextFieldWidget, tslib_1.__assign({}, textFieldProps, { className: TypeStyle.classes(className, ShimStyleName, TypeStyle.style(containerStyle), onDarkBackground && 'dark'), onBlur: this.handleBlur, onChange: this.handleChange, onFocus: shouldSelectTextOnFocus ? handleFocus : undefined, onKeyDown: this.handleKeyDown, onKeyUp: this.handleKeyUp, ref: inputRef, style: inputStyle, type: type, value: text })));
    };
    LegacyTextFieldShim.defaultProps = Object.freeze({
        shouldSelectTextOnFocus: true,
        text: '',
        type: TextFieldBase_1.TextInputType.Text,
    });
    LegacyTextFieldShim.displayName = 'LegacyTextFieldShim';
    return LegacyTextFieldShim;
}(React.Component));
exports.LegacyTextFieldShim = LegacyTextFieldShim;
/** @deprecated use `TextFieldWidget` with `kind='line'` */
exports.LineTextFieldWidget = function (props) {
    var errorText = props.errorText, hideErrorDiv = props.hideErrorDiv, floatingLabel = props.floatingLabel, floatingLabelStyle = props.floatingLabelStyle, textFieldBaseProps = tslib_1.__rest(props, ["errorText", "hideErrorDiv", "floatingLabel", "floatingLabelStyle"]);
    return (React.createElement(LegacyTextFieldShim
    // this is not WCAG-compliant but it's what the old widget did
    , tslib_1.__assign({}, (hideErrorDiv && { 'aria-errormessage': undefined, 'aria-describedby': undefined }), textFieldBaseProps, { className: TypeStyle.classes(floatingLabelStyle && getLabelStyleName(floatingLabelStyle), hideErrorDiv && getMessageStyleName({ display: 'none' })), kind: 'line', message: hideErrorDiv ? undefined : (errorText || Unicode_1.Unicode.ZeroWidthSpace), label: floatingLabel, valid: (!hideErrorDiv && !!errorText) ? false : undefined })));
};
// tslint:disable-next-line:deprecation
exports.LineTextFieldWidget.displayName = 'LineTextFieldWidget';
/** @deprecated use `TextFieldWidget` with `kind='outline'` */
exports.OutlineTextFieldWidget = function (props) {
    var displayErrorTextSection = props.displayErrorTextSection, errorText = props.errorText, handleClearText = props.handleClearText, hasError = props.hasError, textFieldBaseProps = tslib_1.__rest(props, ["displayErrorTextSection", "errorText", "handleClearText", "hasError"]);
    return (React.createElement(LegacyTextFieldShim
    // this is not WCAG-compliant but it's what the old widget did
    , tslib_1.__assign({}, (!displayErrorTextSection && { 'aria-errormessage': undefined, 'aria-describedby': undefined }), textFieldBaseProps, { className: TypeStyle.classes(!displayErrorTextSection && getMessageStyleName({ display: 'none' })), kind: 'outline', label: null, message: hasError ? errorText : Unicode_1.Unicode.ZeroWidthSpace, onClear: handleClearText, valid: hasError ? false : undefined })));
};
// tslint:disable-next-line:deprecation
exports.OutlineTextFieldWidget.displayName = 'OutlineTextFieldWidget';
/** @deprecated use `TextFieldWidget` with `kind='search'` */
exports.SearchFieldWidget = function (props) {
    var handleCancelSearch = props.handleCancelSearch, textFieldBaseProps = tslib_1.__rest(props, ["handleCancelSearch"]);
    return (React.createElement(LegacyTextFieldShim
    // this is not WCAG-compliant but it's what the old widget did
    , tslib_1.__assign({ "aria-errormessage": undefined, "aria-describedby": undefined }, textFieldBaseProps, { kind: 'search', label: null, onClear: handleCancelSearch })));
};
// tslint:disable-next-line:deprecation
exports.SearchFieldWidget.displayName = 'SearchFieldWidget';
exports.IntegerStepperWidget = function (props) {
    // tslint:disable-next-line:max-line-length
    var containerStyle = props.containerStyle, delta = props.delta, handleBlur = props.handleBlur, inputStyle = props.inputStyle, labelStyle = props.labelStyle, onDarkBackground = props.onDarkBackground, onValueUpdated = props.onValueUpdated, pageDelta = props.pageDelta, shouldSelectTextOnFocus = props.shouldSelectTextOnFocus, start = props.start, testId = props.testId, htmlProps = tslib_1.__rest(props, ["containerStyle", "delta", "handleBlur", "inputStyle", "labelStyle", "onDarkBackground", "onValueUpdated", "pageDelta", "shouldSelectTextOnFocus", "start", "testId"]);
    var _a = React.useState(start), value = _a[0], setValue = _a[1];
    // TFS 969470 -- reset the value if `props.start` changes
    React.useEffect(function () { return setValue(props.start); }, [props.start]);
    return React.createElement(TableauUI.Stepper, tslib_1.__assign({}, htmlProps, { className: TypeStyle.classes(TypeStyle.style(containerStyle), labelStyle && getLabelStyleName(labelStyle), onDarkBackground && 'dark'), "data-tb-test-id": Declarative_1.makeTestId(testId, 'IntegerStepperWidget', 'TextInput'), floatingPoint: false, onBlur: handleBlur, onFocus: shouldSelectTextOnFocus ? handleFocus : undefined, onValueChange: function (newValue) {
            var _a;
            setValue(newValue);
            (_a = onValueUpdated) === null || _a === void 0 ? void 0 : _a(newValue);
        }, pageSteps: pageDelta / delta, step: delta, style: inputStyle, value: value }));
};
exports.IntegerStepperWidget.defaultProps = { delta: 1, pageDelta: 1, shouldSelectTextOnFocus: true };
exports.IntegerStepperWidget.displayName = 'IntegerStepperWidget';


/***/ }),

/***/ "./lib/src/widgets/TextLinkWidget.js":
/*!*******************************************!*\
  !*** ./lib/src/widgets/TextLinkWidget.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var tableau_ui_1 = __webpack_require__(/*! @tableau/tableau-ui */ "./node_modules/@tableau/tableau-ui/dist/tableau-ui.min.js");
var React = __webpack_require__(/*! react */ "react");
var Declarative_1 = __webpack_require__(/*! ../utils/Declarative */ "./lib/src/utils/Declarative.js");
var TextLinkKind;
(function (TextLinkKind) {
    /** For inline links - To be used on light colored backgrounds */
    TextLinkKind["Standard"] = "standard";
    /** For stand-alone links - To be used on light colored backgrounds */
    TextLinkKind["LowEmphasis"] = "lowEmphasis";
    /** For inline links - To be used on dark colored backgrounds */
    TextLinkKind["StandardDark"] = "standard-dark";
    /** For stand-alone links - To be used on dark colored backgrounds */
    TextLinkKind["LowEmphasisDark"] = "lowEmphasis-dark";
})(TextLinkKind = exports.TextLinkKind || (exports.TextLinkKind = {}));
exports.TextLinkWidget = React.forwardRef(function (props, ref) {
    var testIdProp = props.testId, htmlProps = tslib_1.__rest(props, ["testId"]);
    return React.createElement(tableau_ui_1.TextLink, tslib_1.__assign({ "data-tb-test-id": Declarative_1.makeTestId(testIdProp, 'TextLink') }, htmlProps, { ref: ref }));
});
exports.TextLinkWidget.displayName = 'TextLinkWidget';


/***/ }),

/***/ "./lib/src/widgets/ToastWidget.js":
/*!****************************************!*\
  !*** ./lib/src/widgets/ToastWidget.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var _a;
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var TypeStyle = __webpack_require__(/*! typestyle */ "./node_modules/typestyle/lib.es2015/index.js");
var Localize_1 = __webpack_require__(/*! ../../gen-src/Localize */ "./lib/gen-src/Localize.js");
var TabStyles_1 = __webpack_require__(/*! ../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var Declarative_1 = __webpack_require__(/*! ../utils/Declarative */ "./lib/src/utils/Declarative.js");
var StackingComponent_1 = __webpack_require__(/*! ../utils/StackingComponent */ "./lib/src/utils/StackingComponent.js");
var CloseButtonWidget_1 = __webpack_require__(/*! ./Button/CloseButtonWidget */ "./lib/src/widgets/Button/CloseButtonWidget.js");
var TextLinkWidget_1 = __webpack_require__(/*! ./TextLinkWidget */ "./lib/src/widgets/TextLinkWidget.js");
var ToastType;
(function (ToastType) {
    ToastType["Error"] = "error";
    ToastType["Warning"] = "warning";
    ToastType["Success"] = "success";
    ToastType["Info"] = "info";
})(ToastType = exports.ToastType || (exports.ToastType = {}));
var toastBackgroundColors = (_a = {},
    _a[ToastType.Error] = {
        backgroundColor: 'rgb(248,199,203)',
    },
    _a[ToastType.Warning] = {
        backgroundColor: 'rgb(255,214,187)',
    },
    _a[ToastType.Info] = {
        backgroundColor: 'rgb(215,236,249)',
    },
    _a[ToastType.Success] = {
        backgroundColor: 'rgb(172,229,200)',
    },
    _a);
exports.ToastHeight = 42;
exports.ToastMaxWidth = 800;
exports.ToastSpacing = 8;
var FontSize = TabStyles_1.TabStyles.Typography.Sizing.Default;
var LineHeight = 1.5 * FontSize;
var toastStyles = {
    positioningDiv: {
        display: 'flex',
        justifyContent: 'center',
        left: 0,
        position: 'fixed',
        right: 0,
        top: 0,
        visibility: 'hidden',
    },
    toastDiv: {
        alignItems: 'flex-start',
        boxShadow: TabStyles_1.TabStyles.Shadow.Standard,
        boxSizing: 'border-box',
        color: '#333',
        display: 'flex',
        flexDirection: 'row',
        fontSize: FontSize,
        minHeight: exports.ToastHeight,
        justifyContent: 'flex-start',
        padding: exports.ToastSpacing * 1.5 + "px " + exports.ToastSpacing * 3 + "px",
        position: 'relative',
        transitionProperty: 'transform, opacity',
        visibility: 'visible',
    },
    contentDiv: {
        display: 'flex',
        lineHeight: LineHeight + "px",
    },
    messageContainer: {
        display: 'flex',
        flexWrap: 'wrap',
        marginBottom: -exports.ToastSpacing,
    },
    message: {
        margin: "0 " + exports.ToastSpacing + "px",
        marginBottom: exports.ToastSpacing,
    },
    actionContainer: {
        marginBottom: exports.ToastSpacing,
    },
    actionLink: {
        marginLeft: exports.ToastSpacing - 1,
    },
    closeButton: {
        cursor: 'pointer',
        margin: 0,
        marginLeft: exports.ToastSpacing * 2,
        minHeight: LineHeight,
        minWidth: LineHeight,
    },
};
var actionLinkStyleOverrideClass = TypeStyle.style({
    $nest: {
        '&&': {
            color: '#333',
            $nest: {
                '&:hover': {
                    color: '#333',
                },
                '&:active': {
                    color: '#000',
                },
            },
        },
    },
});
function prefixForToastType(toastType) {
    // tslint:disable-next-line:no-any
    return React.createElement("b", null, Localize_1.Messages[toastType + 'ToastPrefix']());
}
var ToastWidget = /** @class */ (function (_super) {
    tslib_1.__extends(ToastWidget, _super);
    function ToastWidget(props) {
        var _this = _super.call(this, props) || this;
        _this.autoDismissTimerId = -1;
        _this.fadeOutTimerId = -1;
        _this.isFading = false;
        _this.dismissTimerElapsed = false;
        _this.handleClick = function (e) {
            e.preventDefault();
            if (_this.props.onAction) {
                _this.props.onAction();
            }
        };
        _this.renderCloseButton = function () {
            return React.createElement(CloseButtonWidget_1.CloseButtonWidget, { className: 'prominent', "data-tb-test-id": 'toast-close-Button', onClick: _this.fadeOut, style: toastStyles.closeButton, testId: null });
        };
        _this.handleTimerElapsed = function () {
            _this.dismissTimerElapsed = true;
            _this.fadeOut();
        };
        _this.fadeOut = function () {
            var fadeTime = _this.shouldAutoDismiss() && _this.dismissTimerElapsed ? ToastWidget.AutodimissCloseFadeTransitionTimeMS
                : ToastWidget.FadeTransitionTimeMS;
            _this.setState({
                yPosition: -exports.ToastHeight,
                fadeOpacity: 0,
                fadeTransitionTime: fadeTime,
            });
            _this.isFading = true;
            _this.fadeOutTimerId = window.setTimeout(_this.onClose, fadeTime);
        };
        _this.handleMouseOver = function () {
            if (_this.shouldAutoDismiss() && !_this.isFading) {
                _this.dismissTimerElapsed = false;
                _this.setState({ fadeOpacity: 1, fadeTransitionTime: ToastWidget.HoverRestoreFadeTransitionTimeMS });
                _this.clearTimeouts();
            }
        };
        _this.handleMouseOut = function () {
            if (_this.shouldAutoDismiss() && !_this.isFading && _this.state.fadeOpacity === 1) {
                _this.autoDismissTimerId = window.setTimeout(_this.handleTimerElapsed, _this.props.autoDismissTimeMS);
            }
        };
        _this.onClose = function () {
            _this.isFading = false;
            _this.dismissTimerElapsed = false;
            _this.clearTimeouts();
            _this.props.onCloseRequest();
        };
        _this.state = {
            fadeOpacity: 0,
            fadeTransitionTime: ToastWidget.FadeTransitionTimeMS,
            yPosition: -exports.ToastHeight,
        };
        return _this;
    }
    ToastWidget.prototype.componentDidMount = function () {
        var _this = this;
        // timeout is necessary to make sure that DOM has been updated with opacity 0 from initial state.
        setTimeout(function () {
            _this.setState({
                fadeOpacity: 1,
                fadeTransitionTime: ToastWidget.FadeTransitionTimeMS,
                yPosition: 0,
            });
        }, 0);
        if (this.shouldAutoDismiss()) {
            this.autoDismissTimerId = window.setTimeout(this.handleTimerElapsed, this.props.autoDismissTimeMS);
        }
    };
    ToastWidget.prototype.componentWillUnmount = function () {
        this.clearTimeouts();
    };
    ToastWidget.prototype.shouldAutoDismiss = function () {
        if (this.props.toastType === ToastType.Error || this.props.toastType === ToastType.Warning ||
            this.props.actionMessage || this.props.onAction) {
            return false;
        }
        return !!this.props.autoDismiss;
    };
    ToastWidget.prototype.renderActionLink = function () {
        if (!this.props.actionMessage || this.props.actionMessage.length === 0) {
            return null;
        }
        return (React.createElement(TextLinkWidget_1.TextLinkWidget, { className: actionLinkStyleOverrideClass, href: this.props.actionHref, kind: TextLinkWidget_1.TextLinkKind.LowEmphasis, onClick: this.handleClick, style: toastStyles.actionLink, testId: this.props.testId }, this.props.actionMessage));
    };
    ToastWidget.prototype.fadeStyle = function () {
        return {
            opacity: this.state.fadeOpacity,
            transform: "translateY(" + this.state.yPosition + "px)",
            transitionDuration: this.state.fadeTransitionTime + "ms, " + (this.state.fadeTransitionTime + 100) + "ms",
            transitionTimingFunction: 'ease-out',
        };
    };
    ToastWidget.prototype.clearTimeouts = function () {
        clearTimeout(this.autoDismissTimerId);
        clearTimeout(this.fadeOutTimerId);
    };
    ToastWidget.prototype.render = function () {
        var toastStyle = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({ left: this.props.topLeftXPx, top: this.props.topLeftYPx }, toastStyles.toastDiv), toastBackgroundColors[this.props.toastType]), this.fadeStyle());
        var toastAttributes = {
            'data-tb-test-id': Declarative_1.makeTestId(this.props.testId, ToastWidget.ToastDivId),
            onMouseOver: this.handleMouseOver,
            onMouseOut: this.handleMouseOut,
        };
        var contentProps = {
            'data-tb-test-id': Declarative_1.makeTestId(this.props.testId, ToastWidget.ToastContentId),
        };
        var messageProps = {
            'data-tb-test-id': Declarative_1.makeTestId(this.props.testId, ToastWidget.ToastMessageId),
        };
        var stackingComponentProps = {
            // tslint:disable-next-line:deprecation
            stackingRootId: this.props.stackingRootId,
            wrapperTestId: this.props.testId,
            zIndex: this.props.zIndex
        };
        var positioningStyle = tslib_1.__assign(tslib_1.__assign({}, toastStyles.positioningDiv), Declarative_1.conditional(!!this.props.topLeftXPx, { justifyContent: undefined }));
        var centeringStyle = {
            maxWidth: exports.ToastMaxWidth
        };
        var prefix = prefixForToastType(this.props.toastType);
        return (React.createElement(StackingComponent_1.StackingComponentWrapper, tslib_1.__assign({}, stackingComponentProps),
            React.createElement("div", { style: positioningStyle },
                React.createElement("div", { style: centeringStyle },
                    React.createElement("div", tslib_1.__assign({ style: toastStyle }, toastAttributes),
                        React.createElement("div", tslib_1.__assign({ style: toastStyles.contentDiv }, contentProps),
                            prefix,
                            React.createElement("div", { style: toastStyles.messageContainer },
                                React.createElement("div", tslib_1.__assign({ style: toastStyles.message, role: 'alert' }, messageProps),
                                    React.createElement("span", { style: { position: 'absolute', color: 'transparent' } }, prefix),
                                    this.props.message,
                                    this.props.children),
                                React.createElement("div", { style: toastStyles.actionContainer }, this.renderActionLink()))),
                        this.renderCloseButton())))));
    };
    ToastWidget.ToastDivId = 'toast-widget';
    ToastWidget.ToastContentId = 'toast-content';
    ToastWidget.ToastMessageId = 'toast-message';
    ToastWidget.FadeTransitionTimeMS = 300;
    ToastWidget.AutodimissCloseFadeTransitionTimeMS = 1000;
    ToastWidget.HoverRestoreFadeTransitionTimeMS = 30;
    ToastWidget.DefaultAutoDissmissTimeMS = 5000;
    ToastWidget.defaultProps = {
        actionHref: 'javascript:void(0)',
        autoDismiss: true,
        autoDismissTimeMS: ToastWidget.DefaultAutoDissmissTimeMS,
    };
    return ToastWidget;
}(React.Component));
exports.ToastWidget = ToastWidget;


/***/ }),

/***/ "./lib/src/widgets/ToggleTextWidget.js":
/*!*********************************************!*\
  !*** ./lib/src/widgets/ToggleTextWidget.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var FocusIndicators_1 = __webpack_require__(/*! ../styles/FocusIndicators */ "./lib/src/styles/FocusIndicators.js");
var PreventUserSelect_1 = __webpack_require__(/*! ../styles/PreventUserSelect */ "./lib/src/styles/PreventUserSelect.js");
var TabStyles_1 = __webpack_require__(/*! ../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var SwitcherTextBase_1 = __webpack_require__(/*! ./SwitcherTextBase */ "./lib/src/widgets/SwitcherTextBase.js");
var SelectedToggle;
(function (SelectedToggle) {
    SelectedToggle[SelectedToggle["Left"] = 0] = "Left";
    SelectedToggle[SelectedToggle["Right"] = 1] = "Right";
})(SelectedToggle = exports.SelectedToggle || (exports.SelectedToggle = {}));
exports.SwitcherStyles = {
    container: {
        display: 'flex'
    },
    toggleBase: tslib_1.__assign(tslib_1.__assign({}, PreventUserSelect_1.PreventUserSelect), { alignItems: 'center', borderStyle: 'solid', borderWidth: TabStyles_1.TabStyles.Sizing.BorderWidth, display: 'flex', flexBasis: '100%', justifyContent: 'center', lineHeight: (TabStyles_1.TabStyles.Sizing.RowHeight - TabStyles_1.TabStyles.Sizing.BorderWidth * 2) + 'px', paddingLeft: TabStyles_1.TabStyles.Spacing.MediumSpace, paddingRight: TabStyles_1.TabStyles.Spacing.MediumSpace }),
    selectedToggle: {
        backgroundColor: TabStyles_1.TabStyles.Colors.F8,
        borderColor: TabStyles_1.TabStyles.Colors.F8,
        color: TabStyles_1.TabStyles.Typography.Color.InvertedPrimary,
    },
    unselectedToggle: {
        backgroundColor: TabStyles_1.TabStyles.Colors.F1,
        borderColor: TabStyles_1.TabStyles.Colors.L6,
        color: TabStyles_1.TabStyles.Typography.Color.Primary,
    },
    hoverSelectedToggle: {
        borderColor: TabStyles_1.TabStyles.Colors.L9
    },
    hoverUnselectedToggle: {
        borderColor: TabStyles_1.TabStyles.Colors.L9
    },
    focusSelectedToggle: {
        borderColor: FocusIndicators_1.DefaultFocusIndicator.borderColor,
        boxShadow: FocusIndicators_1.DefaultFocusIndicator.boxShadow,
        position: 'relative',
    },
    focusUnselectedToggle: {
        borderColor: FocusIndicators_1.DefaultFocusIndicator.borderColor,
        boxShadow: FocusIndicators_1.DefaultFocusIndicator.boxShadow,
        position: 'relative',
    },
    activeSelectedToggle: {
        backgroundColor: TabStyles_1.TabStyles.Colors.F8,
        borderColor: TabStyles_1.TabStyles.Colors.L9,
        color: TabStyles_1.TabStyles.Typography.Color.InvertedPrimary,
    },
    activeUnselectedToggle: {
        backgroundColor: TabStyles_1.TabStyles.Colors.F8,
        borderColor: TabStyles_1.TabStyles.Colors.L9,
        color: TabStyles_1.TabStyles.Typography.Color.InvertedPrimary,
    },
    inactiveToggle: {
        backgroundColor: TabStyles_1.TabStyles.Colors.F1,
        borderColor: TabStyles_1.TabStyles.Colors.L6,
        color: TabStyles_1.TabStyles.Typography.Color.Primary,
    },
    disabledSelectedToggle: {
        backgroundColor: '#bfbfbf',
        borderColor: '#bfbfbf',
        color: '#fafafa',
    },
    disabledUnselectedToggle: {
        borderColor: '#bfbfbf',
        color: '#bfbfbf',
    },
    firstToggle: {
        borderBottomLeftRadius: TabStyles_1.TabStyles.Sizing.BorderRadius,
        borderTopLeftRadius: TabStyles_1.TabStyles.Sizing.BorderRadius,
    },
    lastToggle: {
        borderBottomRightRadius: TabStyles_1.TabStyles.Sizing.BorderRadius,
        borderTopRightRadius: TabStyles_1.TabStyles.Sizing.BorderRadius,
    }
};
var ToggleTextWidget = /** @class */ (function (_super) {
    tslib_1.__extends(ToggleTextWidget, _super);
    function ToggleTextWidget() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleChange = function (idx) {
            if (idx === 1) {
                _this.props.handleRightToggleSelected();
            }
            else {
                _this.props.handleLeftToggleSelected();
            }
        };
        return _this;
    }
    ToggleTextWidget.prototype.render = function () {
        return (React.createElement(SwitcherTextBase_1.SwitcherTextBase, { ariaLabel: this.props.ariaLabel, checkedIndex: this.props.selectedToggle === SelectedToggle.Right ? 1 : 0, disabled: this.props.disabled, handleChange: this.handleChange, name: this.props.name, style: tslib_1.__assign(tslib_1.__assign({}, exports.SwitcherStyles), { container: tslib_1.__assign(tslib_1.__assign({}, exports.SwitcherStyles.container), this.props.containerStyle) }), testId: this.props.testId, toggleTexts: [this.props.leftToggleText, this.props.rightToggleText] }));
    };
    return ToggleTextWidget;
}(React.Component));
exports.ToggleTextWidget = ToggleTextWidget;


/***/ }),

/***/ "./lib/src/widgets/Tooltip/Tooltip.js":
/*!********************************************!*\
  !*** ./lib/src/widgets/Tooltip/Tooltip.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var React = __webpack_require__(/*! react */ "react");
var Icons_1 = __webpack_require__(/*! ../../icons/Icons */ "./lib/src/icons/Icons.js");
var DomUtil_1 = __webpack_require__(/*! ../../utils/DomUtil */ "./lib/src/utils/DomUtil.js");
var Overlay_1 = __webpack_require__(/*! ../../utils/Overlay */ "./lib/src/utils/Overlay.js");
var ReactHelpers_1 = __webpack_require__(/*! ../../utils/ReactHelpers */ "./lib/src/utils/ReactHelpers.js");
// tslint:disable-next-line:max-line-length
var TooltipConsts_1 = __webpack_require__(/*! ./TooltipConsts */ "./lib/src/widgets/Tooltip/TooltipConsts.js");
exports.TooltipPosition = TooltipConsts_1.TooltipPosition;
function isFocusEvent(e) {
    return e.type === 'focus';
}
// tslint:disable-next-line:max-line-length
var DefaultTriggerElement = React.createElement("img", { draggable: false, src: Icons_1.encodeSvg("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\"><path fill=\"#666\" fill-rule=\"evenodd\" d=\"M8.5 1C12.6 1 16 4.4 16 8.5S12.6 16 8.5 16 1 12.6 1 8.5 4.4 1 8.5 1zm0 1C4.9 2 2 4.9 2 8.5S4.9 15 8.5 15 15 12.1 15 8.5 12.1 2 8.5 2zM9 7v5H8V7h1zm0-2v1H8V5h1z\"/></svg>") });
/**
 * Wrapper which displays a popup when the child element receives focus or is hovered.
 *
 * **NOTE**: this component is for static tooltip content only. It is not WCAG-compliant to put interactive content
 * inside the tooltip.
 *
 * @example
 *  <Tooltip getContent={() => <span>Some interesting info</span>}>
 *    <span>Hover here for more info</span>
 *  </Tooltip>
 */
var Tooltip = /** @class */ (function (_super) {
    tslib_1.__extends(Tooltip, _super);
    function Tooltip() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tooltipId = DomUtil_1.generateId();
        _this.tooltipContentElement = null;
        _this.waitingOnGetContent = false;
        _this.state = {
            anchorClientRect: undefined,
            content: undefined,
            width: undefined,
        };
        _this.handleTooltipOverlayContentRef = function (element) {
            _this.tooltipContentElement = element ? element.firstElementChild : null;
        };
        _this.handleFocus = ReactHelpers_1.mergeEventHandlers(function (e) {
            _this.showTooltipOverlay(e);
        }, function (e) { var _a, _b, _c; return (_c = (_a = _this.props.children) === null || _a === void 0 ? void 0 : (_b = _a.props).onFocus) === null || _c === void 0 ? void 0 : _c.call(_b, e); });
        _this.handleBlur = ReactHelpers_1.mergeEventHandlers(function (e) {
            _this.dismissTooltipOverlay();
        }, function (e) { var _a, _b, _c; return (_c = (_a = _this.props.children) === null || _a === void 0 ? void 0 : (_b = _a.props).onBlur) === null || _c === void 0 ? void 0 : _c.call(_b, e); });
        _this.handleKeyUp = ReactHelpers_1.mergeEventHandlers(function (e) {
            if (_this.state.content && _this.state.anchorClientRect && e.key === 'Escape') {
                e.preventDefault();
                e.stopPropagation();
                _this.dismissTooltipOverlay();
            }
        }, function (e) { var _a, _b, _c; return (_c = (_a = _this.props.children) === null || _a === void 0 ? void 0 : (_b = _a.props).onKeyUp) === null || _c === void 0 ? void 0 : _c.call(_b, e); });
        _this.handleMouseEnter = ReactHelpers_1.mergeEventHandlers(function (e) {
            _this.showTooltipOverlay(e);
        }, function (e) { var _a, _b, _c; return (_c = (_a = _this.props.children) === null || _a === void 0 ? void 0 : (_b = _a.props).onMouseEnter) === null || _c === void 0 ? void 0 : _c.call(_b, e); });
        _this.handleMouseMove = ReactHelpers_1.mergeEventHandlers(function (e) {
            if (_this.state.content && _this.state.anchorClientRect && !_this.props.followCursor) {
                return;
            }
            _this.showTooltipOverlay(e);
        }, function (e) { var _a, _b, _c; return (_c = (_a = _this.props.children) === null || _a === void 0 ? void 0 : (_b = _a.props).onMouseMove) === null || _c === void 0 ? void 0 : _c.call(_b, e); });
        _this.handleMouseLeave = ReactHelpers_1.mergeEventHandlers(function (e) {
            _this.dismissTooltipOverlay();
        }, function (e) { var _a, _b, _c; return (_c = (_a = _this.props.children) === null || _a === void 0 ? void 0 : (_b = _a.props).onMouseLeave) === null || _c === void 0 ? void 0 : _c.call(_b, e); });
        _this.showTooltipOverlay = function (e) {
            var _a, _b;
            if (_this.props.onlyShowWhenClipped && !DomUtil_1.isElementOverflownX(e.currentTarget)) {
                return;
            }
            _this.setState({ anchorClientRect: _this.getAnchorClientRectFromEvent(e) });
            if (_this.state.content || _this.waitingOnGetContent) {
                return;
            }
            _this.waitingOnGetContent = true;
            var setContent = function (newContent) {
                if (_this.waitingOnGetContent) {
                    Tooltip.dismissDisplayedTooltip();
                    Tooltip.displayedTooltip = { dismiss: _this.dismissTooltipOverlay, id: _this.tooltipId };
                    _this.setState({ content: newContent }, function () { _this.waitingOnGetContent = false; });
                }
            };
            var content = (_b = (_a = _this.props).getContent) === null || _b === void 0 ? void 0 : _b.call(_a);
            if (!content) {
                _this.dismissTooltipOverlay();
            }
            else if (Promise.resolve(content) === content) {
                content
                    .then(setContent)
                    .catch(function (error) {
                    console.warn({ message: "'getContent' promise rejected", error: error });
                    _this.setState({ anchorClientRect: undefined, content: undefined, width: undefined }, function () { _this.waitingOnGetContent = false; });
                });
            }
            else {
                setContent(content);
            }
        };
        _this.dismissTooltipOverlay = function () {
            if (Tooltip.displayedTooltip && _this.tooltipId === Tooltip.displayedTooltip.id) {
                Tooltip.displayedTooltip = undefined;
            }
            _this.waitingOnGetContent = false;
            _this.setState({ anchorClientRect: undefined, content: undefined, width: undefined });
        };
        _this.getAnchorClientRect = function () { return _this.state.anchorClientRect; };
        return _this;
    }
    Tooltip.dismissDisplayedTooltip = function () {
        if (Tooltip.displayedTooltip) {
            var displayedTooltip = tslib_1.__assign({}, Tooltip.displayedTooltip);
            Tooltip.displayedTooltip = undefined;
            try {
                displayedTooltip.dismiss();
            }
            catch (error) {
                console.warn({ message: 'failed to dismiss displayed tooltip', error: error });
            }
        }
    };
    Tooltip.prototype.componentDidMount = function () {
        this.updateWidth();
    };
    Tooltip.prototype.componentDidUpdate = function () {
        this.updateWidth();
    };
    Tooltip.prototype.componentWillUnmount = function () {
        this.dismissTooltipOverlay();
    };
    Tooltip.prototype.updateWidth = function () {
        if (this.state.content && this.state.anchorClientRect && this.tooltipContentElement && this.state.width === undefined) {
            this.setState({ width: this.tooltipContentElement.getBoundingClientRect().width + TooltipConsts_1.AggregateTooltipPadding });
        }
    };
    Tooltip.prototype.getAnchorClientRectFromEvent = function (e) {
        if (isFocusEvent(e) && this.state.anchorClientRect) {
            return this.state.anchorClientRect;
        }
        else if (isFocusEvent(e) || !this.props.followCursor) {
            return TooltipConsts_1.adjustClientRectForOffset(e.currentTarget.getBoundingClientRect());
        }
        else {
            return TooltipConsts_1.adjustClientRectForOffset({
                bottom: e.clientY,
                height: 0,
                left: e.clientX,
                right: e.clientX,
                top: e.clientY,
                width: 0,
            });
        }
    };
    Tooltip.prototype.renderChildren = function () {
        var _a, _b;
        return (React.cloneElement(React.Children.only(this.props.children), {
            'aria-describedby': this.state.anchorClientRect ? this.tooltipId : undefined,
            onBlur: this.handleBlur,
            onFocus: this.handleFocus,
            onKeyUp: this.handleKeyUp,
            onMouseEnter: this.handleMouseEnter,
            onMouseLeave: this.handleMouseLeave,
            onMouseMove: this.handleMouseMove,
            tabIndex: (_b = (_a = this.props.children) === null || _a === void 0 ? void 0 : _a.props.tabIndex, (_b !== null && _b !== void 0 ? _b : 0)),
        }));
    };
    Tooltip.prototype.renderTooltipOverlay = function () {
        if (!this.state.content || !this.state.anchorClientRect) {
            return undefined;
        }
        var tooltipSideProps = TooltipConsts_1.TooltipPositionInfoMap[this.props.position];
        /**
         * In order to have the content wrapper grow to fit the tooltip contents, we initially render the wrapper with a width of maxWidth.
         * Once the tooltip content is rendered, we get a reference to the content element and get the actual rendered width. This width is
         * then used, along with the left/right padding and border widths to calculate the width of the content wrapper. This results in a
         * content wrapper that fits to the tooltip content.
         */
        var contentWrapperStyle = tslib_1.__assign(tslib_1.__assign({}, TooltipConsts_1.ContentWrapperStyle), { maxWidth: this.props.maxWidth, overflow: 'hidden', visibility: this.state.width === undefined ? 'hidden' : 'visible', width: Math.ceil(this.state.width || this.props.maxWidth) });
        return (React.createElement(Overlay_1.Overlay, { allowAutoPosition: true, anchorOrigin: tooltipSideProps.anchorOrigin, disablePointerEvents: true, getAnchorClientRect: this.getAnchorClientRect, shouldAutoPositionOnScrollingRootScroll: this.props.followCursor, stackedOrigin: tooltipSideProps.stackedOrigin, 
            // tslint:disable-next-line:deprecation
            stackingRootId: this.props.stackingRootId, zIndex: this.props.zIndex },
            React.createElement("div", { "data-tb-test-id": this.props.testId, id: this.tooltipId, ref: this.handleTooltipOverlayContentRef, role: 'tooltip', style: contentWrapperStyle }, this.state.content)));
    };
    Tooltip.prototype.render = function () {
        return React.createElement(React.Fragment, null,
            this.renderChildren(),
            this.renderTooltipOverlay());
    };
    Tooltip.defaultProps = {
        children: DefaultTriggerElement,
        maxWidth: TooltipConsts_1.DefaultMaxWidth,
        position: TooltipConsts_1.TooltipPosition.Right,
    };
    return Tooltip;
}(React.Component));
exports.Tooltip = Tooltip;


/***/ }),

/***/ "./lib/src/widgets/Tooltip/TooltipConsts.js":
/*!**************************************************!*\
  !*** ./lib/src/widgets/Tooltip/TooltipConsts.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var _a;
Object.defineProperty(exports, "__esModule", { value: true });
var TabStyles_1 = __webpack_require__(/*! ../../styles/TabStyles */ "./lib/src/styles/TabStyles.js");
var Overlay_1 = __webpack_require__(/*! ../../utils/Overlay */ "./lib/src/utils/Overlay.js");
exports.DefaultMaxWidth = 300;
/** This is padding between the anchor client rect boundary and the tooltip overlay boundary. */
exports.AnchorClientRectPadding = 6;
exports.BorderWidth = TabStyles_1.TabStyles.Sizing.BorderWidth;
exports.Padding = 12;
exports.AggregateTooltipPadding = 2 * (exports.BorderWidth + exports.Padding);
exports.ContentWrapperStyle = {
    backgroundColor: TabStyles_1.TabStyles.Colors.White,
    borderColor: TabStyles_1.TabStyles.Colors.L5,
    borderRadius: TabStyles_1.TabStyles.Sizing.BorderRadius,
    borderStyle: 'solid',
    borderWidth: exports.BorderWidth,
    boxShadow: TabStyles_1.TabStyles.Shadow.Standard,
    boxSizing: 'border-box',
    display: 'block',
    fontSize: TabStyles_1.TabStyles.Typography.Sizing.Default,
    lineHeight: 'normal',
    padding: exports.Padding,
};
var TooltipPosition;
(function (TooltipPosition) {
    TooltipPosition["TopLeftCorner"] = "TopLeftCorner";
    TooltipPosition["Top"] = "Top";
    TooltipPosition["TopRightCorner"] = "TopRightCorner";
    TooltipPosition["Right"] = "Right";
    TooltipPosition["BottomRightCorner"] = "BottomRightCorner";
    TooltipPosition["Bottom"] = "Bottom";
    TooltipPosition["BottomLeftCorner"] = "BottomLeftCorner";
    TooltipPosition["Left"] = "Left";
})(TooltipPosition = exports.TooltipPosition || (exports.TooltipPosition = {}));
exports.TooltipPositionInfoMap = (_a = {},
    _a[TooltipPosition.TopLeftCorner] = {
        anchorOrigin: { horizontal: Overlay_1.HorizontalOriginOption.left, vertical: Overlay_1.VerticalOriginOption.top },
        stackedOrigin: { horizontal: Overlay_1.HorizontalOriginOption.right, vertical: Overlay_1.VerticalOriginOption.bottom },
    },
    _a[TooltipPosition.Top] = {
        anchorOrigin: { horizontal: Overlay_1.HorizontalOriginOption.centerX, vertical: Overlay_1.VerticalOriginOption.top },
        stackedOrigin: { horizontal: Overlay_1.HorizontalOriginOption.centerX, vertical: Overlay_1.VerticalOriginOption.bottom },
    },
    _a[TooltipPosition.TopRightCorner] = {
        anchorOrigin: { horizontal: Overlay_1.HorizontalOriginOption.right, vertical: Overlay_1.VerticalOriginOption.top },
        stackedOrigin: { horizontal: Overlay_1.HorizontalOriginOption.left, vertical: Overlay_1.VerticalOriginOption.bottom },
    },
    _a[TooltipPosition.Right] = {
        anchorOrigin: { horizontal: Overlay_1.HorizontalOriginOption.right, vertical: Overlay_1.VerticalOriginOption.centerY },
        stackedOrigin: { horizontal: Overlay_1.HorizontalOriginOption.left, vertical: Overlay_1.VerticalOriginOption.centerY },
    },
    _a[TooltipPosition.BottomRightCorner] = {
        anchorOrigin: { horizontal: Overlay_1.HorizontalOriginOption.right, vertical: Overlay_1.VerticalOriginOption.bottom },
        stackedOrigin: { horizontal: Overlay_1.HorizontalOriginOption.left, vertical: Overlay_1.VerticalOriginOption.top },
    },
    _a[TooltipPosition.Bottom] = {
        anchorOrigin: { horizontal: Overlay_1.HorizontalOriginOption.centerX, vertical: Overlay_1.VerticalOriginOption.bottom },
        stackedOrigin: { horizontal: Overlay_1.HorizontalOriginOption.centerX, vertical: Overlay_1.VerticalOriginOption.top },
    },
    _a[TooltipPosition.BottomLeftCorner] = {
        anchorOrigin: { horizontal: Overlay_1.HorizontalOriginOption.left, vertical: Overlay_1.VerticalOriginOption.bottom },
        stackedOrigin: { horizontal: Overlay_1.HorizontalOriginOption.right, vertical: Overlay_1.VerticalOriginOption.top },
    },
    _a[TooltipPosition.Left] = {
        anchorOrigin: { horizontal: Overlay_1.HorizontalOriginOption.left, vertical: Overlay_1.VerticalOriginOption.centerY },
        stackedOrigin: { horizontal: Overlay_1.HorizontalOriginOption.right, vertical: Overlay_1.VerticalOriginOption.centerY },
    },
    _a);
function adjustClientRectForOffset(clientRect) {
    return {
        bottom: clientRect.bottom + exports.AnchorClientRectPadding,
        // 2 * AnchorClientRectPadding accounts for the left and right offsets of AnchorClientRectPadding
        height: clientRect.height + (2 * exports.AnchorClientRectPadding),
        left: clientRect.left - exports.AnchorClientRectPadding,
        right: clientRect.right + exports.AnchorClientRectPadding,
        top: clientRect.top - exports.AnchorClientRectPadding,
        // 2 * AnchorClientRectPadding accounts for the top and bottom offsets of AnchorClientRectPadding
        width: clientRect.width + (2 * exports.AnchorClientRectPadding),
    };
}
exports.adjustClientRectForOffset = adjustClientRectForOffset;


/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _assertThisInitialized; });
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/extends.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _extends; });
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _inheritsLoose; });
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _objectWithoutPropertiesLoose; });
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

/***/ }),

/***/ "./node_modules/@tableau/tableau-ui/dist/tableau-ui.min.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tableau/tableau-ui/dist/tableau-ui.min.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

!function(e,t){ true?module.exports=t(__webpack_require__(/*! react */ "react")):undefined}(window,(function(e){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="/dist/",r(r.s=20)}([function(e,t,r){"use strict";r.r(t),r.d(t,"__extends",(function(){return o})),r.d(t,"__assign",(function(){return i})),r.d(t,"__rest",(function(){return a})),r.d(t,"__decorate",(function(){return s})),r.d(t,"__param",(function(){return l})),r.d(t,"__metadata",(function(){return c})),r.d(t,"__awaiter",(function(){return d})),r.d(t,"__generator",(function(){return u})),r.d(t,"__exportStar",(function(){return f})),r.d(t,"__values",(function(){return p})),r.d(t,"__read",(function(){return h})),r.d(t,"__spread",(function(){return g})),r.d(t,"__spreadArrays",(function(){return b})),r.d(t,"__await",(function(){return m})),r.d(t,"__asyncGenerator",(function(){return v})),r.d(t,"__asyncDelegator",(function(){return y})),r.d(t,"__asyncValues",(function(){return C})),r.d(t,"__makeTemplateObject",(function(){return _})),r.d(t,"__importStar",(function(){return w})),r.d(t,"__importDefault",(function(){return x}));
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
var n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)};function o(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}var i=function(){return(i=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};function a(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(n=Object.getOwnPropertySymbols(e);o<n.length;o++)t.indexOf(n[o])<0&&Object.prototype.propertyIsEnumerable.call(e,n[o])&&(r[n[o]]=e[n[o]])}return r}function s(e,t,r,n){var o,i=arguments.length,a=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,r,n);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(a=(i<3?o(a):i>3?o(t,r,a):o(t,r))||a);return i>3&&a&&Object.defineProperty(t,r,a),a}function l(e,t){return function(r,n){t(r,n,e)}}function c(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function d(e,t,r,n){return new(r||(r=Promise))((function(o,i){function a(e){try{l(n.next(e))}catch(e){i(e)}}function s(e){try{l(n.throw(e))}catch(e){i(e)}}function l(e){e.done?o(e.value):new r((function(t){t(e.value)})).then(a,s)}l((n=n.apply(e,t||[])).next())}))}function u(e,t){var r,n,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,n=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=(o=a.trys).length>0&&o[o.length-1])&&(6===i[0]||2===i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],n=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}}function f(e,t){for(var r in e)t.hasOwnProperty(r)||(t[r]=e[r])}function p(e){var t="function"==typeof Symbol&&e[Symbol.iterator],r=0;return t?t.call(e):{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}}}function h(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,o,i=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=i.next()).done;)a.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(r=i.return)&&r.call(i)}finally{if(o)throw o.error}}return a}function g(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(h(arguments[t]));return e}function b(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),o=0;for(t=0;t<r;t++)for(var i=arguments[t],a=0,s=i.length;a<s;a++,o++)n[o]=i[a];return n}function m(e){return this instanceof m?(this.v=e,this):new m(e)}function v(e,t,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,o=r.apply(e,t||[]),i=[];return n={},a("next"),a("throw"),a("return"),n[Symbol.asyncIterator]=function(){return this},n;function a(e){o[e]&&(n[e]=function(t){return new Promise((function(r,n){i.push([e,t,r,n])>1||s(e,t)}))})}function s(e,t){try{(r=o[e](t)).value instanceof m?Promise.resolve(r.value.v).then(l,c):d(i[0][2],r)}catch(e){d(i[0][3],e)}var r}function l(e){s("next",e)}function c(e){s("throw",e)}function d(e,t){e(t),i.shift(),i.length&&s(i[0][0],i[0][1])}}function y(e){var t,r;return t={},n("next"),n("throw",(function(e){throw e})),n("return"),t[Symbol.iterator]=function(){return this},t;function n(n,o){t[n]=e[n]?function(t){return(r=!r)?{value:m(e[n](t)),done:"return"===n}:o?o(t):t}:o}}function C(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,r=e[Symbol.asyncIterator];return r?r.call(e):(e=p(e),t={},n("next"),n("throw"),n("return"),t[Symbol.asyncIterator]=function(){return this},t);function n(r){t[r]=e[r]&&function(t){return new Promise((function(n,o){(function(e,t,r,n){Promise.resolve(n).then((function(t){e({value:t,done:r})}),t)})(n,o,(t=e[r](t)).done,t.value)}))}}}function _(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}function w(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}function x(e){return e&&e.__esModule?e:{default:e}}},function(t,r){t.exports=e},function(e,t,r){"use strict";r.r(t);var n=r(8);function o(e){var t={},r="";for(var i in e){var a=e[i];if("$unique"===i)t[n.IS_UNIQUE]=a;else if("$nest"===i){var s=a;for(var l in s){var c=s[l];t[l]=o(c).result}}else"$debugName"===i?r=a:t[i]=a}return{result:t,debugName:r}}var i="undefined"==typeof requestAnimationFrame?function(e){return setTimeout(e)}:"undefined"==typeof window?requestAnimationFrame:requestAnimationFrame.bind(window);function a(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return e.map((function(e){return e&&"object"==typeof e?Object.keys(e).map((function(t){return!!e[t]&&t})):[e]})).reduce((function(e,t){return e.concat(t)}),[]).filter((function(e){return!!e})).join(" ")}function s(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var r={},n=0,o=e;n<o.length;n++){var i=o[n];if(null!=i&&!1!==i)for(var a in i){var l=i[a];(l||0===l)&&("$nest"===a&&l?r[a]=r.$nest?s(r.$nest,l):l:-1!==a.indexOf("&")||0===a.indexOf("@media")?r[a]=r[a]?s(r[a],l):l:r[a]=l)}}return r}var l=function(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];var n=[];e.type&&n.push(e.type),e.orientation&&n.push("(orientation: "+e.orientation+")"),e.minWidth&&n.push("(min-width: "+c(e.minWidth)+")"),e.maxWidth&&n.push("(max-width: "+c(e.maxWidth)+")"),e.minHeight&&n.push("(min-height: "+c(e.minHeight)+")"),e.maxHeight&&n.push("(max-height: "+c(e.maxHeight)+")");var o,i="@media "+n.join(" and "),a={$nest:(o={},o[i]=s.apply(void 0,t),o)};return a},c=function(e){return"string"==typeof e?e:e+"px"},d=function(){return n.create(void 0,!0)},u=function(){function e(e){var t=e.autoGenerateTag,r=this;this.cssRaw=function(e){e&&(r._raw+=e||"",r._pendingRawChange=!0,r._styleUpdated())},this.cssRule=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];var i=o(s.apply(void 0,t)).result;r._freeStyle.registerRule(e,i),r._styleUpdated()},this.forceRenderStyles=function(){var e=r._getTag();e&&(e.textContent=r.getStyles())},this.fontFace=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var n=r._freeStyle,o=0,i=e;o<i.length;o++){var a=i[o];n.registerRule("@font-face",a)}r._styleUpdated()},this.getStyles=function(){return(r._raw||"")+r._freeStyle.getStyles()},this.keyframes=function(e){var t=function(e){var t={$debugName:void 0,keyframes:{}};for(var r in e){var n=e[r];"$debugName"===r?t.$debugName=n:t.keyframes[r]=n}return t}(e),n=t.keyframes,o=t.$debugName,i=r._freeStyle.registerKeyframes(n,o);return r._styleUpdated(),i},this.reinit=function(){var e=d();r._freeStyle=e,r._lastFreeStyleChangeId=e.changeId,r._raw="",r._pendingRawChange=!1;var t=r._getTag();t&&(t.textContent="")},this.setStylesTarget=function(e){r._tag&&(r._tag.textContent=""),r._tag=e,r.forceRenderStyles()},this.stylesheet=function(e){for(var t={},n=0,o=Object.getOwnPropertyNames(e);n<o.length;n++){var i=o[n],a=e[i];a&&(a.$debugName=i,t[i]=r.style(a))}return t};var n=d();this._autoGenerateTag=t,this._freeStyle=n,this._lastFreeStyleChangeId=n.changeId,this._pending=0,this._pendingRawChange=!1,this._raw="",this._tag=void 0,this.style=this.style.bind(this)}return e.prototype._afterAllSync=function(e){var t=this;this._pending++;var r=this._pending;i((function(){r===t._pending&&e()}))},e.prototype._getTag=function(){if(this._tag)return this._tag;if(this._autoGenerateTag){var e="undefined"==typeof window?{textContent:""}:document.createElement("style");return"undefined"!=typeof document&&document.head.appendChild(e),this._tag=e,e}},e.prototype._styleUpdated=function(){var e=this,t=this._freeStyle.changeId,r=this._lastFreeStyleChangeId;(this._pendingRawChange||t!==r)&&(this._lastFreeStyleChangeId=t,this._pendingRawChange=!1,this._afterAllSync((function(){return e.forceRenderStyles()})))},e.prototype.style=function(){var e=this._freeStyle,t=o(s.apply(void 0,arguments)),r=t.result,n=t.debugName,i=n?e.registerStyle(r,n):e.registerStyle(r);return this._styleUpdated(),i},e}(),f=r(12);r.d(t,"setStylesTarget",(function(){return h})),r.d(t,"cssRaw",(function(){return g})),r.d(t,"cssRule",(function(){return b})),r.d(t,"forceRenderStyles",(function(){return m})),r.d(t,"fontFace",(function(){return v})),r.d(t,"getStyles",(function(){return y})),r.d(t,"keyframes",(function(){return C})),r.d(t,"reinit",(function(){return _})),r.d(t,"style",(function(){return w})),r.d(t,"stylesheet",(function(){return x})),r.d(t,"createTypeStyle",(function(){return I})),r.d(t,"TypeStyle",(function(){return u})),r.d(t,"types",(function(){return f})),r.d(t,"extend",(function(){return s})),r.d(t,"classes",(function(){return a})),r.d(t,"media",(function(){return l}));var p=new u({autoGenerateTag:!0}),h=p.setStylesTarget,g=p.cssRaw,b=p.cssRule,m=p.forceRenderStyles,v=p.fontFace,y=p.getStyles,C=p.keyframes,_=p.reinit,w=p.style,x=p.stylesheet;function I(e){var t=new u({autoGenerateTag:!1});return e&&t.setStylesTarget(e),t}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TextColors={Primary:"#333",Secondary:"#4f4f4f",Neutral:"#707070",Disabled:"#bfbfbf",Error:"#c93a47",Valid:"#008057"},t.IconFillColors={Rest:"#666",Hover:"#333",Disabled:"#bfbfbf",Error:"#c93a47",Valid:"#008057"},t.InvertTextColors={Primary:"#fff",Secondary:"rgba(255, 255, 255, 0.96)",Netural:"rgba(255, 255, 255, 0.56)",Disabled:"rgba(255, 255, 255, 0.35)"},t.InvertIconFillColors={Rest:"rgba(255, 255, 255, 0.5)",Hover:"rgba(255, 255, 255, 0.8)",Disabled:"rgba(255, 255, 255, 0.35)"},t.Opacity={Disabled:.35}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FocusBlue="#3498DB",t.ErrorRed="#C93A47",t.ValidGreen="#008057",t.PreFocusIndicator=Object.freeze({borderColor:"transparent",borderStyle:"solid",borderWidth:1});var n=function(e){return void 0===e&&(e=t.FocusBlue),Object.freeze({borderColor:e,boxShadow:"0 0 4px 0 "+e,outline:"none",$nest:{"&::-moz-focus-inner":{$unique:!0,border:"none"}}})};t.DefaultFocusIndicator=n(),t.InvertFocusIndicator=n("white"),t.ErrorFocusIndicator=n(t.ErrorRed),t.ValidFocusIndicator=n(t.ValidGreen)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(9),o=Date.now();t.generateId=function(){return"tableau-ui-"+o++},t.isElementOverflownX=function(e){return!!e&&e.clientWidth<e.scrollWidth},t.closest=function(e,t){if(e.closest)return e.closest(t);var r=Element.prototype.matches||Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector;if(!r)return null;for(var n=e;n;){if(r.call(n,t))return n;n=n.parentElement}return null},t.findBlurRelatedTarget=function(e){return n.isIE?e.relatedTarget||document.activeElement:e.relatedTarget}},function(e,t,r){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0});var o=r(0),i=r(2),a=r(3),s=r(4),l=r(9);t.FieldHeight=24,t.BorderWidth=1,t.FontSize=12,t.IconSize=24,t.LabelHeight=21,t.SidePadding=8-t.BorderWidth,t.HoverColor="#fafafa",t.BorderColors={Rest:"#cbcbcb",Disabled:"#bfbfbf",Hover:"#333",Error:"#c93a47",Valid:"#008057"},t.InvertBorderColors={Rest:"rgba(255, 255, 255, 0.5)",Hover:"#fff",Disabled:"rgba(255, 255, 255, 0.35)"},t.WrapperStyleName=i.style({color:a.TextColors.Secondary,display:"inline-flex",flexDirection:"column",fontSize:t.FontSize,position:"relative",$nest:{"&.dark":{color:a.InvertTextColors.Secondary},"&.disabled, &.disabled *":{color:a.TextColors.Disabled+" !important"},"&.dark.disabled, &.dark.disabled *":{color:a.InvertTextColors.Disabled+" !important"}}}),t.LabelStyleName=i.style({display:"inline-block",marginRight:"auto",lineHeight:t.LabelHeight+"px",$nest:{"&:empty":{display:"none"}}});var c=l.isMSFT?l.isEdge?":-ms-input-placeholder":"-ms-input-placeholder":":placeholder";t.InputStyleName=i.style({backgroundColor:"transparent",border:t.BorderWidth+"px solid "+t.BorderColors.Rest,borderRadius:1,boxSizing:"border-box",color:a.TextColors.Primary,fontFamily:"inherit",fontSize:t.FontSize,padding:"0 "+t.SidePadding+"px","-webkit-appearance":"none",$nest:(n={},n["&:"+c]={$unique:!0,color:a.TextColors.Neutral,letterSpacing:"normal"},n["&:disabled:"+c]={$unique:!0,color:a.TextColors.Disabled+" !important"},n["&::-ms-clear"]={$unique:!0,display:"none"},n["&:hover:enabled"]={backgroundColor:t.HoverColor,borderColor:t.BorderColors.Hover},n["&&&&:focus"]=o.__assign(o.__assign({},s.DefaultFocusIndicator),{backgroundColor:"transparent"}),n['&&&[aria-invalid="true"]']={borderColor:t.BorderColors.Error,$nest:{"&:focus":s.ErrorFocusIndicator}},n["&:disabled"]={backgroundColor:["transparent !important","rgba(255, 255, 255, 0) !important"],borderColor:t.BorderColors.Disabled+" !important",color:a.TextColors.Disabled+" !important"},n[".dark &"]={borderColor:t.InvertBorderColors.Rest,color:a.InvertTextColors.Primary},n[".dark &:"+c]={$unique:!0,color:a.InvertTextColors.Netural},n[".dark &:disabled:"+c]={$unique:!0,color:a.InvertTextColors.Disabled+" !important"},n[".dark &:hover:enabled"]={backgroundColor:"transparent",borderColor:t.InvertBorderColors.Hover},n[".dark &&&&:focus"]=o.__assign({},s.InvertFocusIndicator),n[".dark &:disabled"]={borderColor:t.InvertBorderColors.Disabled+" !important",color:a.InvertTextColors.Disabled+" !important"},n["input&"]={height:t.FieldHeight},n["textarea&"]={display:"block",letterSpacing:.2,lineHeight:1.5*t.FontSize+"px",paddingBottom:6,paddingTop:6},n)})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.PreventUserSelect={userSelect:"none",WebkitUserSelect:"none",msUserSelect:"none",MozUserSelect:"none",cursor:"default"}},function(e,t,r){"use strict";(function(e){var r,n=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var o=0;t.IS_UNIQUE="__DO_NOT_DEDUPE_STYLE__";for(var i=/[A-Z]/g,a=/^ms-/,s=/&/g,l=/[ !#$%&()*+,./;<=>?@[\]^`{|}~"'\\]/g,c=function(e){return"-"+e.toLowerCase()},d={"animation-iteration-count":!0,"border-image-outset":!0,"border-image-slice":!0,"border-image-width":!0,"box-flex":!0,"box-flex-group":!0,"box-ordinal-group":!0,"column-count":!0,columns:!0,"counter-increment":!0,"counter-reset":!0,flex:!0,"flex-grow":!0,"flex-positive":!0,"flex-shrink":!0,"flex-negative":!0,"flex-order":!0,"font-weight":!0,"grid-area":!0,"grid-column":!0,"grid-column-end":!0,"grid-column-span":!0,"grid-column-start":!0,"grid-row":!0,"grid-row-end":!0,"grid-row-span":!0,"grid-row-start":!0,"line-clamp":!0,"line-height":!0,opacity:!0,order:!0,orphans:!0,"tab-size":!0,widows:!0,"z-index":!0,zoom:!0,"fill-opacity":!0,"flood-opacity":!0,"stop-opacity":!0,"stroke-dasharray":!0,"stroke-dashoffset":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0},u=0,f=Object.keys(d);u<f.length;u++)for(var p=f[u],h=0,g=["-webkit-","-ms-","-moz-","-o-",""];h<g.length;h++){d[g[h]+p]=!0}function b(e){return e.replace(i,c).replace(a,"-ms-")}function m(e){for(var t=5381,r=e.length;r--;)t=33*t^e.charCodeAt(r);return(t>>>0).toString(36)}function v(e,t){return"number"!=typeof t||0===t||d.hasOwnProperty(e)?e+":"+t:e+":"+t+"px"}function y(e){return e.sort((function(e,t){return e[0]>t[0]?1:-1}))}function C(e){return e.map((function(e){var t=e[0],r=e[1];return Array.isArray(r)?r.map((function(e){return v(t,e)})).join(";"):v(t,r)})).join(";")}function _(e,t){return-1===e.indexOf("&")?t+" "+e:e.replace(s,t)}function w(e,r,n,o,i){var a=function(e,r){for(var n=[],o=[],i=!1,a=0,s=Object.keys(e);a<s.length;a++){var l=s[a],c=e[l];null!=c&&(l===t.IS_UNIQUE?i=!0:"object"!=typeof c||Array.isArray(c)?n.push([b(l.trim()),c]):o.push([l.trim(),c]))}return{style:C(y(n)),nested:r?o:y(o),isUnique:i}}(r,""!==e),s=a.style,l=a.nested,c=a.isUnique,d=s;if(64===e.charCodeAt(0)){var u={selector:e,styles:[],rules:[],style:i?"":s};n.push(u),s&&i&&u.styles.push({selector:i,style:s,isUnique:c});for(var f=0,p=l;f<p.length;f++){var h=p[f];d+=(x=h[0])+w(x,h[1],u.rules,u.styles,i)}}else{var g=i?_(e,i):e;s&&o.push({selector:g,style:s,isUnique:c});for(var m=0,v=l;m<v.length;m++){var x,I=v[m];d+=(x=I[0])+w(x,I[1],n,o,g)}}return d}function x(e,t,r,n,i,a){for(var s=0,l=n;s<l.length;s++){var c=l[s],d=c.selector,u=c.style,f=c.isUnique,p=a?_(d,i):d,h=f?"u\0"+(++o).toString(36):"s\0"+t+"\0"+u;(m=new F(u,h)).add(new T(p,"k\0"+t+"\0"+p)),e.add(m)}for(var g=0,b=r;g<b.length;g++){var m,v=b[g],y=(d=v.selector,u=v.style,v.rules),C=v.styles;x(m=new N(d,u,"r\0"+t+"\0"+d+"\0"+u),t,y,C,i,a),e.add(m)}}function I(e){for(var t="",r=0;r<e.length;r++)t+=e[r];return t}t.escape=function(e){return e.replace(l,"\\$&")},t.hyphenate=b,t.stringHash=m;var k={add:function(){},change:function(){},remove:function(){}},S=function(){function e(e){void 0===e&&(e=k),this.changes=e,this.sheet=[],this.changeId=0,this._keys=[],this._children=Object.create(null),this._counters=Object.create(null)}return e.prototype.add=function(t){var r=this._counters[t.id]||0,n=this._children[t.id]||t.clone();if(this._counters[t.id]=r+1,0===r)this._children[n.id]=n,this._keys.push(n.id),this.sheet.push(n.getStyles()),this.changeId++,this.changes.add(n,this._keys.length-1);else if(n instanceof e&&t instanceof e){var o=this._keys.indexOf(t.id),i=n.changeId;n.merge(t),n.changeId!==i&&(this.sheet.splice(o,1,n.getStyles()),this.changeId++,this.changes.change(n,o,o))}return n},e.prototype.remove=function(t){var r=this._counters[t.id];if(void 0!==r&&r>0){this._counters[t.id]=r-1;var n=this._children[t.id],o=this._keys.indexOf(n.id);if(1===r)delete this._counters[t.id],delete this._children[t.id],this._keys.splice(o,1),this.sheet.splice(o,1),this.changeId++,this.changes.remove(n,o);else if(n instanceof e&&t instanceof e){var i=n.changeId;n.unmerge(t),n.changeId!==i&&(this.sheet.splice(o,1,n.getStyles()),this.changeId++,this.changes.change(n,o,o))}}},e.prototype.values=function(){var e=this;return this._keys.map((function(t){return e._children[t]}))},e.prototype.merge=function(e){for(var t=0,r=e.values();t<r.length;t++){var n=r[t];this.add(n)}return this},e.prototype.unmerge=function(e){for(var t=0,r=e.values();t<r.length;t++){var n=r[t];this.remove(n)}return this},e.prototype.clone=function(){return(new e).merge(this)},e}();t.Cache=S;var T=function(){function e(e,t){this.selector=e,this.id=t}return e.prototype.getStyles=function(){return this.selector},e.prototype.clone=function(){return new e(this.selector,this.id)},e}();t.Selector=T;var F=function(e){function t(t,r){var n=e.call(this)||this;return n.style=t,n.id=r,n}return n(t,e),t.prototype.getStyles=function(){return this.sheet.join(",")+"{"+this.style+"}"},t.prototype.clone=function(){return new t(this.style,this.id).merge(this)},t}(S);t.Style=F;var N=function(e){function t(t,r,n){var o=e.call(this)||this;return o.rule=t,o.style=r,o.id=n,o}return n(t,e),t.prototype.getStyles=function(){return this.rule+"{"+this.style+I(this.sheet)+"}"},t.prototype.clone=function(){return new t(this.rule,this.style,this.id).merge(this)},t}(S);t.Rule=N;var R=function(e){function r(t,r,n,o){var i=e.call(this,o)||this;return i.hash=t,i.debug=r,i.id=n,i}return n(r,e),r.prototype.registerStyle=function(e,r){var n=[],o=[],i=w("&",e,n,o),a="f"+this.hash(i),s=this.debug&&r?r+"_"+a:a;return x(this,i,n,o,"."+t.escape(s),!0),s},r.prototype.registerKeyframes=function(e,t){return this.registerHashRule("@keyframes",e,t)},r.prototype.registerHashRule=function(e,r,n){var o=[],i=[],a=w("",r,o,i),s="f"+this.hash(a),l=this.debug&&n?n+"_"+s:s,c=new N(e+" "+t.escape(l),"","h\0"+a+"\0"+e);return x(c,a,o,i,"",!1),this.add(c),l},r.prototype.registerRule=function(e,t){var r=[],n=[];x(this,w(e,t,r,n),r,n,"",!1)},r.prototype.registerCss=function(e){return this.registerRule("",e)},r.prototype.getStyles=function(){return I(this.sheet)},r.prototype.clone=function(){return new r(this.hash,this.debug,this.id,this.changes).merge(this)},r}(S);t.FreeStyle=R,t.create=function(t,r,n){return void 0===t&&(t=m),void 0===r&&(r=void 0!==e&&!1),void 0===n&&(n=k),new R(t,r,"f"+(++o).toString(36),n)}}).call(this,r(22))},function(e,t,r){"use strict";function n(e){try{return e.test(navigator.userAgent)}catch(e){return!1}}Object.defineProperty(t,"__esModule",{value:!0}),t.isIE=n(/Trident/),t.isEdge=n(/Edge\//),t.isMSFT=t.isIE||t.isEdge},function(e,t,r){"use strict";function n(e){return null==e}Object.defineProperty(t,"__esModule",{value:!0}),t.isNullOrUndefined=n,t.defaultIfNothing=function(e,t){return n(e)?t:e}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,o=r(0),i=r(1),a=r(2),s=r(16),l=r(3),c=r(4),d=r(5),u=r(10),f=r(6),p=a.style({$nest:{"& > .message":{cursor:"default",minHeight:f.LabelHeight,lineHeight:f.LabelHeight+"px"},"& > .message:empty":{display:"none"},"& > .message::before":{height:19,marginRight:4,verticalAlign:"middle",width:12},"&.invalid .message":{color:l.TextColors.Error,$nest:{"&::before":{content:(void 0===n&&(n=l.IconFillColors.Error),"url('data:image/svg+xml,"+encodeURIComponent('<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12"><path fill="'+n+'" d="M6 0c3.32307692 0 6 2.67692308 6 6s-2.67692308 6-6 6-6-2.67692308-6-6 2.67692308-6 6-6zm3.80826837 2.78724354L2.78823013 9.80910485C3.66178215 10.54956 4.78584707 11 6 11c2.72727273 0 5-2.27272727 5-5 0-1.21461006-.4507793-2.33906427-1.19173163-3.21275646zM6 1C3.27272727 1 1 3.27272727 1 6c0 1.15838235.41000962 2.23476277 1.09071081 3.08982322l7.00012461-6.9983064C8.23561231 1.41033329 7.15883948 1 6 1z"/></svg>')+"')"),display:"inline-block"}}},"&.valid .message":{color:l.TextColors.Valid,$nest:{"&::before":{content:function(e){return void 0===e&&(e=l.IconFillColors.Valid),"url('data:image/svg+xml,"+encodeURIComponent('<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 12 12"><path fill="'+e+'" d="M11.0901085,1.44039588 L5.95027487,10.7620802 C5.91674718,10.8219618 5.8714497,10.8712975 5.81882351,10.9088267 L5.74626794,10.9513078 L5.72944899,10.9584377 C5.56475588,11.0351468 5.36221679,11.007584 5.22322743,10.8747039 L1,6.92203962 L1.63092578,6.27522146 L5.43503565,9.82703356 L10.2990877,0.998730122 L11.0901085,1.44039588 Z"/></svg>')+"')"}(),display:"inline-block"}}},"&.invalid input, &.invalid textarea":{color:l.TextColors.Error},"&.valid input, &.valid textarea":{color:l.TextColors.Valid,borderColor:f.BorderColors.Valid},"&&&.valid :focus":c.ValidFocusIndicator}}),h=a.style({display:"inline-block",lineHeight:"12px",marginRight:4,verticalAlign:"middle"});t.LabeledField=function(e){var t=u.defaultIfNothing(e.labelId,i.useState(d.generateId())[0]),r=u.defaultIfNothing(e.id,i.useState(d.generateId())[0]),n=i.useState(d.generateId())[0],l=i.useState(!1),c=l[0],g=l[1],b=e.children,m=e.className,v=e.disabled,y=e.label,C=e.labelRef,_=e.message,w=e.valid;return i.createElement("div",{className:a.classes(m,f.WrapperStyleName,p,{valid:!0===w,invalid:!1===w,disabled:v}),onBlurCapture:function(e){e.currentTarget.contains(d.findBlurRelatedTarget(e))||g(!1)},onFocusCapture:function(e){e.currentTarget.contains(e.target)&&g(!0)}},i.createElement("label",{className:a.classes(f.LabelStyleName),htmlFor:r,id:t,ref:C},y),b(o.__assign({"aria-describedby":n,id:r},!1===w&&{"aria-errormessage":n,"aria-invalid":!0})),i.createElement("div",{"aria-live":c?"polite":"off",className:"message",id:n},"pending"===w&&i.createElement(s.Spinner,{"aria-hidden":!0,dimension:12,className:h}),_))},t.LabeledField.displayName="LabeledField"},function(e,t){},function(e,t,r){"use strict";var n,o,i,a,s;Object.defineProperty(t,"__esModule",{value:!0});var l=r(0),c=r(2),d=r(3),u=r(4),f=r(7),p=r(14);t.ButtonHeight=24;var h=l.__assign(l.__assign({},f.PreventUserSelect),{backgroundColor:"transparent",borderRadius:2,border:"1px solid transparent",boxSizing:"border-box",color:"#666",fontFamily:"inherit",fontSize:12,fontWeight:"bold",height:t.ButtonHeight,minWidth:96,padding:"0 24px",whiteSpace:"nowrap",$nest:{"& > *":{pointerEvents:"none"},"&.medium-density":{minWidth:88,padding:"0 16px"},"&.high-density":{minWidth:80,padding:"0 8px"},"&:disabled":{backgroundColor:"transparent !important",color:"#bfbfbf !important"},"&&:focus":l.__assign({},u.DefaultFocusIndicator)}}),g="&:hover:enabled",b='\n  &&&:active,\n  &[aria-pressed="true"],\n  &[aria-checked="true"],\n  &&&[aria-expanded="true"]\n',m=function(e,t,r){return void 0===e&&(e=d.IconFillColors.Rest),void 0===t&&(t=d.IconFillColors.Hover),void 0===r&&(r=d.IconFillColors.Disabled),{"&[aria-haspopup]":{alignItems:"center",display:"inline-flex",justifyContent:"center",$nest:{"&::after":{content:"url("+p.DropdownArrow.data(e)+")",display:"inline-block",height:p.DropdownArrow.height,marginRight:-6,width:p.DropdownArrow.width},'&[aria-expanded="true"]::after, &:active::after':{content:"url("+p.DropdownArrow.data(t)+")"},"&:disabled::after":{content:"url("+p.DropdownArrow.data(r)+") !important"}}}}};t.ButtonClassNames={primary:c.style(h,{backgroundColor:"#1a699e",borderColor:"#1a699e",color:"white",$nest:l.__assign((n={},n[g]={backgroundColor:"#2a79af",borderColor:"#2a79af"},n[b]={backgroundColor:"#15557f",borderColor:"#15557f"},n["&:disabled"]={backgroundColor:"#c8c8c8 !important",borderColor:"#c8c8c8 !important",color:"white !important"},n),m("white","white","white"))}),outline:c.style(h,{borderColor:"#666",$nest:l.__assign((o={},o[g]={backgroundColor:"#ebebeb"},o[b]={backgroundColor:"#ccc",borderColor:"#333",color:"#333"},o["&:disabled"]={borderColor:"#bfbfbf !important"},o),m())}),outlineDark:c.style(h,{borderColor:"#dcecf9",color:"#dcecf9",$nest:l.__assign((i={},i[g]={backgroundColor:"#4b5266",borderColor:"#aed3ef",color:"#dcecf9"},i[b]={backgroundColor:"#4b5266",borderColor:"#73b2e2",color:"#73b2e2"},i["&:disabled"]={borderColor:"#858585 !important",color:"#858585 !important"},i),m("#dcecf9","#73b2e2","#858585"))}),destructive:c.style(h,{backgroundColor:"#c41723",borderColor:"#c41723",color:"white",$nest:(a={},a[g]={backgroundColor:"#e51f2d",borderColor:"#e51f2d"},a[b]={backgroundColor:"#a0131c",borderColor:"#a0131c"},a["&:disabled"]={backgroundColor:"#c8c8c8 !important",borderColor:"#c8c8c8 !important",color:"white !important"},a)}),lowEmphasis:c.style(h,{$nest:(s={},s[g]={backgroundColor:"#ebebeb"},s[b]={backgroundColor:"#ebebeb",color:"#333"},s)})},t.ButtonClassNames.filledGreen=t.ButtonClassNames.primary,t.ButtonClassNames.attentionRed=t.ButtonClassNames.destructive,t.ButtonClassNames.filled=t.ButtonClassNames.outline,t.ButtonClassNames.blackText=t.ButtonClassNames.lowEmphasis,Object.freeze(t.ButtonClassNames),c.forceRenderStyles()},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),o=function(e){return"data:image/svg+xml,"+encodeURIComponent(e)};t.DropdownArrow={width:18,height:18,data:function(e){return void 0===e&&(e=n.IconFillColors.Rest),o('<svg xmlns="http://www.w3.org/2000/svg" width="'+t.DropdownArrow.width+'" height="'+t.DropdownArrow.height+'"><path fill="'+e+'" d="M5.8 7.3l3.5 4.6c.1.1.2.1.3 0l3.6-4.6c.1-.2 0-.3-.2-.3H6c-.2 0-.3.1-.2.3z"/></svg>')}},t.IconDropdownArrow={height:5,width:7,data:function(e){return void 0===e&&(e=n.IconFillColors.Rest),o('<svg xmlns="http://www.w3.org/2000/svg" width="'+t.IconDropdownArrow.width+'" height="'+t.IconDropdownArrow.height+'"><path fill="'+e+'" d="M5.8,1H1.2C1.1,1,1,1.1,1.1,1.2l2.3,2.7C3.4,4,3.6,4,3.6,3.9l2.3-2.7 C6,1.1,5.9,1,5.8,1z"/></svg>')}}},function(e,t,r){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0});var o=r(0),i=r(1),a=r(2),s=r(3),l=r(4),c=r(7),d=r(5),u=function(e){return void 0===e&&(e=s.IconFillColors.Rest),"url('data:image/svg+xml,"+encodeURIComponent('<svg xmlns="http://www.w3.org/2000/svg" height="16" width="16"><path fill="'+e+'" transform="translate(-2, -2)" d="M7.2 12.3c-.2 0-.4-.1-.5-.2l-3-3L4.8 8l2.3 2.3 4-6.7 1.3.8L7.9 12c-.2.2-.4.3-.7.3z"/></svg>')+"')"},f=function(e){return void 0===e&&(e=s.IconFillColors.Rest),"url('data:image/svg+xml,"+encodeURIComponent('<svg xmlns="http://www.w3.org/2000/svg" height="16" width="16"><rect fill="'+e+'" x="2" y="5" width="8" height="2"/></svg>')+"')"},p=function(e){return void 0===e&&(e=s.IconFillColors.Rest),"url('data:image/svg+xml,"+encodeURIComponent('<svg xmlns="http://www.w3.org/2000/svg" height="16" width="16"><circle fill="'+e+'" transform="translate(-2, -2)" cx="8" cy="8" r="3"/></svg>')+"')"},h=a.style({boxSizing:"border-box",flexShrink:0,height:14,margin:0,marginTop:3,opacity:0,padding:0,pointerEvents:"none",width:14}),g=a.style(c.PreventUserSelect,{marginLeft:6,overflow:"hidden",textOverflow:"ellipsis"});t.FocusVisibleClassName="focus-visible",t.FocusWithinClassName="focus-within";var b=a.style(c.PreventUserSelect,{color:s.TextColors.Primary,display:"inline-flex",fontSize:12,lineHeight:"20px",position:"relative",$nest:(n={"&.disabled":{color:s.TextColors.Disabled+" !important"},"&:before":{backgroundColor:"white",border:"1px solid "+s.IconFillColors.Rest,borderRadius:1,boxSizing:"border-box",content:"'\\200B'",display:"inline-block",height:14,position:"absolute",top:3,width:14},"&.radio:before":{borderRadius:"100%"},"&:hover.enabled:before":{borderColor:s.IconFillColors.Hover}},n["&."+t.FocusWithinClassName+"."+t.FocusVisibleClassName+":before"]=o.__assign({},l.DefaultFocusIndicator),n["&.disabled:before"]={borderColor:s.IconFillColors.Hover,opacity:s.Opacity.Disabled},n["&.checkbox.checked:before"]={content:u(s.IconFillColors.Rest)},n["&.checkbox.checked:hover.enabled:before"]={content:u(s.IconFillColors.Hover)},n["&.checkbox.indeterminate:before"]={content:f(s.IconFillColors.Rest)},n["&.checkbox.indeterminate:hover.enabled:before"]={content:f(s.IconFillColors.Hover)},n["&.radio.checked:before"]={content:p(s.IconFillColors.Rest)},n["&.radio.checked:hover.enabled:before"]={content:p(s.IconFillColors.Hover)},n)});t.Selector=i.forwardRef((function(e,r){var n=e.children,s=e.className,l=e.indeterminate,c=e.labelProps,u=e.style,f=o.__rest(e,["children","className","indeterminate","labelProps","style"]),p=i.useState(!0),m=p[0],v=p[1],y=i.useState(!1),C=y[0],_=y[1],w=i.useState(void 0),x=w[0],I=w[1];return i.createElement("label",o.__assign({},c,{className:a.classes(s,b,e.type,e.checked&&"checked",e.disabled?"disabled":"enabled",l&&"indeterminate",m&&t.FocusVisibleClassName,C&&t.FocusWithinClassName),onBlurCapture:function(e){v(!0),_(!1),c&&c.onBlurCapture&&c.onBlurCapture(e)},onFocusCapture:function(e){_(!0),c&&c.onFocusCapture&&c.onFocusCapture(e)},onKeyDownCapture:function(e){v(!0),c&&c.onKeyDownCapture&&c.onKeyDownCapture(e)},onMouseUpCapture:function(e){v(!1),c&&c.onMouseUpCapture&&c.onMouseUpCapture(e)},onMouseEnter:function(e){var t=e.currentTarget.lastElementChild;I(d.isElementOverflownX(t)&&t.textContent||void 0),c&&c.onMouseEnter&&c.onMouseEnter(e)},style:u,title:c&&c.title||x}),i.createElement("input",o.__assign({},f,{className:h,ref:function(e){!function(e){return!!e&&Object.prototype.hasOwnProperty.call(e,"current")}(r)?r&&r(e):r.current=e,e&&(e.indeterminate=l)}})),n&&i.createElement("div",{className:g},n))}))},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),o=r(1),i=r(2),a=r(25),s=function(e){return"data:image/svg+xml,"+encodeURIComponent(a.SpinnerSvg(e))};t.DarkColor="rgb(97, 101, 112)",t.LightColor="rgba(255, 255, 255, 0.8)";var l=i.style({background:"rgba(255,255,255,.6)",borderRadius:"15%",boxSizing:"border-box",display:"inline-flex",lineHeight:"normal"}),c={"100%":{transform:"rotate(360deg)"}},d=i.keyframes(c);i.cssRule("@-webkit-keyframes "+d,c);var u={animation:d+" 1s linear infinite",WebkitAnimation:d+" 1s linear infinite",cursor:"wait",margin:"auto",overflow:"hidden"},f=i.style(u);t.Spinner=o.forwardRef((function(e,r){var a=e.alt,c=e.className,d=e.color,u=e.dimension,p=e.showUnderlay,h=e.style,g=n.__rest(e,["alt","className","color","dimension","showUnderlay","style"]),b=n.__assign(n.__assign({},h),p?function(e){return{height:1.3*e,width:1.3*e}}(u):void 0);return o.createElement("div",n.__assign({},g,{className:i.classes(c,p&&l),ref:r,style:b}),o.createElement("img",{alt:a,className:f,src:s("dark"===d?t.DarkColor:t.LightColor),style:{height:u,width:u}}))})),t.Spinner.defaultProps={color:"dark",dimension:50,showUnderlay:!1},t.Spinner.displayName="Spinner"},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.conditional=function(e,t){return e?t:void 0}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=1e-11;t.clamp=function(e,t,r){return r<t?NaN:Math.min(Math.max(e,t),r)},t.snapUp=function(e,t){void 0===t&&(t=1);var r=e/t;return Math.abs(Math.floor(r)-r)<n&&(r=Math.floor(r)),Math.ceil(r)*t},t.snapDown=function(e,t){void 0===t&&(t=1);var r=e/t;return Math.abs(Math.ceil(r)-r)<n&&(r=Math.ceil(r)),Math.floor(r)*t},t.truncate=function(e){return e>0?Math.floor(e):Math.ceil(e)}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),o=r(2),i=r(4),a=r(7),s=r(33);t.TabListClassName=o.style({backgroundColor:"#f5f5f5",display:"flex",fontSize:12,height:"42px"},a.PreventUserSelect),t.TabButtonClassName=o.style(i.PreFocusIndicator,{backgroundColor:"#f5f5f5",boxSizing:"border-box",display:"inline-block",fontFamily:"inherit",height:"100%",overflow:"hidden",padding:0,position:"relative",$nest:{"&::after":{backgroundColor:"transparent",content:'""',height:3,position:"absolute",bottom:0,left:0,right:0},'&[aria-selected="true"]':{fontWeight:"bold"},"&:hover::after":{backgroundColor:"#d4d4d4"},'&[aria-selected="true"]::after':{backgroundColor:"#666"},"&:focus":n.__assign(n.__assign({},i.DefaultFocusIndicator),{zIndex:1}),"&:active::after":{backgroundColor:"#333"}}}),t.TabContentContainerClassName=o.style({alignItems:"center",color:"#666",display:"flex",height:"100%",justifyContent:"center",paddingLeft:24,paddingRight:24},s.TextEllipsis),t.TabContentClassName=o.style({display:"block"},s.TextEllipsis),t.TabIndicatorClassName=o.style({backgroundColor:"transparent",bottom:0,height:3,position:"absolute",width:"100%"}),t.TabPanelOuterContainerClassName=o.style({overflowY:"auto",padding:18,position:"relative","-webkit-overflow-scrolling":"touch"})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(21);t.Button=n.Button;var o=r(23);t.Checkbox=o.Checkbox;var i=r(24);t.DropdownSelect=i.DropdownSelect;var a=r(11);t.LabeledField=a.LabeledField;var s=r(26);t.Pill=s.Pill;var l=r(28);t.Radio=l.Radio;var c=r(16);t.Spinner=c.Spinner;var d=r(29);t.Stepper=d.Stepper;var u=r(31);t.Tabs=u.Tabs;var f=r(34);t.TextArea=f.TextArea;var p=r(35);t.TextField=p.TextField;var h=r(37);t.TextLink=h.TextLink;var g=r(2);t.forceRenderStyles=g.forceRenderStyles},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),o=r(1),i=r(2),a=r(13);t.Button=o.forwardRef((function(e,t){var r=e.className,s=e.density,l=e.kind,c=n.__rest(e,["className","density","kind"]);return o.createElement("button",n.__assign({},c,{className:i.classes(a.ButtonClassNames[l],r,("lowEmphasis"===l?"high":s)+"-density"),ref:t}))})),t.Button.defaultProps={density:"low",kind:"outline"},t.Button.displayName="Button"},function(e,t){var r,n,o=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function s(e){if(r===setTimeout)return setTimeout(e,0);if((r===i||!r)&&setTimeout)return r=setTimeout,setTimeout(e,0);try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}!function(){try{r="function"==typeof setTimeout?setTimeout:i}catch(e){r=i}try{n="function"==typeof clearTimeout?clearTimeout:a}catch(e){n=a}}();var l,c=[],d=!1,u=-1;function f(){d&&l&&(d=!1,l.length?c=l.concat(c):u=-1,c.length&&p())}function p(){if(!d){var e=s(f);d=!0;for(var t=c.length;t;){for(l=c,c=[];++u<t;)l&&l[u].run();u=-1,t=c.length}l=null,d=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===a||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function g(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];c.push(new h(e,t)),1!==c.length||d||s(p)},h.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=g,o.addListener=g,o.once=g,o.off=g,o.removeListener=g,o.removeAllListeners=g,o.emit=g,o.prependListener=g,o.prependOnceListener=g,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),o=r(1),i=r(15);t.Checkbox=o.forwardRef((function(e,t){return o.createElement(i.Selector,n.__assign({},e,{ref:t,type:"checkbox"}))})),t.Checkbox.displayName="Checkbox"},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),o=r(1),i=r(2),a=r(3),s=r(4),l=r(9),c=r(5),d=r(10),u=r(13),f=r(6),p=r(6),h=r(14),g=i.style({background:"transparent no-repeat right center",border:"none",borderRadius:0,color:a.TextColors.Primary,cursor:"inherit",fontFamily:"inherit",fontSize:"inherit",height:"100%",outline:"none",paddingLeft:p.SidePadding,width:"100%","-moz-appearance":"none","-webkit-appearance":"none",$nest:n.__assign({},l.isIE||l.isEdge?{"&::-ms-expand":{$unique:!0,display:"none"},"&::-ms-value":{$unique:!0,background:"none",color:a.TextColors.Primary},"&:disabled::-ms-value":{$unique:!0,color:a.TextColors.Disabled+" !important"},"&&:focus":n.__assign(n.__assign({},s.DefaultFocusIndicator),{outline:"1px solid "+s.FocusBlue}),"& > option":{color:a.TextColors.Primary}}:{})}),b=i.style({border:"1px solid transparent",borderRadius:1,boxSizing:"border-box",display:"inline-block",height:"0",minHeight:u.ButtonHeight,position:"relative",$nest:{":not(.disabled) > &:hover":{backgroundColor:f.HoverColor},"&&&&:focus-within":n.__assign(n.__assign({$unique:!0},s.DefaultFocusIndicator),{backgroundColor:"transparent"}),"& > select":{backgroundImage:"url('"+h.DropdownArrow.data(a.IconFillColors.Rest)+"')",paddingRight:h.DropdownArrow.width+p.SidePadding},"& > select:disabled":{backgroundImage:"url('"+h.DropdownArrow.data(a.IconFillColors.Disabled)+"')"},"&:hover > select:enabled":{backgroundImage:"url('"+h.DropdownArrow.data(a.IconFillColors.Hover)+"')"},".icon > & > select":{backgroundImage:"url('"+h.IconDropdownArrow.data(a.IconFillColors.Rest)+"')",paddingRight:h.IconDropdownArrow.width+p.SidePadding},".icon > & > select:disabled":{backgroundImage:"url('"+h.IconDropdownArrow.data(a.IconFillColors.Disabled)+"')"},".icon > &:hover > select:enabled":{backgroundImage:"url('"+h.IconDropdownArrow.data(a.IconFillColors.Hover)+"')"},".outline > &":{borderColor:f.BorderColors.Rest},".outline > &:hover":{borderColor:f.BorderColors.Hover},".outline.disabled > &":{borderColor:f.BorderColors.Disabled+" !important"},".line > &":{borderBottomColor:f.BorderColors.Rest,borderBottomLeftRadius:0,borderBottomRightRadius:0},".line > &:hover":{borderBottomColor:f.BorderColors.Hover},".line.disabled > &":{borderBottomColor:f.BorderColors.Disabled+" !important"},".icon > &, .text > &":{cursor:"pointer"},".disabled > &&":{cursor:"default"}}});t.DropdownSelect=o.forwardRef((function(e,t){var r=e.className,a=e.disabled,s=e.id,l=e.label,u=(e.multiple,e.kind),p=n.__rest(e,["className","disabled","id","label","multiple","kind"]),h=d.defaultIfNothing(s,o.useState(c.generateId())[0]);return o.createElement("div",{className:i.classes(f.WrapperStyleName,r,u,{disabled:a})},o.createElement("label",{htmlFor:h,className:i.classes(f.LabelStyleName)},l),o.createElement("div",{className:i.classes(b,r)},o.createElement("select",n.__assign({},p,{className:g,disabled:a,id:h,ref:t}))))})),t.DropdownSelect.defaultProps={kind:"outline"},t.DropdownSelect.displayName="DropdownSelect"},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SpinnerSvg=function(e){return'\n<svg viewBox="0 0 50 50" xmlns="http://www.w3.org/2000/svg">\n  <style>\n    #tail { fill: url(#fade) }\n    #head { fill: '+e+" }\n    stop { stop-color: "+e+' }\n  </style>\n  <linearGradient id="fade" x2="50" y1="25" y2="25" gradientUnits="userSpaceOnUse">\n    <stop offset="0" stop-opacity="0"/>\n    <stop offset=".15" stop-opacity=".04"/>\n    <stop offset=".3" stop-opacity=".16"/>\n    <stop offset=".45" stop-opacity=".36"/>\n    <stop offset=".61" stop-opacity=".64"/>\n    <stop offset=".76"/>\n  </linearGradient>\n  <path id="head" d="M0 25a25 25 0 1 0 50 0h-3.9a21.1 21.1 0 1 1-42.2 0" />\n  <path id="tail" d="M50 25a25 25 0 0 0-50 0h3.9a21.1 21.1 0 1 1 42.2 0" />\n</svg>'}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),o=r(1),i=r(2),a=r(7),s=r(27),l=r(3),c={ApplicationBlue:"rgb(34, 38, 54)",AttentionDark:"rgb(201, 58, 71)",AttentionLight:"rgb(235, 68, 84)",Continuous:"rgb(0, 177, 128)",ContinuousDark:"rgb(0, 151, 104)",Discrete:"rgb(73, 150, 178)",DiscreteDark:"rgb(54, 126,156)",White90:"rgba(255, 255, 255, 0.9)"},d={backgroundColor:"transparent",color:l.TextColors.Primary};function u(e,t){return{normal:{backgroundColor:e,color:c.White90},dark:{backgroundColor:t,color:c.White90},light:{backgroundColor:s.rgb2rgba(e,.55),borderColor:"transparent",color:l.TextColors.Primary}}}var f={continuous:u(c.Continuous,c.ContinuousDark),discrete:u(c.Discrete,c.DiscreteDark),invalid:u(c.AttentionLight,c.AttentionDark),other:u("#d4d4d4","rgb(84, 84, 84)")},p=i.style(a.PreventUserSelect,{alignItems:"center",borderColor:"transparent",borderRadius:10,borderStyle:"solid",borderWidth:1,boxSizing:"border-box",display:"flex",fontSize:12,height:20,minWidth:150,overflowY:"hidden",padding:"0 10px",$nest:{"&:not(.schema)":{$nest:{"&.continuous":f.continuous.normal,"&.discrete":f.discrete.normal,"&.invalid":f.invalid.normal,"&.other":n.__assign(n.__assign({},f.other.normal),{color:l.TextColors.Primary}),"&:hover":{borderColor:c.ApplicationBlue},"&.continuous.selected":f.continuous.dark,"&.discrete.selected":f.discrete.dark,"&.invalid.selected":f.invalid.dark,"&.other.selected":f.other.dark}},"&.schema":n.__assign(n.__assign({},d),{$nest:{"&.continuous:hover":f.continuous.light,"&.discrete:hover":f.discrete.light,"&.invalid:hover":f.invalid.light,"&.other:hover":f.other.light,"&.continuous.selected":f.continuous.normal,"&.discrete.selected":f.discrete.normal,"&.invalid.selected":f.invalid.normal,"&.other.selected":n.__assign(n.__assign({},f.other.normal),{color:l.TextColors.Primary})}})}});t.Pill=o.forwardRef((function(e,t){var r=e.className,a=e.kind,s=e.schema,l=e.selected,c=n.__rest(e,["className","kind","schema","selected"]);return o.createElement("div",n.__assign({},c,{className:i.classes(p,s&&"schema",l&&"selected",a,r),ref:t}))})),t.Pill.displayName="Pill"},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.rgb2rgba=function(e,t){return void 0===t&&(t=1),e.replace(/rgb\(([^)]*)\)/,"rgba($1, "+t+")")}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),o=r(1),i=r(15);t.Radio=o.forwardRef((function(e,t){return o.createElement(i.Selector,n.__assign({},e,{ref:t,type:"radio"}))})),t.Radio.displayName="Radio"},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),o=r(1),i=r(2),a=r(3),s=r(17),l=r(5),c=r(18),d=r(30),u=r(10),f=r(6),p=function(e,t){return void 0===e&&(e=a.IconFillColors.Rest),"url('data:image/svg+xml,"+encodeURIComponent('<svg xmlns="http://www.w3.org/2000/svg" width="18" height="11"><path transform="'+(t?"rotate(180) translate(-18 -11.5)":"translate(0 -1)")+'" fill="'+e+'" d="M6 7.7L8.8 4c.1 0 .3 0 .3.1L12 7.7c0 .1 0 .3-.2.3H6.2C6 8 6 7.8 6 7.7z"/></svg>')+"')"},h=i.style({paddingRight:18,width:"100%",$nest:{":hover > &:enabled":{backgroundColor:f.HoverColor,borderColor:f.BorderColors.Hover},".dark :hover > :enabled":{backgroundColor:"transparent",borderColor:f.InvertBorderColors.Hover}}}),g=i.style({background:"#e6e6e6",boxSizing:"border-box",display:"inline-flex",flexDirection:"column",paddingLeft:1,position:"absolute",width:17,bottom:1,right:1,top:1}),b=i.style({background:"white "+p(a.IconFillColors.Rest)+" no-repeat",backgroundPositionX:"center",boxSizing:"border-box",border:"none",height:"calc(50% - 0.5px)",width:"100%",padding:0,$nest:{"&:enabled:hover":{backgroundImage:p(a.IconFillColors.Hover)},"&:disabled":{backgroundImage:p(a.IconFillColors.Disabled)},"button + &":{backgroundImage:p(a.IconFillColors.Rest,!0),marginTop:1},"button + &:enabled:hover":{backgroundImage:p(a.IconFillColors.Hover,!0)},"button + &:disabled":{backgroundImage:p(a.IconFillColors.Disabled,!0)}}}),m=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.inputElement=null,t.inputId=l.generateId(),t.state={inputText:String(t.props.value)},t.handleButtonsFocus=function(){t.inputElement.focus()},t.handleInputBlur=function(e){t.inputElement.parentElement.contains(l.findBlurRelatedTarget(e))||(t.triggerChange(),delete t.keyHandlers.keyup.Escape,t.props.onBlur&&t.props.onBlur(e))},t.handleInputChange=function(e){var r=e.target.value;(t.props.floatingPoint?/^[-+]?[0-9]*\.?[0-9]*$/:/^[-+]?[0-9]*$/).test(r)&&t.setState({inputText:r})},t.handleInputRef=function(e){t.inputElement=e,d.assignRef(t.props.inputRef,e)},t.pageDown=function(){t.stepDown(t.props.step*t.props.pageSteps)},t.pageUp=function(){t.stepUp(t.props.step*t.props.pageSteps)},t.revert=function(){t.triggerChange(t.props.value)},t.stepDown=function(e){void 0===e&&(e=t.props.step),t.triggerChange(c.snapUp(t.props.value,e)-e)},t.stepUp=function(e){void 0===e&&(e=t.props.step),t.triggerChange(c.snapDown(t.props.value,e)+e)},t.triggerChange=function(e){void 0===e&&(e=parseFloat(t.inputElement.value)),t.props.floatingPoint||(e=c.truncate(e));var r=c.clamp(isNaN(e)?t.props.value:e,t.props.min,t.props.max);t.setState({inputText:String(r)},(function(){r!==t.props.value&&t.props.onValueChange&&t.props.onValueChange(r)}))},t.keyHandlers={keydown:Object.freeze({ArrowUp:t.stepUp,ArrowDown:t.stepDown,Home:function(){isFinite(t.props.min)&&t.triggerChange(t.props.min)},End:function(){isFinite(t.props.max)&&t.triggerChange(t.props.max)},Enter:t.triggerChange,Escape:function(){return t.keyHandlers.keyup.Escape=t.revert},PageUp:t.pageUp,PageDown:t.pageDown}),keyup:{}},t.handleKey=function(e){var r=e.key;t.keyHandlers[e.type][r]&&!(e.altKey||e.ctrlKey||e.metaKey||e.shiftKey)?(t.keyHandlers[e.type][r](),"keyup"===e.type&&delete t.keyHandlers[e.type][r],e.preventDefault(),e.stopPropagation()):"keydown"===e.type&&t.props.onKeyDown?t.props.onKeyDown(e):"keyup"===e.type&&t.props.onKeyUp&&t.props.onKeyUp(e)},t}return n.__extends(t,e),t.prototype.componentDidUpdate=function(e){e.value===this.props.value||isNaN(this.props.value)||this.setState({inputText:String(this.props.value)})},t.prototype.render=function(){var e=this.props,t=e.className,r=e.disabled,a=(e.floatingPoint,e.inputRef,e.label),l=e.min,c=e.max,d=(e.onValueChange,e.pageSteps,e.step,e.value),p=n.__rest(e,["className","disabled","floatingPoint","inputRef","label","min","max","onValueChange","pageSteps","step","value"]),b=u.isNullOrUndefined(this.props.id)?this.inputId:this.props.id;return o.createElement("div",{className:i.classes(t,f.WrapperStyleName)},o.createElement("label",{htmlFor:b,className:i.classes(f.LabelStyleName)},a),o.createElement("div",{style:{minHeight:1,position:"relative"}},o.createElement("input",n.__assign({},p,{"aria-valuemin":s.conditional(isFinite(l),l),"aria-valuemax":s.conditional(isFinite(c),c),"aria-valuenow":this.state.inputText,className:i.classes(f.InputStyleName,h),disabled:r,id:b,onBlur:this.handleInputBlur,onChange:this.handleInputChange,onKeyDown:this.handleKey,onKeyUp:this.handleKey,ref:this.handleInputRef,role:"spinbutton",type:"text",value:r&&isNaN(d)?"":this.state.inputText})),o.createElement("div",{className:g,onFocus:this.handleButtonsFocus,tabIndex:-1},this.renderButton({downButton:!1,disabled:!!r,min:l,max:c,value:d}),this.renderButton({downButton:!0,disabled:!!r,min:l,max:c,value:d}))))},t.prototype.renderButton=function(e){var t=this,r=e.disabled||isNaN(e.value)||(e.downButton?e.value<=e.min:e.value>=e.max);return o.createElement("button",{"aria-hidden":!0,className:b,disabled:r,onClick:function(){return e.downButton?t.stepDown():t.stepUp()},tabIndex:-1})},t.defaultProps={min:-1/0,max:1/0,pageSteps:10,step:1},t}(o.Component);t.Stepper=m},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.assignRef=function(e,t){!function(e){return"function"==typeof e}(e)?e&&(e.current=t):e(t)}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),o=r(1),i=r(5),a=r(18),s=r(32),l=r(19),c=function(e,t){var r=i.closest(e,'[role="tab"][data-tab-index]');return r?parseInt(r.getAttribute("data-tab-index"),10):t},d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.id=i.generateId(),t.state={focusedIndex:-1},t.handleBlur=function(e){e.currentTarget.contains(i.findBlurRelatedTarget(e))||t.setFocusedIndex(-1)},t.handleClick=function(e){t.triggerTabChange(c(e.target,t.props.selectedTabIndex))},t.handleKeyDown=function(e){var r=c(e.target,NaN);if(!isNaN(r)){var n=t.getNextTabIndexFromKey(r,e.key);if(!(n<0)){var o="automatic"===t.props.activation||r===n?function(){return t.triggerTabChange(n)}:void 0;r!==n&&e.preventDefault(),e.stopPropagation(),t.setFocusedIndex(n,o)}}},t.handleFocus=function(e){t.setFocusedIndex(c(e.target,t.state.focusedIndex))},t.setFocusedIndex=function(e,r){void 0===r&&(r=function(){return null}),t.state.focusedIndex===e?r():t.setState({focusedIndex:e},r)},t}return n.__extends(t,e),t.prototype.triggerTabChange=function(e){this.props.onTabChange&&e!==this.props.selectedTabIndex&&this.props.onTabChange(e)},t.prototype.getNextTabIndexFromKey=function(e,t){var r=this.props.tabs.length;switch(t){case"ArrowRight":return(e+1)%r;case"ArrowLeft":return(r+e-1)%r;case"Home":return 0;case"End":return r-1;case"Enter":case" ":return e;default:return-1}},t.prototype.buildTabId=function(e){return this.id+"-tab"+(e+1)},t.prototype.buildTabPanelId=function(e){return this.id+"-tabpanel"+(e+1)},t.prototype.renderTabList=function(e,t,r){var n=this,i=100/t.length,a=t.map((function(t,a){return o.createElement(s.Tab,{"aria-controls":n.buildTabPanelId(a),children:t.content,id:n.buildTabId(a),index:a,isFocused:a===n.state.focusedIndex,isSelected:a===e,flexPercent:void 0===r||"justified"===r?i:void 0,key:a,title:t.title})}));return o.createElement("div",{className:l.TabListClassName,children:a,onBlur:this.handleBlur,onClick:this.handleClick,onFocus:this.handleFocus,onKeyDown:this.handleKeyDown,role:"tablist"})},t.prototype.renderTabPanel=function(e,t){return o.createElement("div",{"aria-labelledby":this.buildTabId(e),className:l.TabPanelOuterContainerClassName,id:this.buildTabPanelId(e),role:"tabpanel"},t)},t.prototype.render=function(){var e=this.props,t=(e.activation,e.alignment),r=e.children,i=(e.onTabChange,e.selectedTabIndex),s=e.tabs,l=n.__rest(e,["activation","alignment","children","onTabChange","selectedTabIndex","tabs"]),c=a.clamp(i,0,s.length-1);return o.createElement("div",n.__assign({},l),this.renderTabList(c,s,t),this.renderTabPanel(c,r))},t.defaultProps={activation:"automatic",alignment:"justified",selectedTabIndex:0,tabs:[]},t}(o.PureComponent);t.Tabs=d},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),o=r(1),i=r(17),a=r(5),s=r(19),l=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.tabButtonRef=o.createRef(),t.contentRef=o.createRef(),t.state={title:void 0},t.handleMouseEnter=function(){var e=a.isElementOverflownX(t.contentRef.current)&&t.contentRef.current.textContent||void 0;e!==t.state.title&&t.setState({title:e})},t}return n.__extends(t,e),t.prototype.componentDidUpdate=function(e){var t=this.tabButtonRef.current;this.props.isFocused&&!e.isFocused&&document.documentElement.contains(t)&&t.focus()},t.prototype.render=function(){var e={"aria-controls":this.props["aria-controls"],"aria-selected":this.props.isSelected,className:s.TabButtonClassName,"data-tab-index":this.props.index,id:this.props.id,onMouseEnter:this.handleMouseEnter,ref:this.tabButtonRef,role:"tab",tabIndex:this.props.isSelected||this.props.isFocused?0:-1,title:this.props.title||this.state.title},t=n.__assign({},i.conditional(!!this.props.flexPercent,{flex:"1 0 "+this.props.flexPercent+"%"}));return o.createElement("button",n.__assign({},e,{style:t}),o.createElement("div",{className:s.TabContentContainerClassName},o.createElement("div",{className:s.TabContentClassName,ref:this.contentRef},this.props.children)))},t}(o.PureComponent);t.Tab=l},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TextEllipsis={overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),o=r(1),i=r(11),a=r(6);t.TextArea=o.forwardRef((function(e,t){var r=e.className,s=e.label,l=e.labelId,c=e.id,d=e.message,u=e.valid,f=n.__rest(e,["className","label","labelId","id","message","valid"]);return o.createElement(i.LabeledField,n.__assign({},{className:r,disabled:f.disabled,id:c,label:s,labelId:l,message:d,valid:u}),(function(e){return o.createElement("textarea",n.__assign({},e,f,{className:a.InputStyleName,ref:t}))}))})),t.TextArea.displayName="TextArea"},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),o=r(1),i=r(2),a=r(3),s=r(5),l=r(11),c=r(36),d=r(6),u=12,f=function(e){return void 0===e&&(e=a.IconFillColors.Rest),"url('data:image/svg+xml,"+encodeURIComponent('<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12"><path fill="'+e+'" d="M7.5 0C5.015 0 3 2.015 3 4.5S5.015 9 7.5 9 12 6.985 12 4.5 9.985 0 7.5 0zm0 8C5.567 8 4 6.433 4 4.5S5.567 1 7.5 1 11 2.567 11 4.5 9.433 8 7.5 8z"/><path fill="'+e+'" d="M5.026 7.858l-3.96 3.96c-.243.243-.641.243-.884 0s-.243-.641 0-.884l3.96-3.96c.243-.243.641-.243.884 0s.243.641 0 .884z"/></svg>')+"')"},p=i.style({$nest:{".line &&&":{borderLeftColor:"transparent",borderRightColor:"transparent",borderTopColor:"transparent",borderBottomLeftRadius:0,borderBottomRightRadius:0},".line &:disabled":{borderColor:"transparent transparent "+d.BorderColors.Disabled+" !important"},".line.dark &:disabled":{borderColor:"transparent transparent "+d.InvertBorderColors.Disabled+" !important"},".search &":{background:f()+" "+(d.IconSize-u)/2+"px center no-repeat border-box",paddingLeft:d.IconSize-d.BorderWidth+4,$nest:{"&:hover:enabled":{backgroundColor:d.HoverColor},"&:hover:enabled, &:focus":{backgroundImage:f(a.IconFillColors.Hover)},"&:disabled":{backgroundImage:f(a.IconFillColors.Disabled)}}},".dark.search &":{backgroundImage:f(a.InvertIconFillColors.Rest),$nest:{"&:hover:enabled":{backgroundColor:"transparent"},"&:hover:enabled, &:focus":{backgroundImage:f(a.InvertIconFillColors.Hover)},"&:disabled":{backgroundImage:f(a.InvertIconFillColors.Disabled)}}}}}),h=i.style({paddingRight:d.SidePadding+d.IconSize}),g=i.style({minHeight:1,position:"relative"});t.TextField=o.forwardRef((function(e,t){var r=e.className,a=e.kind,u=e.id,f=e.label,b=e.labelId,m=e.message,v=e.onClear,y=e.valid,C=n.__rest(e,["className","kind","id","label","labelId","message","onClear","valid"]),_=C.disabled,w=C.value,x=!!v&&!!w&&!_,I=o.useRef(!1),k=o.useRef(null),S=o.useRef(!1),T=function(e){x&&"Escape"===e.key&&!S.current&&(e.preventDefault(),e.stopPropagation(),e.repeat||"keydown"!==e.type?I.current&&"keyup"===e.type&&(v(),I.current=!1):I.current=!0)},F=function(e){I.current=!1,k.current&&s.findBlurRelatedTarget(e)===k.current&&e.stopPropagation()},N=function(e){return S.current="compositionend"!==e.type},R=function(e){return e.currentTarget.previousElementSibling.focus()};return o.createElement(l.LabeledField,n.__assign({},{className:i.classes(r,a),disabled:_,id:u,label:f,labelId:b,message:m,valid:y}),(function(e){var r;return o.createElement("div",{className:g,onBlurCapture:F,onCompositionEndCapture:N,onCompositionStartCapture:N,onKeyDown:T,onKeyUp:T},o.createElement("input",n.__assign({},e,C,{ref:t,className:i.classes(d.InputStyleName,p,(r={},r[h]=x,r))})),x&&o.createElement(c.TextFieldClearButton,{ref:k,onClick:v,onFocus:R}))}))})),t.TextField.defaultProps={kind:"outline"},t.TextField.displayName="TextField"},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),o=r(1),i=r(2),a=r(3),s=r(6),l=8,c=8,d=function(e){return void 0===e&&(e=a.IconFillColors.Rest),"url('data:image/svg+xml,"+encodeURIComponent('<svg xmlns="http://www.w3.org/2000/svg" width="8" height="8"><path fill="'+e+'" d="M4.78873239 4L7.83098592.95774648c.22535211-.22535211.22535211-.56338028 0-.7887324-.22535212-.2253521-.56338029-.2253521-.7887324 0L4 3.21126762.95774648.16901408c-.22535211-.2253521-.56338028-.2253521-.7887324 0-.2253521.22535212-.2253521.56338029 0 .7887324L3.21126762 4 .16901408 7.04225352c-.2253521.22535211-.2253521.56338028 0 .7887324.22535212.22535211.56338029.22535211.7887324 0L4 4.78873239l3.04225352 3.04225353c.22535211.22535211.56338028.22535211.7887324 0 .22535211-.22535212.22535211-.56338029 0-.7887324L4.78873239 4z"/></svg>')+"')"},u=i.style({display:"none",position:"absolute",top:s.BorderWidth,right:s.BorderWidth,width:s.IconSize-s.BorderWidth,bottom:s.BorderWidth,alignItems:"center",justifyContent:"center",$nest:{"input:focus ~ &, input:hover ~ &, &:hover, &:active":{display:"inline-flex"},"&:before":{content:d(a.IconFillColors.Rest),display:"inline-block",height:l,lineHeight:l+"px",width:c},"&:hover:before":{content:d(a.IconFillColors.Hover)},".dark &:before":{content:d(a.InvertIconFillColors.Rest)},".dark &:hover:before":{content:d(a.InvertIconFillColors.Hover)}}});t.ClassName="clearButton",t.TextFieldClearButton=o.forwardRef((function(e,r){return o.createElement("div",n.__assign({},e,{ref:r,className:i.classes(t.ClassName,u),tabIndex:-1}))})),t.TextFieldClearButton.displayName="TextFieldClearButton"},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),o=r(1),i=r(2),a=r(4),s="#1A699E",l="#15557F",c="#2A79AF",d="#DCECF9",u="#73B2E2",f="#AED3EF",p="#666666",h="#4F4F4F",g="#707070",b="#EFEFEF",m="#ABABAB",v="#BDBDBD";t.TextLinkStyleName=i.style(n.__assign(n.__assign({},a.PreFocusIndicator),{fontWeight:"bold",textDecoration:"none",$nest:{"&:hover":{textDecoration:"underline"},"&:focus":a.DefaultFocusIndicator,"&:active":{textDecoration:"underline"},"&.standard":{color:s,$nest:{"&:hover":{color:c},"&:active":{color:l}}},"&.lowEmphasis":{color:p,$nest:{"&:hover":{color:g},"&:active":{color:h}}},"&.standard-dark":{color:d,$nest:{"&:hover":{color:f},"&:active":{color:u}}},"&.lowEmphasis-dark":{color:b,$nest:{"&:hover":{color:v},"&:active":{color:m}}}}})),t.TextLink=o.forwardRef((function(e,r){var a=e.children,s=e.className,l=e.kind,c=n.__rest(e,["children","className","kind"]);return o.createElement("a",n.__assign({},c,{ref:r,className:i.classes(t.TextLinkStyleName,l,s)}),a)})),t.TextLink.defaultProps={kind:"standard"},t.TextLink.displayName="TextLink"}])}));

/***/ }),

/***/ "./node_modules/classnames/index.js":
/*!******************************************!*\
  !*** ./node_modules/classnames/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg) && arg.length) {
				var inner = classNames.apply(null, arg);
				if (inner) {
					classes.push(inner);
				}
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if ( true && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}
}());


/***/ }),

/***/ "./node_modules/dom-helpers/esm/addClass.js":
/*!**************************************************!*\
  !*** ./node_modules/dom-helpers/esm/addClass.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return addClass; });
/* harmony import */ var _hasClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hasClass */ "./node_modules/dom-helpers/esm/hasClass.js");

function addClass(element, className) {
  if (element.classList) element.classList.add(className);else if (!Object(_hasClass__WEBPACK_IMPORTED_MODULE_0__["default"])(element, className)) if (typeof element.className === 'string') element.className = element.className + " " + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + " " + className);
}

/***/ }),

/***/ "./node_modules/dom-helpers/esm/hasClass.js":
/*!**************************************************!*\
  !*** ./node_modules/dom-helpers/esm/hasClass.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return hasClass; });
function hasClass(element, className) {
  if (element.classList) return !!className && element.classList.contains(className);
  return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}

/***/ }),

/***/ "./node_modules/dom-helpers/esm/removeClass.js":
/*!*****************************************************!*\
  !*** ./node_modules/dom-helpers/esm/removeClass.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return removeClass; });
function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
}

function removeClass(element, className) {
  if (element.classList) {
    element.classList.remove(className);
  } else if (typeof element.className === 'string') {
    ;
    element.className = replaceClassName(element.className, className);
  } else {
    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));
  }
}

/***/ }),

/***/ "./node_modules/free-style/dist/free-style.js":
/*!****************************************************!*\
  !*** ./node_modules/free-style/dist/free-style.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * The unique id is used for unique hashes.
 */
var uniqueId = 0;
/**
 * Tag styles with this string to get unique hashes.
 */
exports.IS_UNIQUE = '__DO_NOT_DEDUPE_STYLE__';
var upperCasePattern = /[A-Z]/g;
var msPattern = /^ms-/;
var interpolatePattern = /&/g;
var escapePattern = /[ !#$%&()*+,./;<=>?@[\]^`{|}~"'\\]/g;
var propLower = function (m) { return "-" + m.toLowerCase(); };
/**
 * CSS properties that are valid unit-less numbers.
 *
 * Ref: https://github.com/facebook/react/blob/master/packages/react-dom/src/shared/CSSProperty.js
 */
var CSS_NUMBER = {
    'animation-iteration-count': true,
    'border-image-outset': true,
    'border-image-slice': true,
    'border-image-width': true,
    'box-flex': true,
    'box-flex-group': true,
    'box-ordinal-group': true,
    'column-count': true,
    'columns': true,
    'counter-increment': true,
    'counter-reset': true,
    'flex': true,
    'flex-grow': true,
    'flex-positive': true,
    'flex-shrink': true,
    'flex-negative': true,
    'flex-order': true,
    'font-weight': true,
    'grid-area': true,
    'grid-column': true,
    'grid-column-end': true,
    'grid-column-span': true,
    'grid-column-start': true,
    'grid-row': true,
    'grid-row-end': true,
    'grid-row-span': true,
    'grid-row-start': true,
    'line-clamp': true,
    'line-height': true,
    'opacity': true,
    'order': true,
    'orphans': true,
    'tab-size': true,
    'widows': true,
    'z-index': true,
    'zoom': true,
    // SVG properties.
    'fill-opacity': true,
    'flood-opacity': true,
    'stop-opacity': true,
    'stroke-dasharray': true,
    'stroke-dashoffset': true,
    'stroke-miterlimit': true,
    'stroke-opacity': true,
    'stroke-width': true
};
// Add vendor prefixes to all unit-less properties.
for (var _i = 0, _a = Object.keys(CSS_NUMBER); _i < _a.length; _i++) {
    var property = _a[_i];
    for (var _b = 0, _c = ['-webkit-', '-ms-', '-moz-', '-o-', '']; _b < _c.length; _b++) {
        var prefix = _c[_b];
        CSS_NUMBER[prefix + property] = true;
    }
}
/**
 * Escape a CSS class name.
 */
exports.escape = function (str) { return str.replace(escapePattern, '\\$&'); };
/**
 * Transform a JavaScript property into a CSS property.
 */
function hyphenate(propertyName) {
    return propertyName
        .replace(upperCasePattern, propLower)
        .replace(msPattern, '-ms-'); // Internet Explorer vendor prefix.
}
exports.hyphenate = hyphenate;
/**
 * Generate a hash value from a string.
 */
function stringHash(str) {
    var value = 5381;
    var len = str.length;
    while (len--)
        value = (value * 33) ^ str.charCodeAt(len);
    return (value >>> 0).toString(36);
}
exports.stringHash = stringHash;
/**
 * Transform a style string to a CSS string.
 */
function styleToString(key, value) {
    if (typeof value === 'number' && value !== 0 && !CSS_NUMBER.hasOwnProperty(key)) {
        return key + ":" + value + "px";
    }
    return key + ":" + value;
}
/**
 * Sort an array of tuples by first value.
 */
function sortTuples(value) {
    return value.sort(function (a, b) { return a[0] > b[0] ? 1 : -1; });
}
/**
 * Categorize user styles.
 */
function parseStyles(styles, hasNestedStyles) {
    var properties = [];
    var nestedStyles = [];
    var isUnique = false;
    // Sort keys before adding to styles.
    for (var _i = 0, _a = Object.keys(styles); _i < _a.length; _i++) {
        var key = _a[_i];
        var value = styles[key];
        if (value !== null && value !== undefined) {
            if (key === exports.IS_UNIQUE) {
                isUnique = true;
            }
            else if (typeof value === 'object' && !Array.isArray(value)) {
                nestedStyles.push([key.trim(), value]);
            }
            else {
                properties.push([hyphenate(key.trim()), value]);
            }
        }
    }
    return {
        style: stringifyProperties(sortTuples(properties)),
        nested: hasNestedStyles ? nestedStyles : sortTuples(nestedStyles),
        isUnique: isUnique
    };
}
/**
 * Stringify an array of property tuples.
 */
function stringifyProperties(properties) {
    return properties.map(function (_a) {
        var name = _a[0], value = _a[1];
        if (!Array.isArray(value))
            return styleToString(name, value);
        return value.map(function (x) { return styleToString(name, x); }).join(';');
    }).join(';');
}
/**
 * Interpolate CSS selectors.
 */
function interpolate(selector, parent) {
    if (selector.indexOf('&') === -1)
        return parent + " " + selector;
    return selector.replace(interpolatePattern, parent);
}
/**
 * Recursive loop building styles with deferred selectors.
 */
function stylize(selector, styles, rulesList, stylesList, parent) {
    var _a = parseStyles(styles, selector !== ''), style = _a.style, nested = _a.nested, isUnique = _a.isUnique;
    var pid = style;
    if (selector.charCodeAt(0) === 64 /* @ */) {
        var child = { selector: selector, styles: [], rules: [], style: parent ? '' : style };
        rulesList.push(child);
        // Nested styles support (e.g. `.foo > @media > .bar`).
        if (style && parent)
            child.styles.push({ selector: parent, style: style, isUnique: isUnique });
        for (var _i = 0, nested_1 = nested; _i < nested_1.length; _i++) {
            var _b = nested_1[_i], name = _b[0], value = _b[1];
            pid += name + stylize(name, value, child.rules, child.styles, parent);
        }
    }
    else {
        var key = parent ? interpolate(selector, parent) : selector;
        if (style)
            stylesList.push({ selector: key, style: style, isUnique: isUnique });
        for (var _c = 0, nested_2 = nested; _c < nested_2.length; _c++) {
            var _d = nested_2[_c], name = _d[0], value = _d[1];
            pid += name + stylize(name, value, rulesList, stylesList, key);
        }
    }
    return pid;
}
/**
 * Transform `stylize` tree into style objects.
 */
function composeStylize(cache, pid, rulesList, stylesList, className, isStyle) {
    for (var _i = 0, stylesList_1 = stylesList; _i < stylesList_1.length; _i++) {
        var _a = stylesList_1[_i], selector = _a.selector, style = _a.style, isUnique = _a.isUnique;
        var key = isStyle ? interpolate(selector, className) : selector;
        var id = isUnique ? "u\0" + (++uniqueId).toString(36) : "s\0" + pid + "\0" + style;
        var item = new Style(style, id);
        item.add(new Selector(key, "k\0" + pid + "\0" + key));
        cache.add(item);
    }
    for (var _b = 0, rulesList_1 = rulesList; _b < rulesList_1.length; _b++) {
        var _c = rulesList_1[_b], selector = _c.selector, style = _c.style, rules = _c.rules, styles = _c.styles;
        var item = new Rule(selector, style, "r\0" + pid + "\0" + selector + "\0" + style);
        composeStylize(item, pid, rules, styles, className, isStyle);
        cache.add(item);
    }
}
/**
 * Cache to list to styles.
 */
function join(arr) {
    var res = '';
    for (var i = 0; i < arr.length; i++)
        res += arr[i];
    return res;
}
/**
 * Noop changes.
 */
var noopChanges = {
    add: function () { return undefined; },
    change: function () { return undefined; },
    remove: function () { return undefined; }
};
/**
 * Implement a cache/event emitter.
 */
var Cache = /** @class */ (function () {
    function Cache(changes) {
        if (changes === void 0) { changes = noopChanges; }
        this.changes = changes;
        this.sheet = [];
        this.changeId = 0;
        this._keys = [];
        this._children = Object.create(null);
        this._counters = Object.create(null);
    }
    Cache.prototype.add = function (style) {
        var count = this._counters[style.id] || 0;
        var item = this._children[style.id] || style.clone();
        this._counters[style.id] = count + 1;
        if (count === 0) {
            this._children[item.id] = item;
            this._keys.push(item.id);
            this.sheet.push(item.getStyles());
            this.changeId++;
            this.changes.add(item, this._keys.length - 1);
        }
        else if (item instanceof Cache && style instanceof Cache) {
            var curIndex = this._keys.indexOf(style.id);
            var prevItemChangeId = item.changeId;
            item.merge(style);
            if (item.changeId !== prevItemChangeId) {
                this.sheet.splice(curIndex, 1, item.getStyles());
                this.changeId++;
                this.changes.change(item, curIndex, curIndex);
            }
        }
        return item;
    };
    Cache.prototype.remove = function (style) {
        var count = this._counters[style.id];
        if (count !== undefined && count > 0) {
            this._counters[style.id] = count - 1;
            var item = this._children[style.id];
            var index = this._keys.indexOf(item.id);
            if (count === 1) {
                delete this._counters[style.id];
                delete this._children[style.id];
                this._keys.splice(index, 1);
                this.sheet.splice(index, 1);
                this.changeId++;
                this.changes.remove(item, index);
            }
            else if (item instanceof Cache && style instanceof Cache) {
                var prevChangeId = item.changeId;
                item.unmerge(style);
                if (item.changeId !== prevChangeId) {
                    this.sheet.splice(index, 1, item.getStyles());
                    this.changeId++;
                    this.changes.change(item, index, index);
                }
            }
        }
    };
    Cache.prototype.values = function () {
        var _this = this;
        return this._keys.map(function (key) { return _this._children[key]; });
    };
    Cache.prototype.merge = function (cache) {
        for (var _i = 0, _a = cache.values(); _i < _a.length; _i++) {
            var item = _a[_i];
            this.add(item);
        }
        return this;
    };
    Cache.prototype.unmerge = function (cache) {
        for (var _i = 0, _a = cache.values(); _i < _a.length; _i++) {
            var item = _a[_i];
            this.remove(item);
        }
        return this;
    };
    Cache.prototype.clone = function () {
        return new Cache().merge(this);
    };
    return Cache;
}());
exports.Cache = Cache;
/**
 * Selector is a dumb class made to represent nested CSS selectors.
 */
var Selector = /** @class */ (function () {
    function Selector(selector, id) {
        this.selector = selector;
        this.id = id;
    }
    Selector.prototype.getStyles = function () {
        return this.selector;
    };
    Selector.prototype.clone = function () {
        return new Selector(this.selector, this.id);
    };
    return Selector;
}());
exports.Selector = Selector;
/**
 * The style container registers a style string with selectors.
 */
var Style = /** @class */ (function (_super) {
    __extends(Style, _super);
    function Style(style, id) {
        var _this = _super.call(this) || this;
        _this.style = style;
        _this.id = id;
        return _this;
    }
    Style.prototype.getStyles = function () {
        return this.sheet.join(',') + "{" + this.style + "}";
    };
    Style.prototype.clone = function () {
        return new Style(this.style, this.id).merge(this);
    };
    return Style;
}(Cache));
exports.Style = Style;
/**
 * Implement rule logic for style output.
 */
var Rule = /** @class */ (function (_super) {
    __extends(Rule, _super);
    function Rule(rule, style, id) {
        var _this = _super.call(this) || this;
        _this.rule = rule;
        _this.style = style;
        _this.id = id;
        return _this;
    }
    Rule.prototype.getStyles = function () {
        return this.rule + "{" + this.style + join(this.sheet) + "}";
    };
    Rule.prototype.clone = function () {
        return new Rule(this.rule, this.style, this.id).merge(this);
    };
    return Rule;
}(Cache));
exports.Rule = Rule;
/**
 * The FreeStyle class implements the API for everything else.
 */
var FreeStyle = /** @class */ (function (_super) {
    __extends(FreeStyle, _super);
    function FreeStyle(hash, debug, id, changes) {
        var _this = _super.call(this, changes) || this;
        _this.hash = hash;
        _this.debug = debug;
        _this.id = id;
        return _this;
    }
    FreeStyle.prototype.registerStyle = function (styles, displayName) {
        var rulesList = [];
        var stylesList = [];
        var pid = stylize('&', styles, rulesList, stylesList);
        var hash = "f" + this.hash(pid);
        var id = this.debug && displayName ? displayName + "_" + hash : hash;
        composeStylize(this, pid, rulesList, stylesList, "." + exports.escape(id), true);
        return id;
    };
    FreeStyle.prototype.registerKeyframes = function (keyframes, displayName) {
        return this.registerHashRule('@keyframes', keyframes, displayName);
    };
    FreeStyle.prototype.registerHashRule = function (prefix, styles, displayName) {
        var rulesList = [];
        var stylesList = [];
        var pid = stylize('', styles, rulesList, stylesList);
        var hash = "f" + this.hash(pid);
        var id = this.debug && displayName ? displayName + "_" + hash : hash;
        var rule = new Rule(prefix + " " + exports.escape(id), '', "h\0" + pid + "\0" + prefix);
        composeStylize(rule, pid, rulesList, stylesList, '', false);
        this.add(rule);
        return id;
    };
    FreeStyle.prototype.registerRule = function (rule, styles) {
        var rulesList = [];
        var stylesList = [];
        var pid = stylize(rule, styles, rulesList, stylesList);
        composeStylize(this, pid, rulesList, stylesList, '', false);
    };
    FreeStyle.prototype.registerCss = function (styles) {
        return this.registerRule('', styles);
    };
    FreeStyle.prototype.getStyles = function () {
        return join(this.sheet);
    };
    FreeStyle.prototype.clone = function () {
        return new FreeStyle(this.hash, this.debug, this.id, this.changes).merge(this);
    };
    return FreeStyle;
}(Cache));
exports.FreeStyle = FreeStyle;
/**
 * Exports a simple function to create a new instance.
 */
function create(hash, debug, changes) {
    if (hash === void 0) { hash = stringHash; }
    if (debug === void 0) { debug = typeof process !== 'undefined' && "development" !== 'production'; }
    if (changes === void 0) { changes = noopChanges; }
    return new FreeStyle(hash, debug, "f" + (++uniqueId).toString(36), changes);
}
exports.create = create;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/lodash/_Hash.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/_Hash.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var hashClear = __webpack_require__(/*! ./_hashClear */ "./node_modules/lodash/_hashClear.js"),
    hashDelete = __webpack_require__(/*! ./_hashDelete */ "./node_modules/lodash/_hashDelete.js"),
    hashGet = __webpack_require__(/*! ./_hashGet */ "./node_modules/lodash/_hashGet.js"),
    hashHas = __webpack_require__(/*! ./_hashHas */ "./node_modules/lodash/_hashHas.js"),
    hashSet = __webpack_require__(/*! ./_hashSet */ "./node_modules/lodash/_hashSet.js");

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;


/***/ }),

/***/ "./node_modules/lodash/_ListCache.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_ListCache.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var listCacheClear = __webpack_require__(/*! ./_listCacheClear */ "./node_modules/lodash/_listCacheClear.js"),
    listCacheDelete = __webpack_require__(/*! ./_listCacheDelete */ "./node_modules/lodash/_listCacheDelete.js"),
    listCacheGet = __webpack_require__(/*! ./_listCacheGet */ "./node_modules/lodash/_listCacheGet.js"),
    listCacheHas = __webpack_require__(/*! ./_listCacheHas */ "./node_modules/lodash/_listCacheHas.js"),
    listCacheSet = __webpack_require__(/*! ./_listCacheSet */ "./node_modules/lodash/_listCacheSet.js");

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;


/***/ }),

/***/ "./node_modules/lodash/_Map.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/_Map.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;


/***/ }),

/***/ "./node_modules/lodash/_MapCache.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_MapCache.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var mapCacheClear = __webpack_require__(/*! ./_mapCacheClear */ "./node_modules/lodash/_mapCacheClear.js"),
    mapCacheDelete = __webpack_require__(/*! ./_mapCacheDelete */ "./node_modules/lodash/_mapCacheDelete.js"),
    mapCacheGet = __webpack_require__(/*! ./_mapCacheGet */ "./node_modules/lodash/_mapCacheGet.js"),
    mapCacheHas = __webpack_require__(/*! ./_mapCacheHas */ "./node_modules/lodash/_mapCacheHas.js"),
    mapCacheSet = __webpack_require__(/*! ./_mapCacheSet */ "./node_modules/lodash/_mapCacheSet.js");

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;


/***/ }),

/***/ "./node_modules/lodash/_Stack.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_Stack.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(/*! ./_ListCache */ "./node_modules/lodash/_ListCache.js"),
    stackClear = __webpack_require__(/*! ./_stackClear */ "./node_modules/lodash/_stackClear.js"),
    stackDelete = __webpack_require__(/*! ./_stackDelete */ "./node_modules/lodash/_stackDelete.js"),
    stackGet = __webpack_require__(/*! ./_stackGet */ "./node_modules/lodash/_stackGet.js"),
    stackHas = __webpack_require__(/*! ./_stackHas */ "./node_modules/lodash/_stackHas.js"),
    stackSet = __webpack_require__(/*! ./_stackSet */ "./node_modules/lodash/_stackSet.js");

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;


/***/ }),

/***/ "./node_modules/lodash/_Symbol.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_Symbol.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;


/***/ }),

/***/ "./node_modules/lodash/_Uint8Array.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_Uint8Array.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/** Built-in value references. */
var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;


/***/ }),

/***/ "./node_modules/lodash/_apply.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_apply.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;


/***/ }),

/***/ "./node_modules/lodash/_arrayLikeKeys.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_arrayLikeKeys.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseTimes = __webpack_require__(/*! ./_baseTimes */ "./node_modules/lodash/_baseTimes.js"),
    isArguments = __webpack_require__(/*! ./isArguments */ "./node_modules/lodash/isArguments.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isBuffer = __webpack_require__(/*! ./isBuffer */ "./node_modules/lodash/isBuffer.js"),
    isIndex = __webpack_require__(/*! ./_isIndex */ "./node_modules/lodash/_isIndex.js"),
    isTypedArray = __webpack_require__(/*! ./isTypedArray */ "./node_modules/lodash/isTypedArray.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;


/***/ }),

/***/ "./node_modules/lodash/_assignMergeValue.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_assignMergeValue.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(/*! ./_baseAssignValue */ "./node_modules/lodash/_baseAssignValue.js"),
    eq = __webpack_require__(/*! ./eq */ "./node_modules/lodash/eq.js");

/**
 * This function is like `assignValue` except that it doesn't assign
 * `undefined` values.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignMergeValue(object, key, value) {
  if ((value !== undefined && !eq(object[key], value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignMergeValue;


/***/ }),

/***/ "./node_modules/lodash/_assignValue.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_assignValue.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(/*! ./_baseAssignValue */ "./node_modules/lodash/_baseAssignValue.js"),
    eq = __webpack_require__(/*! ./eq */ "./node_modules/lodash/eq.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;


/***/ }),

/***/ "./node_modules/lodash/_assocIndexOf.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_assocIndexOf.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(/*! ./eq */ "./node_modules/lodash/eq.js");

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;


/***/ }),

/***/ "./node_modules/lodash/_baseAssignValue.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseAssignValue.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(/*! ./_defineProperty */ "./node_modules/lodash/_defineProperty.js");

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;


/***/ }),

/***/ "./node_modules/lodash/_baseCreate.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseCreate.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js");

/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

module.exports = baseCreate;


/***/ }),

/***/ "./node_modules/lodash/_baseFor.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_baseFor.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var createBaseFor = __webpack_require__(/*! ./_createBaseFor */ "./node_modules/lodash/_createBaseFor.js");

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

module.exports = baseFor;


/***/ }),

/***/ "./node_modules/lodash/_baseGetTag.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseGetTag.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js"),
    getRawTag = __webpack_require__(/*! ./_getRawTag */ "./node_modules/lodash/_getRawTag.js"),
    objectToString = __webpack_require__(/*! ./_objectToString */ "./node_modules/lodash/_objectToString.js");

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;


/***/ }),

/***/ "./node_modules/lodash/_baseIsArguments.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseIsArguments.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;


/***/ }),

/***/ "./node_modules/lodash/_baseIsNative.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseIsNative.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(/*! ./isFunction */ "./node_modules/lodash/isFunction.js"),
    isMasked = __webpack_require__(/*! ./_isMasked */ "./node_modules/lodash/_isMasked.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    toSource = __webpack_require__(/*! ./_toSource */ "./node_modules/lodash/_toSource.js");

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;


/***/ }),

/***/ "./node_modules/lodash/_baseIsTypedArray.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_baseIsTypedArray.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    isLength = __webpack_require__(/*! ./isLength */ "./node_modules/lodash/isLength.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;


/***/ }),

/***/ "./node_modules/lodash/_baseKeysIn.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseKeysIn.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    isPrototype = __webpack_require__(/*! ./_isPrototype */ "./node_modules/lodash/_isPrototype.js"),
    nativeKeysIn = __webpack_require__(/*! ./_nativeKeysIn */ "./node_modules/lodash/_nativeKeysIn.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeysIn;


/***/ }),

/***/ "./node_modules/lodash/_baseMerge.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseMerge.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(/*! ./_Stack */ "./node_modules/lodash/_Stack.js"),
    assignMergeValue = __webpack_require__(/*! ./_assignMergeValue */ "./node_modules/lodash/_assignMergeValue.js"),
    baseFor = __webpack_require__(/*! ./_baseFor */ "./node_modules/lodash/_baseFor.js"),
    baseMergeDeep = __webpack_require__(/*! ./_baseMergeDeep */ "./node_modules/lodash/_baseMergeDeep.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    keysIn = __webpack_require__(/*! ./keysIn */ "./node_modules/lodash/keysIn.js"),
    safeGet = __webpack_require__(/*! ./_safeGet */ "./node_modules/lodash/_safeGet.js");

/**
 * The base implementation of `_.merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  baseFor(source, function(srcValue, key) {
    stack || (stack = new Stack);
    if (isObject(srcValue)) {
      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
    }
    else {
      var newValue = customizer
        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
        : undefined;

      if (newValue === undefined) {
        newValue = srcValue;
      }
      assignMergeValue(object, key, newValue);
    }
  }, keysIn);
}

module.exports = baseMerge;


/***/ }),

/***/ "./node_modules/lodash/_baseMergeDeep.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_baseMergeDeep.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var assignMergeValue = __webpack_require__(/*! ./_assignMergeValue */ "./node_modules/lodash/_assignMergeValue.js"),
    cloneBuffer = __webpack_require__(/*! ./_cloneBuffer */ "./node_modules/lodash/_cloneBuffer.js"),
    cloneTypedArray = __webpack_require__(/*! ./_cloneTypedArray */ "./node_modules/lodash/_cloneTypedArray.js"),
    copyArray = __webpack_require__(/*! ./_copyArray */ "./node_modules/lodash/_copyArray.js"),
    initCloneObject = __webpack_require__(/*! ./_initCloneObject */ "./node_modules/lodash/_initCloneObject.js"),
    isArguments = __webpack_require__(/*! ./isArguments */ "./node_modules/lodash/isArguments.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isArrayLikeObject = __webpack_require__(/*! ./isArrayLikeObject */ "./node_modules/lodash/isArrayLikeObject.js"),
    isBuffer = __webpack_require__(/*! ./isBuffer */ "./node_modules/lodash/isBuffer.js"),
    isFunction = __webpack_require__(/*! ./isFunction */ "./node_modules/lodash/isFunction.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    isPlainObject = __webpack_require__(/*! ./isPlainObject */ "./node_modules/lodash/isPlainObject.js"),
    isTypedArray = __webpack_require__(/*! ./isTypedArray */ "./node_modules/lodash/isTypedArray.js"),
    safeGet = __webpack_require__(/*! ./_safeGet */ "./node_modules/lodash/_safeGet.js"),
    toPlainObject = __webpack_require__(/*! ./toPlainObject */ "./node_modules/lodash/toPlainObject.js");

/**
 * A specialized version of `baseMerge` for arrays and objects which performs
 * deep merges and tracks traversed objects enabling objects with circular
 * references to be merged.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {string} key The key of the value to merge.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} mergeFunc The function to merge values.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = safeGet(object, key),
      srcValue = safeGet(source, key),
      stacked = stack.get(srcValue);

  if (stacked) {
    assignMergeValue(object, key, stacked);
    return;
  }
  var newValue = customizer
    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
    : undefined;

  var isCommon = newValue === undefined;

  if (isCommon) {
    var isArr = isArray(srcValue),
        isBuff = !isArr && isBuffer(srcValue),
        isTyped = !isArr && !isBuff && isTypedArray(srcValue);

    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray(objValue)) {
        newValue = objValue;
      }
      else if (isArrayLikeObject(objValue)) {
        newValue = copyArray(objValue);
      }
      else if (isBuff) {
        isCommon = false;
        newValue = cloneBuffer(srcValue, true);
      }
      else if (isTyped) {
        isCommon = false;
        newValue = cloneTypedArray(srcValue, true);
      }
      else {
        newValue = [];
      }
    }
    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
      newValue = objValue;
      if (isArguments(objValue)) {
        newValue = toPlainObject(objValue);
      }
      else if (!isObject(objValue) || isFunction(objValue)) {
        newValue = initCloneObject(srcValue);
      }
    }
    else {
      isCommon = false;
    }
  }
  if (isCommon) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack['delete'](srcValue);
  }
  assignMergeValue(object, key, newValue);
}

module.exports = baseMergeDeep;


/***/ }),

/***/ "./node_modules/lodash/_baseRest.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseRest.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__(/*! ./identity */ "./node_modules/lodash/identity.js"),
    overRest = __webpack_require__(/*! ./_overRest */ "./node_modules/lodash/_overRest.js"),
    setToString = __webpack_require__(/*! ./_setToString */ "./node_modules/lodash/_setToString.js");

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

module.exports = baseRest;


/***/ }),

/***/ "./node_modules/lodash/_baseSetToString.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseSetToString.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var constant = __webpack_require__(/*! ./constant */ "./node_modules/lodash/constant.js"),
    defineProperty = __webpack_require__(/*! ./_defineProperty */ "./node_modules/lodash/_defineProperty.js"),
    identity = __webpack_require__(/*! ./identity */ "./node_modules/lodash/identity.js");

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;


/***/ }),

/***/ "./node_modules/lodash/_baseTimes.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseTimes.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;


/***/ }),

/***/ "./node_modules/lodash/_baseUnary.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseUnary.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

module.exports = baseUnary;


/***/ }),

/***/ "./node_modules/lodash/_cloneArrayBuffer.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_cloneArrayBuffer.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Uint8Array = __webpack_require__(/*! ./_Uint8Array */ "./node_modules/lodash/_Uint8Array.js");

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

module.exports = cloneArrayBuffer;


/***/ }),

/***/ "./node_modules/lodash/_cloneBuffer.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_cloneBuffer.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/lodash/_cloneTypedArray.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_cloneTypedArray.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(/*! ./_cloneArrayBuffer */ "./node_modules/lodash/_cloneArrayBuffer.js");

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

module.exports = cloneTypedArray;


/***/ }),

/***/ "./node_modules/lodash/_copyArray.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_copyArray.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = copyArray;


/***/ }),

/***/ "./node_modules/lodash/_copyObject.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_copyObject.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(/*! ./_assignValue */ "./node_modules/lodash/_assignValue.js"),
    baseAssignValue = __webpack_require__(/*! ./_baseAssignValue */ "./node_modules/lodash/_baseAssignValue.js");

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;


/***/ }),

/***/ "./node_modules/lodash/_coreJsData.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_coreJsData.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;


/***/ }),

/***/ "./node_modules/lodash/_createAssigner.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_createAssigner.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseRest = __webpack_require__(/*! ./_baseRest */ "./node_modules/lodash/_baseRest.js"),
    isIterateeCall = __webpack_require__(/*! ./_isIterateeCall */ "./node_modules/lodash/_isIterateeCall.js");

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

module.exports = createAssigner;


/***/ }),

/***/ "./node_modules/lodash/_createBaseFor.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_createBaseFor.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

module.exports = createBaseFor;


/***/ }),

/***/ "./node_modules/lodash/_defineProperty.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_defineProperty.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js");

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

module.exports = defineProperty;


/***/ }),

/***/ "./node_modules/lodash/_freeGlobal.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_freeGlobal.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/lodash/_getMapData.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getMapData.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isKeyable = __webpack_require__(/*! ./_isKeyable */ "./node_modules/lodash/_isKeyable.js");

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

module.exports = getMapData;


/***/ }),

/***/ "./node_modules/lodash/_getNative.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getNative.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIsNative = __webpack_require__(/*! ./_baseIsNative */ "./node_modules/lodash/_baseIsNative.js"),
    getValue = __webpack_require__(/*! ./_getValue */ "./node_modules/lodash/_getValue.js");

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;


/***/ }),

/***/ "./node_modules/lodash/_getPrototype.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_getPrototype.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(/*! ./_overArg */ "./node_modules/lodash/_overArg.js");

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;


/***/ }),

/***/ "./node_modules/lodash/_getRawTag.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getRawTag.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;


/***/ }),

/***/ "./node_modules/lodash/_getValue.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_getValue.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;


/***/ }),

/***/ "./node_modules/lodash/_hashClear.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_hashClear.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ "./node_modules/lodash/_nativeCreate.js");

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;


/***/ }),

/***/ "./node_modules/lodash/_hashDelete.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_hashDelete.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;


/***/ }),

/***/ "./node_modules/lodash/_hashGet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashGet.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ "./node_modules/lodash/_nativeCreate.js");

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;


/***/ }),

/***/ "./node_modules/lodash/_hashHas.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashHas.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ "./node_modules/lodash/_nativeCreate.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

module.exports = hashHas;


/***/ }),

/***/ "./node_modules/lodash/_hashSet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashSet.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ "./node_modules/lodash/_nativeCreate.js");

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;


/***/ }),

/***/ "./node_modules/lodash/_initCloneObject.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_initCloneObject.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseCreate = __webpack_require__(/*! ./_baseCreate */ "./node_modules/lodash/_baseCreate.js"),
    getPrototype = __webpack_require__(/*! ./_getPrototype */ "./node_modules/lodash/_getPrototype.js"),
    isPrototype = __webpack_require__(/*! ./_isPrototype */ "./node_modules/lodash/_isPrototype.js");

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

module.exports = initCloneObject;


/***/ }),

/***/ "./node_modules/lodash/_isIndex.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_isIndex.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;


/***/ }),

/***/ "./node_modules/lodash/_isIterateeCall.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_isIterateeCall.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(/*! ./eq */ "./node_modules/lodash/eq.js"),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js"),
    isIndex = __webpack_require__(/*! ./_isIndex */ "./node_modules/lodash/_isIndex.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js");

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

module.exports = isIterateeCall;


/***/ }),

/***/ "./node_modules/lodash/_isKeyable.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_isKeyable.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

module.exports = isKeyable;


/***/ }),

/***/ "./node_modules/lodash/_isMasked.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_isMasked.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var coreJsData = __webpack_require__(/*! ./_coreJsData */ "./node_modules/lodash/_coreJsData.js");

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;


/***/ }),

/***/ "./node_modules/lodash/_isPrototype.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_isPrototype.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

module.exports = isPrototype;


/***/ }),

/***/ "./node_modules/lodash/_listCacheClear.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_listCacheClear.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;


/***/ }),

/***/ "./node_modules/lodash/_listCacheDelete.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_listCacheDelete.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ "./node_modules/lodash/_assocIndexOf.js");

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;


/***/ }),

/***/ "./node_modules/lodash/_listCacheGet.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheGet.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ "./node_modules/lodash/_assocIndexOf.js");

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;


/***/ }),

/***/ "./node_modules/lodash/_listCacheHas.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheHas.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ "./node_modules/lodash/_assocIndexOf.js");

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;


/***/ }),

/***/ "./node_modules/lodash/_listCacheSet.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheSet.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ "./node_modules/lodash/_assocIndexOf.js");

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;


/***/ }),

/***/ "./node_modules/lodash/_mapCacheClear.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_mapCacheClear.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Hash = __webpack_require__(/*! ./_Hash */ "./node_modules/lodash/_Hash.js"),
    ListCache = __webpack_require__(/*! ./_ListCache */ "./node_modules/lodash/_ListCache.js"),
    Map = __webpack_require__(/*! ./_Map */ "./node_modules/lodash/_Map.js");

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

module.exports = mapCacheClear;


/***/ }),

/***/ "./node_modules/lodash/_mapCacheDelete.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_mapCacheDelete.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ "./node_modules/lodash/_getMapData.js");

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;


/***/ }),

/***/ "./node_modules/lodash/_mapCacheGet.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheGet.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ "./node_modules/lodash/_getMapData.js");

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;


/***/ }),

/***/ "./node_modules/lodash/_mapCacheHas.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheHas.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ "./node_modules/lodash/_getMapData.js");

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;


/***/ }),

/***/ "./node_modules/lodash/_mapCacheSet.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheSet.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ "./node_modules/lodash/_getMapData.js");

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;


/***/ }),

/***/ "./node_modules/lodash/_nativeCreate.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_nativeCreate.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js");

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;


/***/ }),

/***/ "./node_modules/lodash/_nativeKeysIn.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_nativeKeysIn.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = nativeKeysIn;


/***/ }),

/***/ "./node_modules/lodash/_nodeUtil.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_nodeUtil.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ "./node_modules/lodash/_freeGlobal.js");

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/lodash/_objectToString.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_objectToString.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;


/***/ }),

/***/ "./node_modules/lodash/_overArg.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_overArg.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;


/***/ }),

/***/ "./node_modules/lodash/_overRest.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_overRest.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var apply = __webpack_require__(/*! ./_apply */ "./node_modules/lodash/_apply.js");

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;


/***/ }),

/***/ "./node_modules/lodash/_root.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/_root.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ "./node_modules/lodash/_freeGlobal.js");

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;


/***/ }),

/***/ "./node_modules/lodash/_safeGet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_safeGet.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function safeGet(object, key) {
  if (key === 'constructor' && typeof object[key] === 'function') {
    return;
  }

  if (key == '__proto__') {
    return;
  }

  return object[key];
}

module.exports = safeGet;


/***/ }),

/***/ "./node_modules/lodash/_setToString.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_setToString.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseSetToString = __webpack_require__(/*! ./_baseSetToString */ "./node_modules/lodash/_baseSetToString.js"),
    shortOut = __webpack_require__(/*! ./_shortOut */ "./node_modules/lodash/_shortOut.js");

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = shortOut(baseSetToString);

module.exports = setToString;


/***/ }),

/***/ "./node_modules/lodash/_shortOut.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_shortOut.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;


/***/ }),

/***/ "./node_modules/lodash/_stackClear.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_stackClear.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(/*! ./_ListCache */ "./node_modules/lodash/_ListCache.js");

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

module.exports = stackClear;


/***/ }),

/***/ "./node_modules/lodash/_stackDelete.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_stackDelete.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;


/***/ }),

/***/ "./node_modules/lodash/_stackGet.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackGet.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;


/***/ }),

/***/ "./node_modules/lodash/_stackHas.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackHas.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;


/***/ }),

/***/ "./node_modules/lodash/_stackSet.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackSet.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(/*! ./_ListCache */ "./node_modules/lodash/_ListCache.js"),
    Map = __webpack_require__(/*! ./_Map */ "./node_modules/lodash/_Map.js"),
    MapCache = __webpack_require__(/*! ./_MapCache */ "./node_modules/lodash/_MapCache.js");

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;


/***/ }),

/***/ "./node_modules/lodash/_toSource.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_toSource.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;


/***/ }),

/***/ "./node_modules/lodash/constant.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/constant.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

module.exports = constant;


/***/ }),

/***/ "./node_modules/lodash/debounce.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/debounce.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    now = __webpack_require__(/*! ./now */ "./node_modules/lodash/now.js"),
    toNumber = __webpack_require__(/*! ./toNumber */ "./node_modules/lodash/toNumber.js");

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall;

    return maxing
      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
      : timeWaiting;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

module.exports = debounce;


/***/ }),

/***/ "./node_modules/lodash/eq.js":
/*!***********************************!*\
  !*** ./node_modules/lodash/eq.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;


/***/ }),

/***/ "./node_modules/lodash/identity.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/identity.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;


/***/ }),

/***/ "./node_modules/lodash/isArguments.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/isArguments.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIsArguments = __webpack_require__(/*! ./_baseIsArguments */ "./node_modules/lodash/_baseIsArguments.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;


/***/ }),

/***/ "./node_modules/lodash/isArray.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/isArray.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;


/***/ }),

/***/ "./node_modules/lodash/isArrayLike.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/isArrayLike.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(/*! ./isFunction */ "./node_modules/lodash/isFunction.js"),
    isLength = __webpack_require__(/*! ./isLength */ "./node_modules/lodash/isLength.js");

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;


/***/ }),

/***/ "./node_modules/lodash/isArrayLikeObject.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/isArrayLikeObject.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

module.exports = isArrayLikeObject;


/***/ }),

/***/ "./node_modules/lodash/isBuffer.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isBuffer.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js"),
    stubFalse = __webpack_require__(/*! ./stubFalse */ "./node_modules/lodash/stubFalse.js");

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/lodash/isFunction.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/isFunction.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js");

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;


/***/ }),

/***/ "./node_modules/lodash/isLength.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isLength.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;


/***/ }),

/***/ "./node_modules/lodash/isObject.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isObject.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;


/***/ }),

/***/ "./node_modules/lodash/isObjectLike.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/isObjectLike.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;


/***/ }),

/***/ "./node_modules/lodash/isPlainObject.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/isPlainObject.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    getPrototype = __webpack_require__(/*! ./_getPrototype */ "./node_modules/lodash/_getPrototype.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;


/***/ }),

/***/ "./node_modules/lodash/isSymbol.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isSymbol.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;


/***/ }),

/***/ "./node_modules/lodash/isTypedArray.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/isTypedArray.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIsTypedArray = __webpack_require__(/*! ./_baseIsTypedArray */ "./node_modules/lodash/_baseIsTypedArray.js"),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ "./node_modules/lodash/_baseUnary.js"),
    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ "./node_modules/lodash/_nodeUtil.js");

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;


/***/ }),

/***/ "./node_modules/lodash/keysIn.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/keysIn.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(/*! ./_arrayLikeKeys */ "./node_modules/lodash/_arrayLikeKeys.js"),
    baseKeysIn = __webpack_require__(/*! ./_baseKeysIn */ "./node_modules/lodash/_baseKeysIn.js"),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js");

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

module.exports = keysIn;


/***/ }),

/***/ "./node_modules/lodash/merge.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/merge.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseMerge = __webpack_require__(/*! ./_baseMerge */ "./node_modules/lodash/_baseMerge.js"),
    createAssigner = __webpack_require__(/*! ./_createAssigner */ "./node_modules/lodash/_createAssigner.js");

/**
 * This method is like `_.assign` except that it recursively merges own and
 * inherited enumerable string keyed properties of source objects into the
 * destination object. Source properties that resolve to `undefined` are
 * skipped if a destination value exists. Array and plain object properties
 * are merged recursively. Other objects and value types are overridden by
 * assignment. Source objects are applied from left to right. Subsequent
 * sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {
 *   'a': [{ 'b': 2 }, { 'd': 4 }]
 * };
 *
 * var other = {
 *   'a': [{ 'c': 3 }, { 'e': 5 }]
 * };
 *
 * _.merge(object, other);
 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
 */
var merge = createAssigner(function(object, source, srcIndex) {
  baseMerge(object, source, srcIndex);
});

module.exports = merge;


/***/ }),

/***/ "./node_modules/lodash/now.js":
/*!************************************!*\
  !*** ./node_modules/lodash/now.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

module.exports = now;


/***/ }),

/***/ "./node_modules/lodash/stubFalse.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/stubFalse.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;


/***/ }),

/***/ "./node_modules/lodash/throttle.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/throttle.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var debounce = __webpack_require__(/*! ./debounce */ "./node_modules/lodash/debounce.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js");

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed `func` invocations and a `flush` method to
 * immediately invoke them. Provide `options` to indicate whether `func`
 * should be invoked on the leading and/or trailing edge of the `wait`
 * timeout. The `func` is invoked with the last arguments provided to the
 * throttled function. Subsequent calls to the throttled function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the throttled function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=true]
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // Avoid excessively updating the position while scrolling.
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
 * jQuery(element).on('click', throttled);
 *
 * // Cancel the trailing throttled invocation.
 * jQuery(window).on('popstate', throttled.cancel);
 */
function throttle(func, wait, options) {
  var leading = true,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  if (isObject(options)) {
    leading = 'leading' in options ? !!options.leading : leading;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }
  return debounce(func, wait, {
    'leading': leading,
    'maxWait': wait,
    'trailing': trailing
  });
}

module.exports = throttle;


/***/ }),

/***/ "./node_modules/lodash/toNumber.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/toNumber.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    isSymbol = __webpack_require__(/*! ./isSymbol */ "./node_modules/lodash/isSymbol.js");

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = toNumber;


/***/ }),

/***/ "./node_modules/lodash/toPlainObject.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/toPlainObject.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ "./node_modules/lodash/_copyObject.js"),
    keysIn = __webpack_require__(/*! ./keysIn */ "./node_modules/lodash/keysIn.js");

/**
 * Converts `value` to a plain object flattening inherited enumerable string
 * keyed properties of `value` to own properties of the plain object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Object} Returns the converted plain object.
 * @example
 *
 * function Foo() {
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.assign({ 'a': 1 }, new Foo);
 * // => { 'a': 1, 'b': 2 }
 *
 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
 * // => { 'a': 1, 'b': 2, 'c': 3 }
 */
function toPlainObject(value) {
  return copyObject(value, keysIn(value));
}

module.exports = toPlainObject;


/***/ }),

/***/ "./node_modules/object-assign/index.js":
/*!*********************************************!*\
  !*** ./node_modules/object-assign/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning = function() {};

if (true) {
  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
  var loggedTypeFailures = {};
  var has = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (true) {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  if (true) {
    loggedTypeFailures = {};
  }
}

module.exports = checkPropTypes;


/***/ }),

/***/ "./node_modules/prop-types/factoryWithTypeCheckers.js":
/*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");
var assign = __webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js");

var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
var checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js");

var has = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning = function() {};

if (true) {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (true) {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if ( true && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (true) {
        if (arguments.length > 1) {
          printWarning(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : undefined;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),

/***/ "./node_modules/prop-types/index.js":
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (true) {
  var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ "./node_modules/prop-types/factoryWithTypeCheckers.js")(ReactIs.isElement, throwOnDirectAccess);
} else {}


/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),

/***/ "./node_modules/react-animate-height/lib/AnimateHeight.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-animate-height/lib/AnimateHeight.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(/*! react */ "react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ANIMATION_STATE_CLASSES = {
  animating: 'rah-animating',
  animatingUp: 'rah-animating--up',
  animatingDown: 'rah-animating--down',
  animatingToHeightZero: 'rah-animating--to-height-zero',
  animatingToHeightAuto: 'rah-animating--to-height-auto',
  animatingToHeightSpecific: 'rah-animating--to-height-specific',
  static: 'rah-static',
  staticHeightZero: 'rah-static--height-zero',
  staticHeightAuto: 'rah-static--height-auto',
  staticHeightSpecific: 'rah-static--height-specific'
};

var PROPS_TO_OMIT = ['animateOpacity', 'animationStateClasses', 'applyInlineTransitions', 'children', 'contentClassName', 'delay', 'duration', 'easing', 'height', 'onAnimationEnd', 'onAnimationStart'];

function omit(obj) {
  for (var _len = arguments.length, keys = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    keys[_key - 1] = arguments[_key];
  }

  if (!keys.length) {
    return obj;
  }

  var res = {};
  var objectKeys = Object.keys(obj);

  for (var i = 0; i < objectKeys.length; i++) {
    var key = objectKeys[i];

    if (keys.indexOf(key) === -1) {
      res[key] = obj[key];
    }
  }

  return res;
}

// Start animation helper using nested requestAnimationFrames
function startAnimationHelper(callback) {
  var requestAnimationFrameIDs = [];

  requestAnimationFrameIDs[0] = requestAnimationFrame(function () {
    requestAnimationFrameIDs[1] = requestAnimationFrame(function () {
      callback();
    });
  });

  return requestAnimationFrameIDs;
}

function cancelAnimationFrames(requestAnimationFrameIDs) {
  requestAnimationFrameIDs.forEach(function (id) {
    return cancelAnimationFrame(id);
  });
}

function isNumber(n) {
  return !isNaN(parseFloat(n)) && isFinite(n);
}

function isPercentage(height) {
  // Percentage height
  return typeof height === 'string' && height.search('%') === height.length - 1 && isNumber(height.substr(0, height.length - 1));
}

function runCallback(callback, params) {
  if (callback && typeof callback === 'function') {
    callback(params);
  }
}

var AnimateHeight = function (_React$Component) {
  _inherits(AnimateHeight, _React$Component);

  function AnimateHeight(props) {
    _classCallCheck(this, AnimateHeight);

    var _this = _possibleConstructorReturn(this, (AnimateHeight.__proto__ || Object.getPrototypeOf(AnimateHeight)).call(this, props));

    _this.animationFrameIDs = [];

    var height = 'auto';
    var overflow = 'visible';

    if (isNumber(props.height)) {
      // If value is string "0" make sure we convert it to number 0
      height = props.height < 0 || props.height === '0' ? 0 : props.height;
      overflow = 'hidden';
    } else if (isPercentage(props.height)) {
      // If value is string "0%" make sure we convert it to number 0
      height = props.height === '0%' ? 0 : props.height;
      overflow = 'hidden';
    }

    _this.animationStateClasses = _extends({}, ANIMATION_STATE_CLASSES, props.animationStateClasses);

    var animationStateClasses = _this.getStaticStateClasses(height);

    _this.state = {
      animationStateClasses: animationStateClasses,
      height: height,
      overflow: overflow,
      shouldUseTransitions: false
    };
    return _this;
  }

  _createClass(AnimateHeight, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var height = this.state.height;

      // Hide content if height is 0 (to prevent tabbing into it)
      // Check for contentElement is added cause this would fail in tests (react-test-renderer)
      // Read more here: https://github.com/Stanko/react-animate-height/issues/17

      if (this.contentElement && this.contentElement.style) {
        this.hideContent(height);
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps, prevState) {
      var _this2 = this;

      var _props = this.props,
          delay = _props.delay,
          duration = _props.duration,
          height = _props.height,
          onAnimationEnd = _props.onAnimationEnd,
          onAnimationStart = _props.onAnimationStart;

      // Check if 'height' prop has changed

      if (this.contentElement && height !== prevProps.height) {
        var _cx;

        // Remove display: none from the content div
        // if it was hidden to prevent tabbing into it
        this.showContent(prevState.height);

        // Cache content height
        this.contentElement.style.overflow = 'hidden';
        var contentHeight = this.contentElement.offsetHeight;
        this.contentElement.style.overflow = '';

        // set total animation time
        var totalDuration = duration + delay;

        var newHeight = null;
        var timeoutState = {
          height: null, // it will be always set to either 'auto' or specific number
          overflow: 'hidden'
        };
        var isCurrentHeightAuto = prevState.height === 'auto';

        if (isNumber(height)) {
          // If value is string "0" make sure we convert it to number 0
          newHeight = height < 0 || height === '0' ? 0 : height;
          timeoutState.height = newHeight;
        } else if (isPercentage(height)) {
          // If value is string "0%" make sure we convert it to number 0
          newHeight = height === '0%' ? 0 : height;
          timeoutState.height = newHeight;
        } else {
          // If not, animate to content height
          // and then reset to auto
          newHeight = contentHeight; // TODO solve contentHeight = 0
          timeoutState.height = 'auto';
          timeoutState.overflow = null;
        }

        if (isCurrentHeightAuto) {
          // This is the height to be animated to
          timeoutState.height = newHeight;

          // If previous height was 'auto'
          // set starting height explicitly to be able to use transition
          newHeight = contentHeight;
        }

        // Animation classes
        var animationStateClasses = (0, _classnames2.default)((_cx = {}, _defineProperty(_cx, this.animationStateClasses.animating, true), _defineProperty(_cx, this.animationStateClasses.animatingUp, prevProps.height === 'auto' || height < prevProps.height), _defineProperty(_cx, this.animationStateClasses.animatingDown, height === 'auto' || height > prevProps.height), _defineProperty(_cx, this.animationStateClasses.animatingToHeightZero, timeoutState.height === 0), _defineProperty(_cx, this.animationStateClasses.animatingToHeightAuto, timeoutState.height === 'auto'), _defineProperty(_cx, this.animationStateClasses.animatingToHeightSpecific, timeoutState.height > 0), _cx));

        // Animation classes to be put after animation is complete
        var timeoutAnimationStateClasses = this.getStaticStateClasses(timeoutState.height);

        // Set starting height and animating classes
        // We are safe to call set state as it will not trigger infinite loop
        // because of the "height !== prevProps.height" check
        this.setState({ // eslint-disable-line react/no-did-update-set-state
          animationStateClasses: animationStateClasses,
          height: newHeight,
          overflow: 'hidden',
          // When animating from 'auto' we first need to set fixed height
          // that change should be animated
          shouldUseTransitions: !isCurrentHeightAuto
        });

        // Clear timeouts
        clearTimeout(this.timeoutID);
        clearTimeout(this.animationClassesTimeoutID);

        if (isCurrentHeightAuto) {
          // When animating from 'auto' we use a short timeout to start animation
          // after setting fixed height above
          timeoutState.shouldUseTransitions = true;

          cancelAnimationFrames(this.animationFrameIDs);
          this.animationFrameIDs = startAnimationHelper(function () {
            _this2.setState(timeoutState);

            // ANIMATION STARTS, run a callback if it exists
            runCallback(onAnimationStart, { newHeight: timeoutState.height });
          });

          // Set static classes and remove transitions when animation ends
          this.animationClassesTimeoutID = setTimeout(function () {
            _this2.setState({
              animationStateClasses: timeoutAnimationStateClasses,
              shouldUseTransitions: false
            });

            // ANIMATION ENDS
            // Hide content if height is 0 (to prevent tabbing into it)
            _this2.hideContent(timeoutState.height);
            // Run a callback if it exists
            runCallback(onAnimationEnd, { newHeight: timeoutState.height });
          }, totalDuration);
        } else {
          // ANIMATION STARTS, run a callback if it exists
          runCallback(onAnimationStart, { newHeight: newHeight });

          // Set end height, classes and remove transitions when animation is complete
          this.timeoutID = setTimeout(function () {
            timeoutState.animationStateClasses = timeoutAnimationStateClasses;
            timeoutState.shouldUseTransitions = false;

            _this2.setState(timeoutState);

            // ANIMATION ENDS
            // If height is auto, don't hide the content
            // (case when element is empty, therefore height is 0)
            if (height !== 'auto') {
              // Hide content if height is 0 (to prevent tabbing into it)
              _this2.hideContent(newHeight); // TODO solve newHeight = 0
            }
            // Run a callback if it exists
            runCallback(onAnimationEnd, { newHeight: newHeight });
          }, totalDuration);
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      cancelAnimationFrames(this.animationFrameIDs);

      clearTimeout(this.timeoutID);
      clearTimeout(this.animationClassesTimeoutID);

      this.timeoutID = null;
      this.animationClassesTimeoutID = null;
      this.animationStateClasses = null;
    }
  }, {
    key: 'showContent',
    value: function showContent(height) {
      if (height === 0) {
        this.contentElement.style.display = '';
      }
    }
  }, {
    key: 'hideContent',
    value: function hideContent(newHeight) {
      if (newHeight === 0) {
        this.contentElement.style.display = 'none';
      }
    }
  }, {
    key: 'getStaticStateClasses',
    value: function getStaticStateClasses(height) {
      var _cx2;

      return (0, _classnames2.default)((_cx2 = {}, _defineProperty(_cx2, this.animationStateClasses.static, true), _defineProperty(_cx2, this.animationStateClasses.staticHeightZero, height === 0), _defineProperty(_cx2, this.animationStateClasses.staticHeightSpecific, height > 0), _defineProperty(_cx2, this.animationStateClasses.staticHeightAuto, height === 'auto'), _cx2));
    }
  }, {
    key: 'render',
    value: function render() {
      var _cx3,
          _this3 = this;

      var _props2 = this.props,
          animateOpacity = _props2.animateOpacity,
          applyInlineTransitions = _props2.applyInlineTransitions,
          children = _props2.children,
          className = _props2.className,
          contentClassName = _props2.contentClassName,
          duration = _props2.duration,
          easing = _props2.easing,
          delay = _props2.delay,
          style = _props2.style;
      var _state = this.state,
          height = _state.height,
          overflow = _state.overflow,
          animationStateClasses = _state.animationStateClasses,
          shouldUseTransitions = _state.shouldUseTransitions;


      var componentStyle = _extends({}, style, {
        height: height,
        overflow: overflow || style.overflow
      });

      if (shouldUseTransitions && applyInlineTransitions) {
        componentStyle.transition = 'height ' + duration + 'ms ' + easing + ' ' + delay + 'ms';

        // Include transition passed through styles
        if (style.transition) {
          componentStyle.transition = style.transition + ', ' + componentStyle.transition;
        }

        // Add webkit vendor prefix still used by opera, blackberry...
        componentStyle.WebkitTransition = componentStyle.transition;
      }

      var contentStyle = {};

      if (animateOpacity) {
        contentStyle.transition = 'opacity ' + duration + 'ms ' + easing + ' ' + delay + 'ms';
        // Add webkit vendor prefix still used by opera, blackberry...
        contentStyle.WebkitTransition = contentStyle.transition;

        if (height === 0) {
          contentStyle.opacity = 0;
        }
      }

      var componentClasses = (0, _classnames2.default)((_cx3 = {}, _defineProperty(_cx3, animationStateClasses, true), _defineProperty(_cx3, className, className), _cx3));

      return _react2.default.createElement(
        'div',
        _extends({}, omit.apply(undefined, [this.props].concat(PROPS_TO_OMIT)), {
          'aria-hidden': height === 0,
          className: componentClasses,
          style: componentStyle
        }),
        _react2.default.createElement(
          'div',
          {
            className: contentClassName,
            style: contentStyle,
            ref: function ref(el) {
              return _this3.contentElement = el;
            }
          },
          children
        )
      );
    }
  }]);

  return AnimateHeight;
}(_react2.default.Component);

var heightPropType = function heightPropType(props, propName, componentName) {
  var value = props[propName];

  if (typeof value === 'number' && value >= 0 || isPercentage(value) || value === 'auto') {
    return null;
  }

  return new TypeError('value "' + value + '" of type "' + (typeof value === 'undefined' ? 'undefined' : _typeof(value)) + '" is invalid type for ' + propName + ' in ' + componentName + '. ' + 'It needs to be a positive number, string "auto" or percentage string (e.g. "15%").');
};

AnimateHeight.propTypes = {
  animateOpacity: _propTypes2.default.bool,
  animationStateClasses: _propTypes2.default.object,
  applyInlineTransitions: _propTypes2.default.bool,
  children: _propTypes2.default.any.isRequired,
  className: _propTypes2.default.string,
  contentClassName: _propTypes2.default.string,
  duration: _propTypes2.default.number,
  delay: _propTypes2.default.number,
  easing: _propTypes2.default.string,
  height: heightPropType,
  onAnimationEnd: _propTypes2.default.func,
  onAnimationStart: _propTypes2.default.func,
  style: _propTypes2.default.object
};

AnimateHeight.defaultProps = {
  animateOpacity: false,
  animationStateClasses: ANIMATION_STATE_CLASSES,
  applyInlineTransitions: true,
  duration: 250,
  delay: 0,
  easing: 'ease',
  style: {}
};

exports.default = AnimateHeight;

/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.12.0
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE);
}

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */
var lowPriorityWarningWithoutStack = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });

    if (typeof console !== 'undefined') {
      console.warn(message);
    }

    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarningWithoutStack = function (condition, format) {
    if (format === undefined) {
      throw new Error('`lowPriorityWarningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(void 0, [format].concat(args));
    }
  };
}

var lowPriorityWarningWithoutStack$1 = lowPriorityWarningWithoutStack;

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true;
      lowPriorityWarningWithoutStack$1(false, 'The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.typeOf = typeOf;
exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isValidElementType = isValidElementType;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
  })();
}


/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ "./node_modules/react-is/cjs/react-is.development.js");
}


/***/ }),

/***/ "./node_modules/react-transition-group/esm/CSSTransition.js":
/*!******************************************************************!*\
  !*** ./node_modules/react-transition-group/esm/CSSTransition.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var dom_helpers_addClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! dom-helpers/addClass */ "./node_modules/dom-helpers/esm/addClass.js");
/* harmony import */ var dom_helpers_removeClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! dom-helpers/removeClass */ "./node_modules/dom-helpers/esm/removeClass.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _Transition__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Transition */ "./node_modules/react-transition-group/esm/Transition.js");
/* harmony import */ var _utils_PropTypes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/PropTypes */ "./node_modules/react-transition-group/esm/utils/PropTypes.js");










var _addClass = function addClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return Object(dom_helpers_addClass__WEBPACK_IMPORTED_MODULE_4__["default"])(node, c);
  });
};

var removeClass = function removeClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return Object(dom_helpers_removeClass__WEBPACK_IMPORTED_MODULE_5__["default"])(node, c);
  });
};
/**
 * A transition component inspired by the excellent
 * [ng-animate](http://www.nganimate.org/) library, you should use it if you're
 * using CSS transitions or animations. It's built upon the
 * [`Transition`](https://reactcommunity.org/react-transition-group/transition)
 * component, so it inherits all of its props.
 *
 * `CSSTransition` applies a pair of class names during the `appear`, `enter`,
 * and `exit` states of the transition. The first class is applied and then a
 * second `*-active` class in order to activate the CSS transition. After the
 * transition, matching `*-done` class names are applied to persist the
 * transition state.
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <CSSTransition in={inProp} timeout={200} classNames="my-node">
 *         <div>
 *           {"I'll receive my-node-* classes"}
 *         </div>
 *       </CSSTransition>
 *       <button type="button" onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the `in` prop is set to `true`, the child component will first receive
 * the class `example-enter`, then the `example-enter-active` will be added in
 * the next tick. `CSSTransition` [forces a
 * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)
 * between before adding the `example-enter-active`. This is an important trick
 * because it allows us to transition between `example-enter` and
 * `example-enter-active` even though they were added immediately one after
 * another. Most notably, this is what makes it possible for us to animate
 * _appearance_.
 *
 * ```css
 * .my-node-enter {
 *   opacity: 0;
 * }
 * .my-node-enter-active {
 *   opacity: 1;
 *   transition: opacity 200ms;
 * }
 * .my-node-exit {
 *   opacity: 1;
 * }
 * .my-node-exit-active {
 *   opacity: 0;
 *   transition: opacity 200ms;
 * }
 * ```
 *
 * `*-active` classes represent which styles you want to animate **to**.
 *
 * **Note**: If you're using the
 * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)
 * prop, make sure to define styles for `.appear-*` classes as well.
 */


var CSSTransition =
/*#__PURE__*/
function (_React$Component) {
  Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__["default"])(CSSTransition, _React$Component);

  function CSSTransition() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    };

    _this.onEnter = function (node, appearing) {
      _this.removeClasses(node, 'exit');

      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');

      if (_this.props.onEnter) {
        _this.props.onEnter(node, appearing);
      }
    };

    _this.onEntering = function (node, appearing) {
      var type = appearing ? 'appear' : 'enter';

      _this.addClass(node, type, 'active');

      if (_this.props.onEntering) {
        _this.props.onEntering(node, appearing);
      }
    };

    _this.onEntered = function (node, appearing) {
      var type = appearing ? 'appear' : 'enter';

      _this.removeClasses(node, type);

      _this.addClass(node, type, 'done');

      if (_this.props.onEntered) {
        _this.props.onEntered(node, appearing);
      }
    };

    _this.onExit = function (node) {
      _this.removeClasses(node, 'appear');

      _this.removeClasses(node, 'enter');

      _this.addClass(node, 'exit', 'base');

      if (_this.props.onExit) {
        _this.props.onExit(node);
      }
    };

    _this.onExiting = function (node) {
      _this.addClass(node, 'exit', 'active');

      if (_this.props.onExiting) {
        _this.props.onExiting(node);
      }
    };

    _this.onExited = function (node) {
      _this.removeClasses(node, 'exit');

      _this.addClass(node, 'exit', 'done');

      if (_this.props.onExited) {
        _this.props.onExited(node);
      }
    };

    _this.getClassNames = function (type) {
      var classNames = _this.props.classNames;
      var isStringClassNames = typeof classNames === 'string';
      var prefix = isStringClassNames && classNames ? classNames + "-" : '';
      var baseClassName = isStringClassNames ? "" + prefix + type : classNames[type];
      var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames[type + "Active"];
      var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames[type + "Done"];
      return {
        baseClassName: baseClassName,
        activeClassName: activeClassName,
        doneClassName: doneClassName
      };
    };

    return _this;
  }

  var _proto = CSSTransition.prototype;

  _proto.addClass = function addClass(node, type, phase) {
    var className = this.getClassNames(type)[phase + "ClassName"];

    if (type === 'appear' && phase === 'done') {
      className += " " + this.getClassNames('enter').doneClassName;
    } // This is for to force a repaint,
    // which is necessary in order to transition styles when adding a class name.


    if (phase === 'active') {
      /* eslint-disable no-unused-expressions */
      node && node.scrollTop;
    }

    this.appliedClasses[type][phase] = className;

    _addClass(node, className);
  };

  _proto.removeClasses = function removeClasses(node, type) {
    var _this$appliedClasses$ = this.appliedClasses[type],
        baseClassName = _this$appliedClasses$.base,
        activeClassName = _this$appliedClasses$.active,
        doneClassName = _this$appliedClasses$.done;
    this.appliedClasses[type] = {};

    if (baseClassName) {
      removeClass(node, baseClassName);
    }

    if (activeClassName) {
      removeClass(node, activeClassName);
    }

    if (doneClassName) {
      removeClass(node, doneClassName);
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        _ = _this$props.classNames,
        props = Object(_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(_this$props, ["classNames"]);

    return react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_Transition__WEBPACK_IMPORTED_MODULE_7__["default"], Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };

  return CSSTransition;
}(react__WEBPACK_IMPORTED_MODULE_6___default.a.Component);

CSSTransition.defaultProps = {
  classNames: ''
};
CSSTransition.propTypes =  true ? Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, _Transition__WEBPACK_IMPORTED_MODULE_7__["default"].propTypes, {
  /**
   * The animation classNames applied to the component as it appears, enters,
   * exits or has finished the transition. A single name can be provided and it
   * will be suffixed for each stage: e.g.
   *
   * `classNames="fade"` applies `fade-appear`, `fade-appear-active`,
   * `fade-appear-done`, `fade-enter`, `fade-enter-active`, `fade-enter-done`,
   * `fade-exit`, `fade-exit-active`, and `fade-exit-done`.
   *
   * **Note**: `fade-appear-done` and `fade-enter-done` will _both_ be applied.
   * This allows you to define different behavior for when appearing is done and
   * when regular entering is done, using selectors like
   * `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply an
   * epic entrance animation when element first appears in the DOM using
   * [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
   * simply use `fade-enter-done` for defining both cases.
   *
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  appearDone: 'my-done-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * If you want to set these classes using CSS Modules:
   *
   * ```js
   * import styles from './styles.css';
   * ```
   *
   * you might want to use camelCase in your CSS file, that way could simply
   * spread them instead of listing them one by one:
   *
   * ```js
   * classNames={{ ...styles }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  appearDone?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */
  classNames: _utils_PropTypes__WEBPACK_IMPORTED_MODULE_8__["classNamesShape"],

  /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEnter: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.func,

  /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.func,

  /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntered: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * @type Function(node: HtmlElement)
   */
  onExit: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * @type Function(node: HtmlElement)
   */
  onExiting: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * @type Function(node: HtmlElement)
   */
  onExited: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.func
}) : undefined;
/* harmony default export */ __webpack_exports__["default"] = (CSSTransition);

/***/ }),

/***/ "./node_modules/react-transition-group/esm/ReplaceTransition.js":
/*!**********************************************************************!*\
  !*** ./node_modules/react-transition-group/esm/ReplaceTransition.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-dom */ "react-dom");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _TransitionGroup__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TransitionGroup */ "./node_modules/react-transition-group/esm/TransitionGroup.js");






/**
 * The `<ReplaceTransition>` component is a specialized `Transition` component
 * that animates between two children.
 *
 * ```jsx
 * <ReplaceTransition in>
 *   <Fade><div>I appear first</div></Fade>
 *   <Fade><div>I replace the above</div></Fade>
 * </ReplaceTransition>
 * ```
 */

var ReplaceTransition =
/*#__PURE__*/
function (_React$Component) {
  Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(ReplaceTransition, _React$Component);

  function ReplaceTransition() {
    var _this;

    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;

    _this.handleEnter = function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return _this.handleLifecycle('onEnter', 0, args);
    };

    _this.handleEntering = function () {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      return _this.handleLifecycle('onEntering', 0, args);
    };

    _this.handleEntered = function () {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      return _this.handleLifecycle('onEntered', 0, args);
    };

    _this.handleExit = function () {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }

      return _this.handleLifecycle('onExit', 1, args);
    };

    _this.handleExiting = function () {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }

      return _this.handleLifecycle('onExiting', 1, args);
    };

    _this.handleExited = function () {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }

      return _this.handleLifecycle('onExited', 1, args);
    };

    return _this;
  }

  var _proto = ReplaceTransition.prototype;

  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
    var _child$props;

    var children = this.props.children;
    var child = react__WEBPACK_IMPORTED_MODULE_3___default.a.Children.toArray(children)[idx];
    if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);
    if (this.props[handler]) this.props[handler](react_dom__WEBPACK_IMPORTED_MODULE_4___default.a.findDOMNode(this));
  };

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        inProp = _this$props.in,
        props = Object(_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, ["children", "in"]);

    var _React$Children$toArr = react__WEBPACK_IMPORTED_MODULE_3___default.a.Children.toArray(children),
        first = _React$Children$toArr[0],
        second = _React$Children$toArr[1];

    delete props.onEnter;
    delete props.onEntering;
    delete props.onEntered;
    delete props.onExit;
    delete props.onExiting;
    delete props.onExited;
    return react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_TransitionGroup__WEBPACK_IMPORTED_MODULE_5__["default"], props, inProp ? react__WEBPACK_IMPORTED_MODULE_3___default.a.cloneElement(first, {
      key: 'first',
      onEnter: this.handleEnter,
      onEntering: this.handleEntering,
      onEntered: this.handleEntered
    }) : react__WEBPACK_IMPORTED_MODULE_3___default.a.cloneElement(second, {
      key: 'second',
      onEnter: this.handleExit,
      onEntering: this.handleExiting,
      onEntered: this.handleExited
    }));
  };

  return ReplaceTransition;
}(react__WEBPACK_IMPORTED_MODULE_3___default.a.Component);

ReplaceTransition.propTypes =  true ? {
  in: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool.isRequired,
  children: function children(props, propName) {
    if (react__WEBPACK_IMPORTED_MODULE_3___default.a.Children.count(props[propName]) !== 2) return new Error("\"" + propName + "\" must be exactly two transition components.");
    return null;
  }
} : undefined;
/* harmony default export */ __webpack_exports__["default"] = (ReplaceTransition);

/***/ }),

/***/ "./node_modules/react-transition-group/esm/SwitchTransition.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react-transition-group/esm/SwitchTransition.js ***!
  \*********************************************************************/
/*! exports provided: modes, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modes", function() { return modes; });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _Transition__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Transition */ "./node_modules/react-transition-group/esm/Transition.js");
/* harmony import */ var _TransitionGroupContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TransitionGroupContext */ "./node_modules/react-transition-group/esm/TransitionGroupContext.js");


var _leaveRenders, _enterRenders;






function areChildrenDifferent(oldChildren, newChildren) {
  if (oldChildren === newChildren) return false;

  if (react__WEBPACK_IMPORTED_MODULE_1___default.a.isValidElement(oldChildren) && react__WEBPACK_IMPORTED_MODULE_1___default.a.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {
    return false;
  }

  return true;
}
/**
 * Enum of modes for SwitchTransition component
 * @enum { string }
 */


var modes = {
  out: 'out-in',
  in: 'in-out'
};

var callHook = function callHook(element, name, cb) {
  return function () {
    var _element$props;

    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);
    cb();
  };
};

var leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function (_ref) {
  var current = _ref.current,
      changeState = _ref.changeState;
  return react__WEBPACK_IMPORTED_MODULE_1___default.a.cloneElement(current, {
    in: false,
    onExited: callHook(current, 'onExited', function () {
      changeState(_Transition__WEBPACK_IMPORTED_MODULE_3__["ENTERING"], null);
    })
  });
}, _leaveRenders[modes.in] = function (_ref2) {
  var current = _ref2.current,
      changeState = _ref2.changeState,
      children = _ref2.children;
  return [current, react__WEBPACK_IMPORTED_MODULE_1___default.a.cloneElement(children, {
    in: true,
    onEntered: callHook(children, 'onEntered', function () {
      changeState(_Transition__WEBPACK_IMPORTED_MODULE_3__["ENTERING"]);
    })
  })];
}, _leaveRenders);
var enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function (_ref3) {
  var children = _ref3.children,
      changeState = _ref3.changeState;
  return react__WEBPACK_IMPORTED_MODULE_1___default.a.cloneElement(children, {
    in: true,
    onEntered: callHook(children, 'onEntered', function () {
      changeState(_Transition__WEBPACK_IMPORTED_MODULE_3__["ENTERED"], react__WEBPACK_IMPORTED_MODULE_1___default.a.cloneElement(children, {
        in: true
      }));
    })
  });
}, _enterRenders[modes.in] = function (_ref4) {
  var current = _ref4.current,
      children = _ref4.children,
      changeState = _ref4.changeState;
  return [react__WEBPACK_IMPORTED_MODULE_1___default.a.cloneElement(current, {
    in: false,
    onExited: callHook(current, 'onExited', function () {
      changeState(_Transition__WEBPACK_IMPORTED_MODULE_3__["ENTERED"], react__WEBPACK_IMPORTED_MODULE_1___default.a.cloneElement(children, {
        in: true
      }));
    })
  }), react__WEBPACK_IMPORTED_MODULE_1___default.a.cloneElement(children, {
    in: true
  })];
}, _enterRenders);
/**
 * A transition component inspired by the [vue transition modes](https://vuejs.org/v2/guide/transitions.html#Transition-Modes).
 * You can use it when you want to control the render between state transitions.
 * Based on the selected mode and the child's key which is the `Transition` or `CSSTransition` component, the `SwitchTransition` makes a consistent transition between them.
 *
 * If the `out-in` mode is selected, the `SwitchTransition` waits until the old child leaves and then inserts a new child.
 * If the `in-out` mode is selected, the `SwitchTransition` inserts a new child first, waits for the new child to enter and then removes the old child
 *
 * ```jsx
 *
 * function App() {
 *  const [state, setState] = useState(false);
 *  return (
 *    <SwitchTransition>
 *      <FadeTransition key={state ? "Goodbye, world!" : "Hello, world!"}
 *        addEndListener={(node, done) => node.addEventListener("transitionend", done, false)}
 *        classNames='fade' >
 *        <button onClick={() => setState(state => !state)}>
 *          {state ? "Goodbye, world!" : "Hello, world!"}
 *        </button>
 *      </FadeTransition>
 *    </SwitchTransition>
 *  )
 * }
 * ```
 */

var SwitchTransition =
/*#__PURE__*/
function (_React$Component) {
  Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(SwitchTransition, _React$Component);

  function SwitchTransition() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.state = {
      status: _Transition__WEBPACK_IMPORTED_MODULE_3__["ENTERED"],
      current: null
    };
    _this.appeared = false;

    _this.changeState = function (status, current) {
      if (current === void 0) {
        current = _this.state.current;
      }

      _this.setState({
        status: status,
        current: current
      });
    };

    return _this;
  }

  var _proto = SwitchTransition.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.appeared = true;
  };

  SwitchTransition.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    if (props.children == null) {
      return {
        current: null
      };
    }

    if (state.status === _Transition__WEBPACK_IMPORTED_MODULE_3__["ENTERING"] && props.mode === modes.in) {
      return {
        status: _Transition__WEBPACK_IMPORTED_MODULE_3__["ENTERING"]
      };
    }

    if (state.current && areChildrenDifferent(state.current, props.children)) {
      return {
        status: _Transition__WEBPACK_IMPORTED_MODULE_3__["EXITING"]
      };
    }

    return {
      current: react__WEBPACK_IMPORTED_MODULE_1___default.a.cloneElement(props.children, {
        in: true
      })
    };
  };

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        mode = _this$props.mode,
        _this$state = this.state,
        status = _this$state.status,
        current = _this$state.current;
    var data = {
      children: children,
      current: current,
      changeState: this.changeState,
      status: status
    };
    var component;

    switch (status) {
      case _Transition__WEBPACK_IMPORTED_MODULE_3__["ENTERING"]:
        component = enterRenders[mode](data);
        break;

      case _Transition__WEBPACK_IMPORTED_MODULE_3__["EXITING"]:
        component = leaveRenders[mode](data);
        break;

      case _Transition__WEBPACK_IMPORTED_MODULE_3__["ENTERED"]:
        component = current;
    }

    return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_TransitionGroupContext__WEBPACK_IMPORTED_MODULE_4__["default"].Provider, {
      value: {
        isMounting: !this.appeared
      }
    }, component);
  };

  return SwitchTransition;
}(react__WEBPACK_IMPORTED_MODULE_1___default.a.Component);

SwitchTransition.propTypes =  true ? {
  /**
   * Transition modes.
   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.
   * `in-out: New element transitions in first, then when complete, the current element transitions out.`
   *
   * @type {'out-in'|'in-out'}
   */
  mode: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.oneOf([modes.in, modes.out]),

  /**
   * Any `Transition` or `CSSTransition` component
   */
  children: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.element.isRequired])
} : undefined;
SwitchTransition.defaultProps = {
  mode: modes.out
};
/* harmony default export */ __webpack_exports__["default"] = (SwitchTransition);

/***/ }),

/***/ "./node_modules/react-transition-group/esm/Transition.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-transition-group/esm/Transition.js ***!
  \***************************************************************/
/*! exports provided: UNMOUNTED, EXITED, ENTERING, ENTERED, EXITING, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UNMOUNTED", function() { return UNMOUNTED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EXITED", function() { return EXITED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ENTERING", function() { return ENTERING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ENTERED", function() { return ENTERED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EXITING", function() { return EXITING; });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-dom */ "react-dom");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./config */ "./node_modules/react-transition-group/esm/config.js");
/* harmony import */ var _utils_PropTypes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/PropTypes */ "./node_modules/react-transition-group/esm/utils/PropTypes.js");
/* harmony import */ var _TransitionGroupContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./TransitionGroupContext */ "./node_modules/react-transition-group/esm/TransitionGroupContext.js");








var UNMOUNTED = 'unmounted';
var EXITED = 'exited';
var ENTERING = 'entering';
var ENTERED = 'entered';
var EXITING = 'exiting';
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 1 },
 *   entered:  { opacity: 1 },
 *   exiting:  { opacity: 0 },
 *   exited:  { opacity: 0 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */

var Transition =
/*#__PURE__*/
function (_React$Component) {
  Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(Transition, _React$Component);

  function Transition(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears

    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;

    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }

    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }

  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;

    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }

    return null;
  }; // getSnapshotBeforeUpdate(prevProps) {
  //   let nextStatus = null
  //   if (prevProps !== this.props) {
  //     const { status } = this.state
  //     if (this.props.in) {
  //       if (status !== ENTERING && status !== ENTERED) {
  //         nextStatus = ENTERING
  //       }
  //     } else {
  //       if (status === ENTERING || status === ENTERED) {
  //         nextStatus = EXITING
  //       }
  //     }
  //   }
  //   return { nextStatus }
  // }


  var _proto = Transition.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;

    if (prevProps !== this.props) {
      var status = this.state.status;

      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }

    this.updateStatus(false, nextStatus);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };

  _proto.getTimeouts = function getTimeouts() {
    var timeout = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout;

    if (timeout != null && typeof timeout !== 'number') {
      exit = timeout.exit;
      enter = timeout.enter; // TODO: remove fallback for next major

      appear = timeout.appear !== undefined ? timeout.appear : enter;
    }

    return {
      exit: exit,
      enter: enter,
      appear: appear
    };
  };

  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }

    if (nextStatus !== null) {
      // nextStatus will always be ENTERING or EXITING.
      this.cancelNextCallback();
      var node = react_dom__WEBPACK_IMPORTED_MODULE_4___default.a.findDOMNode(this);

      if (nextStatus === ENTERING) {
        this.performEnter(node, mounting);
      } else {
        this.performExit(node);
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };

  _proto.performEnter = function performEnter(node, mounting) {
    var _this2 = this;

    var enter = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;
    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
    // if we are mounting and running this it means appear _must_ be set

    if (!mounting && !enter || _config__WEBPACK_IMPORTED_MODULE_5__["default"].disabled) {
      this.safeSetState({
        status: ENTERED
      }, function () {
        _this2.props.onEntered(node);
      });
      return;
    }

    this.props.onEnter(node, appearing);
    this.safeSetState({
      status: ENTERING
    }, function () {
      _this2.props.onEntering(node, appearing);

      _this2.onTransitionEnd(node, enterTimeout, function () {
        _this2.safeSetState({
          status: ENTERED
        }, function () {
          _this2.props.onEntered(node, appearing);
        });
      });
    });
  };

  _proto.performExit = function performExit(node) {
    var _this3 = this;

    var exit = this.props.exit;
    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED

    if (!exit || _config__WEBPACK_IMPORTED_MODULE_5__["default"].disabled) {
      this.safeSetState({
        status: EXITED
      }, function () {
        _this3.props.onExited(node);
      });
      return;
    }

    this.props.onExit(node);
    this.safeSetState({
      status: EXITING
    }, function () {
      _this3.props.onExiting(node);

      _this3.onTransitionEnd(node, timeouts.exit, function () {
        _this3.safeSetState({
          status: EXITED
        }, function () {
          _this3.props.onExited(node);
        });
      });
    });
  };

  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };

  _proto.safeSetState = function safeSetState(nextState, callback) {
    // This shouldn't be necessary, but there are weird race conditions with
    // setState callbacks and unmounting in testing, so always make sure that
    // we can cancel any pending setState callbacks after we unmount.
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };

  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;

    var active = true;

    this.nextCallback = function (event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };

    this.nextCallback.cancel = function () {
      active = false;
    };

    return this.nextCallback;
  };

  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {
    this.setNextCallback(handler);
    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;

    if (!node || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }

    if (this.props.addEndListener) {
      this.props.addEndListener(node, this.nextCallback);
    }

    if (timeout != null) {
      setTimeout(this.nextCallback, timeout);
    }
  };

  _proto.render = function render() {
    var status = this.state.status;

    if (status === UNMOUNTED) {
      return null;
    }

    var _this$props = this.props,
        children = _this$props.children,
        childProps = Object(_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, ["children"]); // filter props for Transtition


    delete childProps.in;
    delete childProps.mountOnEnter;
    delete childProps.unmountOnExit;
    delete childProps.appear;
    delete childProps.enter;
    delete childProps.exit;
    delete childProps.timeout;
    delete childProps.addEndListener;
    delete childProps.onEnter;
    delete childProps.onEntering;
    delete childProps.onEntered;
    delete childProps.onExit;
    delete childProps.onExiting;
    delete childProps.onExited;

    if (typeof children === 'function') {
      // allows for nested Transitions
      return react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_TransitionGroupContext__WEBPACK_IMPORTED_MODULE_7__["default"].Provider, {
        value: null
      }, children(status, childProps));
    }

    var child = react__WEBPACK_IMPORTED_MODULE_3___default.a.Children.only(children);
    return (// allows for nested Transitions
      react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_TransitionGroupContext__WEBPACK_IMPORTED_MODULE_7__["default"].Provider, {
        value: null
      }, react__WEBPACK_IMPORTED_MODULE_3___default.a.cloneElement(child, childProps))
    );
  };

  return Transition;
}(react__WEBPACK_IMPORTED_MODULE_3___default.a.Component);

Transition.contextType = _TransitionGroupContext__WEBPACK_IMPORTED_MODULE_7__["default"];
Transition.propTypes =  true ? {
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func.isRequired, prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.element.isRequired]).isRequired,

  /**
   * Show the component; triggers the enter or exit states
   */
  in: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,

  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,

  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,

  /**
   * Normally a component is not transitioned if it is shown when the
   * `<Transition>` component mounts. If you want to transition on the first
   * mount set `appear` to `true`, and the component will transition in as soon
   * as the `<Transition>` mounts.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,

  /**
   * Enable or disable enter transitions.
   */
  enter: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,

  /**
   * Enable or disable exit transitions.
   */
  exit: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,

  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function timeout(props) {
    var pt = _utils_PropTypes__WEBPACK_IMPORTED_MODULE_6__["timeoutsShape"];
    if (!props.addEndListener) pt = pt.isRequired;

    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return pt.apply(void 0, [props].concat(args));
  },

  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. **Note:** Timeouts are still used as a fallback if provided.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,

  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,

  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,

  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,

  /**
   * Callback fired before the "exiting" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,

  /**
   * Callback fired after the "exiting" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,

  /**
   * Callback fired after the "exited" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func // Name the function so it is clearer in the documentation

} : undefined;

function noop() {}

Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop,
  onEntering: noop,
  onEntered: noop,
  onExit: noop,
  onExiting: noop,
  onExited: noop
};
Transition.UNMOUNTED = 0;
Transition.EXITED = 1;
Transition.ENTERING = 2;
Transition.ENTERED = 3;
Transition.EXITING = 4;
/* harmony default export */ __webpack_exports__["default"] = (Transition);

/***/ }),

/***/ "./node_modules/react-transition-group/esm/TransitionGroup.js":
/*!********************************************************************!*\
  !*** ./node_modules/react-transition-group/esm/TransitionGroup.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _TransitionGroupContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./TransitionGroupContext */ "./node_modules/react-transition-group/esm/TransitionGroupContext.js");
/* harmony import */ var _utils_ChildMapping__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/ChildMapping */ "./node_modules/react-transition-group/esm/utils/ChildMapping.js");









var values = Object.values || function (obj) {
  return Object.keys(obj).map(function (k) {
    return obj[k];
  });
};

var defaultProps = {
  component: 'div',
  childFactory: function childFactory(child) {
    return child;
  }
  /**
   * The `<TransitionGroup>` component manages a set of transition components
   * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
   * components, `<TransitionGroup>` is a state machine for managing the mounting
   * and unmounting of components over time.
   *
   * Consider the example below. As items are removed or added to the TodoList the
   * `in` prop is toggled automatically by the `<TransitionGroup>`.
   *
   * Note that `<TransitionGroup>`  does not define any animation behavior!
   * Exactly _how_ a list item animates is up to the individual transition
   * component. This means you can mix and match animations across different list
   * items.
   */

};

var TransitionGroup =
/*#__PURE__*/
function (_React$Component) {
  Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__["default"])(TransitionGroup, _React$Component);

  function TransitionGroup(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;

    var handleExited = _this.handleExited.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__["default"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__["default"])(_this))); // Initial children should all be entering, dependent on appear


    _this.state = {
      contextValue: {
        isMounting: true
      },
      handleExited: handleExited,
      firstRender: true
    };
    return _this;
  }

  var _proto = TransitionGroup.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.setState({
      contextValue: {
        isMounting: false
      }
    });
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };

  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children,
        handleExited = _ref.handleExited,
        firstRender = _ref.firstRender;
    return {
      children: firstRender ? Object(_utils_ChildMapping__WEBPACK_IMPORTED_MODULE_7__["getInitialChildMapping"])(nextProps, handleExited) : Object(_utils_ChildMapping__WEBPACK_IMPORTED_MODULE_7__["getNextChildMapping"])(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  };

  _proto.handleExited = function handleExited(child, node) {
    var currentChildMapping = Object(_utils_ChildMapping__WEBPACK_IMPORTED_MODULE_7__["getChildMapping"])(this.props.children);
    if (child.key in currentChildMapping) return;

    if (child.props.onExited) {
      child.props.onExited(node);
    }

    if (this.mounted) {
      this.setState(function (state) {
        var children = Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, state.children);

        delete children[child.key];
        return {
          children: children
        };
      });
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        Component = _this$props.component,
        childFactory = _this$props.childFactory,
        props = Object(_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, ["component", "childFactory"]);

    var contextValue = this.state.contextValue;
    var children = values(this.state.children).map(childFactory);
    delete props.appear;
    delete props.enter;
    delete props.exit;

    if (Component === null) {
      return react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_TransitionGroupContext__WEBPACK_IMPORTED_MODULE_6__["default"].Provider, {
        value: contextValue
      }, children);
    }

    return react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_TransitionGroupContext__WEBPACK_IMPORTED_MODULE_6__["default"].Provider, {
      value: contextValue
    }, react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(Component, props, children));
  };

  return TransitionGroup;
}(react__WEBPACK_IMPORTED_MODULE_5___default.a.Component);

TransitionGroup.propTypes =  true ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.any,

  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.node,

  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.bool,

  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.bool,

  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.bool,

  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.func
} : undefined;
TransitionGroup.defaultProps = defaultProps;
/* harmony default export */ __webpack_exports__["default"] = (TransitionGroup);

/***/ }),

/***/ "./node_modules/react-transition-group/esm/TransitionGroupContext.js":
/*!***************************************************************************!*\
  !*** ./node_modules/react-transition-group/esm/TransitionGroupContext.js ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

/* harmony default export */ __webpack_exports__["default"] = (react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext(null));

/***/ }),

/***/ "./node_modules/react-transition-group/esm/config.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-transition-group/esm/config.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  disabled: false
});

/***/ }),

/***/ "./node_modules/react-transition-group/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-transition-group/esm/index.js ***!
  \**********************************************************/
/*! exports provided: CSSTransition, ReplaceTransition, SwitchTransition, TransitionGroup, Transition, config */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _CSSTransition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CSSTransition */ "./node_modules/react-transition-group/esm/CSSTransition.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CSSTransition", function() { return _CSSTransition__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _ReplaceTransition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ReplaceTransition */ "./node_modules/react-transition-group/esm/ReplaceTransition.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ReplaceTransition", function() { return _ReplaceTransition__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _SwitchTransition__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SwitchTransition */ "./node_modules/react-transition-group/esm/SwitchTransition.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SwitchTransition", function() { return _SwitchTransition__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _TransitionGroup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TransitionGroup */ "./node_modules/react-transition-group/esm/TransitionGroup.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TransitionGroup", function() { return _TransitionGroup__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _Transition__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Transition */ "./node_modules/react-transition-group/esm/Transition.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Transition", function() { return _Transition__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./config */ "./node_modules/react-transition-group/esm/config.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "config", function() { return _config__WEBPACK_IMPORTED_MODULE_5__["default"]; });








/***/ }),

/***/ "./node_modules/react-transition-group/esm/utils/ChildMapping.js":
/*!***********************************************************************!*\
  !*** ./node_modules/react-transition-group/esm/utils/ChildMapping.js ***!
  \***********************************************************************/
/*! exports provided: getChildMapping, mergeChildMappings, getInitialChildMapping, getNextChildMapping */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getChildMapping", function() { return getChildMapping; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeChildMappings", function() { return mergeChildMappings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getInitialChildMapping", function() { return getInitialChildMapping; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getNextChildMapping", function() { return getNextChildMapping; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */

function getChildMapping(children, mapFn) {
  var mapper = function mapper(child) {
    return mapFn && Object(react__WEBPACK_IMPORTED_MODULE_0__["isValidElement"])(child) ? mapFn(child) : child;
  };

  var result = Object.create(null);
  if (children) react__WEBPACK_IMPORTED_MODULE_0__["Children"].map(children, function (c) {
    return c;
  }).forEach(function (child) {
    // run the map function here instead so that the key is the computed one
    result[child.key] = mapper(child);
  });
  return result;
}
/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */

function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};

  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  } // For each key of `next`, the list of keys to insert before that key in
  // the combined list


  var nextKeysPending = Object.create(null);
  var pendingKeys = [];

  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }

  var i;
  var childMapping = {};

  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }

    childMapping[nextKey] = getValueForKey(nextKey);
  } // Finally, add the keys which didn't appear before any key in `next`


  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }

  return childMapping;
}

function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}

function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function (child) {
    return Object(react__WEBPACK_IMPORTED_MODULE_0__["cloneElement"])(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, 'appear', props),
      enter: getProp(child, 'enter', props),
      exit: getProp(child, 'exit', props)
    });
  });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children).forEach(function (key) {
    var child = children[key];
    if (!Object(react__WEBPACK_IMPORTED_MODULE_0__["isValidElement"])(child)) return;
    var hasPrev = key in prevChildMapping;
    var hasNext = key in nextChildMapping;
    var prevChild = prevChildMapping[key];
    var isLeaving = Object(react__WEBPACK_IMPORTED_MODULE_0__["isValidElement"])(prevChild) && !prevChild.props.in; // item is new (entering)

    if (hasNext && (!hasPrev || isLeaving)) {
      // console.log('entering', key)
      children[key] = Object(react__WEBPACK_IMPORTED_MODULE_0__["cloneElement"])(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      // item is old (exiting)
      // console.log('leaving', key)
      children[key] = Object(react__WEBPACK_IMPORTED_MODULE_0__["cloneElement"])(child, {
        in: false
      });
    } else if (hasNext && hasPrev && Object(react__WEBPACK_IMPORTED_MODULE_0__["isValidElement"])(prevChild)) {
      // item hasn't changed transition states
      // copy over the last transition props;
      // console.log('unchanged', key)
      children[key] = Object(react__WEBPACK_IMPORTED_MODULE_0__["cloneElement"])(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    }
  });
  return children;
}

/***/ }),

/***/ "./node_modules/react-transition-group/esm/utils/PropTypes.js":
/*!********************************************************************!*\
  !*** ./node_modules/react-transition-group/esm/utils/PropTypes.js ***!
  \********************************************************************/
/*! exports provided: timeoutsShape, classNamesShape */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeoutsShape", function() { return timeoutsShape; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "classNamesShape", function() { return classNamesShape; });
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_0__);

var timeoutsShape =  true ? prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.number, prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.shape({
  enter: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.number,
  exit: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.number,
  appear: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.number
}).isRequired]) : undefined;
var classNamesShape =  true ? prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.shape({
  enter: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,
  exit: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,
  active: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string
}), prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.shape({
  enter: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,
  enterDone: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,
  enterActive: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,
  exit: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,
  exitDone: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,
  exitActive: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string
})]) : undefined;

/***/ }),

/***/ "./node_modules/tabbable/index.js":
/*!****************************************!*\
  !*** ./node_modules/tabbable/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var candidateSelectors = [
  'input',
  'select',
  'textarea',
  'a[href]',
  'button',
  '[tabindex]',
  'audio[controls]',
  'video[controls]',
  '[contenteditable]:not([contenteditable="false"])',
];
var candidateSelector = candidateSelectors.join(',');

var matches = typeof Element === 'undefined'
  ? function () {}
  : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;

function tabbable(el, options) {
  options = options || {};

  var elementDocument = el.ownerDocument || el;
  var regularTabbables = [];
  var orderedTabbables = [];

  var untouchabilityChecker = new UntouchabilityChecker(elementDocument);
  var candidates = el.querySelectorAll(candidateSelector);

  if (options.includeContainer) {
    if (matches.call(el, candidateSelector)) {
      candidates = Array.prototype.slice.apply(candidates);
      candidates.unshift(el);
    }
  }

  var i, candidate, candidateTabindex;
  for (i = 0; i < candidates.length; i++) {
    candidate = candidates[i];

    if (!isNodeMatchingSelectorTabbable(candidate, untouchabilityChecker)) continue;

    candidateTabindex = getTabindex(candidate);
    if (candidateTabindex === 0) {
      regularTabbables.push(candidate);
    } else {
      orderedTabbables.push({
        documentOrder: i,
        tabIndex: candidateTabindex,
        node: candidate,
      });
    }
  }

  var tabbableNodes = orderedTabbables
    .sort(sortOrderedTabbables)
    .map(function(a) { return a.node })
    .concat(regularTabbables);

  return tabbableNodes;
}

tabbable.isTabbable = isTabbable;
tabbable.isFocusable = isFocusable;

function isNodeMatchingSelectorTabbable(node, untouchabilityChecker) {
  if (
    !isNodeMatchingSelectorFocusable(node, untouchabilityChecker)
    || isNonTabbableRadio(node)
    || getTabindex(node) < 0
  ) {
    return false;
  }
  return true;
}

function isTabbable(node, untouchabilityChecker) {
  if (!node) throw new Error('No node provided');
  if (matches.call(node, candidateSelector) === false) return false;
  return isNodeMatchingSelectorTabbable(node, untouchabilityChecker);
}

function isNodeMatchingSelectorFocusable(node, untouchabilityChecker) {
  untouchabilityChecker = untouchabilityChecker || new UntouchabilityChecker(node.ownerDocument || node);
  if (
    node.disabled
    || isHiddenInput(node)
    || untouchabilityChecker.isUntouchable(node)
  ) {
    return false;
  }
  return true;
}

var focusableCandidateSelector = candidateSelectors.concat('iframe').join(',');
function isFocusable(node, untouchabilityChecker) {
  if (!node) throw new Error('No node provided');
  if (matches.call(node, focusableCandidateSelector) === false) return false;
  return isNodeMatchingSelectorFocusable(node, untouchabilityChecker);
}

function getTabindex(node) {
  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);
  if (!isNaN(tabindexAttr)) return tabindexAttr;
  // Browsers do not return `tabIndex` correctly for contentEditable nodes;
  // so if they don't have a tabindex attribute specifically set, assume it's 0.
  if (isContentEditable(node)) return 0;
  return node.tabIndex;
}

function sortOrderedTabbables(a, b) {
  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;
}

// Array.prototype.find not available in IE.
function find(list, predicate) {
  for (var i = 0, length = list.length; i < length; i++) {
    if (predicate(list[i])) return list[i];
  }
}

function isContentEditable(node) {
  return node.contentEditable === 'true';
}

function isInput(node) {
  return node.tagName === 'INPUT';
}

function isHiddenInput(node) {
  return isInput(node) && node.type === 'hidden';
}

function isRadio(node) {
  return isInput(node) && node.type === 'radio';
}

function isNonTabbableRadio(node) {
  return isRadio(node) && !isTabbableRadio(node);
}

function getCheckedRadio(nodes) {
  for (var i = 0; i < nodes.length; i++) {
    if (nodes[i].checked) {
      return nodes[i];
    }
  }
}

function isTabbableRadio(node) {
  if (!node.name) return true;
  // This won't account for the edge case where you have radio groups with the same
  // in separate forms on the same page.
  var radioSet = node.ownerDocument.querySelectorAll('input[type="radio"][name="' + node.name + '"]');
  var checked = getCheckedRadio(radioSet);
  return !checked || checked === node;
}

// An element is "untouchable" if *it or one of its ancestors* has
// `visibility: hidden` or `display: none`.
function UntouchabilityChecker(elementDocument) {
  this.doc = elementDocument;
  // Node cache must be refreshed on every check, in case
  // the content of the element has changed. The cache contains tuples
  // mapping nodes to their boolean result.
  this.cache = [];
}

// getComputedStyle accurately reflects `visibility: hidden` of ancestors
// but not `display: none`, so we need to recursively check parents.
UntouchabilityChecker.prototype.hasDisplayNone = function hasDisplayNone(node, nodeComputedStyle) {
  if (node === this.doc.documentElement) return false;

    // Search for a cached result.
    var cached = find(this.cache, function(item) {
      return item === node;
    });
    if (cached) return cached[1];

    nodeComputedStyle = nodeComputedStyle || this.doc.defaultView.getComputedStyle(node);

    var result = false;

    if (nodeComputedStyle.display === 'none') {
      result = true;
    } else if (node.parentNode) {
      result = this.hasDisplayNone(node.parentNode);
    }

    this.cache.push([node, result]);

    return result;
}

UntouchabilityChecker.prototype.isUntouchable = function isUntouchable(node) {
  if (node === this.doc.documentElement) return false;
  var computedStyle = this.doc.defaultView.getComputedStyle(node);
  if (this.hasDisplayNone(node, computedStyle)) return true;
  return computedStyle.visibility === 'hidden';
}

module.exports = tabbable;


/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spreadArrays", function() { return __spreadArrays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __exportStar(m, exports) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}


/***/ }),

/***/ "./node_modules/typestyle/lib.es2015/index.js":
/*!****************************************************!*\
  !*** ./node_modules/typestyle/lib.es2015/index.js ***!
  \****************************************************/
/*! exports provided: TypeStyle, types, extend, classes, media, setStylesTarget, cssRaw, cssRule, forceRenderStyles, fontFace, getStyles, keyframes, reinit, style, stylesheet, createTypeStyle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setStylesTarget", function() { return setStylesTarget; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cssRaw", function() { return cssRaw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cssRule", function() { return cssRule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forceRenderStyles", function() { return forceRenderStyles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fontFace", function() { return fontFace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStyles", function() { return getStyles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyframes", function() { return keyframes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reinit", function() { return reinit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "style", function() { return style; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stylesheet", function() { return stylesheet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTypeStyle", function() { return createTypeStyle; });
/* harmony import */ var _internal_typestyle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/typestyle */ "./node_modules/typestyle/lib.es2015/internal/typestyle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TypeStyle", function() { return _internal_typestyle__WEBPACK_IMPORTED_MODULE_0__["TypeStyle"]; });

/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types */ "./node_modules/typestyle/lib.es2015/types.js");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "types", function() { return _types__WEBPACK_IMPORTED_MODULE_1__; });
/* harmony import */ var _internal_utilities__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/utilities */ "./node_modules/typestyle/lib.es2015/internal/utilities.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return _internal_utilities__WEBPACK_IMPORTED_MODULE_2__["extend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "classes", function() { return _internal_utilities__WEBPACK_IMPORTED_MODULE_2__["classes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "media", function() { return _internal_utilities__WEBPACK_IMPORTED_MODULE_2__["media"]; });



/**
 * All the CSS types in the 'types' namespace
 */


/**
 * Export certain utilities
 */

/** Zero configuration, default instance of TypeStyle */
var ts = new _internal_typestyle__WEBPACK_IMPORTED_MODULE_0__["TypeStyle"]({ autoGenerateTag: true });
/** Sets the target tag where we write the css on style updates */
var setStylesTarget = ts.setStylesTarget;
/**
 * Insert `raw` CSS as a string. This is useful for e.g.
 * - third party CSS that you are customizing with template strings
 * - generating raw CSS in JavaScript
 * - reset libraries like normalize.css that you can use without loaders
 */
var cssRaw = ts.cssRaw;
/**
 * Takes CSSProperties and registers it to a global selector (body, html, etc.)
 */
var cssRule = ts.cssRule;
/**
 * Renders styles to the singleton tag imediately
 * NOTE: You should only call it on initial render to prevent any non CSS flash.
 * After that it is kept sync using `requestAnimationFrame` and we haven't noticed any bad flashes.
 **/
var forceRenderStyles = ts.forceRenderStyles;
/**
 * Utility function to register an @font-face
 */
var fontFace = ts.fontFace;
/**
 * Allows use to use the stylesheet in a node.js environment
 */
var getStyles = ts.getStyles;
/**
 * Takes keyframes and returns a generated animationName
 */
var keyframes = ts.keyframes;
/**
 * Helps with testing. Reinitializes FreeStyle + raw
 */
var reinit = ts.reinit;
/**
 * Takes CSSProperties and return a generated className you can use on your component
 */
var style = ts.style;
/**
 * Takes an object where property names are ideal class names and property values are CSSProperties, and
 * returns an object where property names are the same ideal class names and the property values are
 * the actual generated class names using the ideal class name as the $debugName
 */
var stylesheet = ts.stylesheet;
/**
 * Creates a new instance of TypeStyle separate from the default instance.
 *
 * - Use this for creating a different typestyle instance for a shadow dom component.
 * - Use this if you don't want an auto tag generated and you just want to collect the CSS.
 *
 * NOTE: styles aren't shared between different instances.
 */
function createTypeStyle(target) {
    var instance = new _internal_typestyle__WEBPACK_IMPORTED_MODULE_0__["TypeStyle"]({ autoGenerateTag: false });
    if (target) {
        instance.setStylesTarget(target);
    }
    return instance;
}


/***/ }),

/***/ "./node_modules/typestyle/lib.es2015/internal/formatting.js":
/*!******************************************************************!*\
  !*** ./node_modules/typestyle/lib.es2015/internal/formatting.js ***!
  \******************************************************************/
/*! exports provided: ensureStringObj, explodeKeyframes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ensureStringObj", function() { return ensureStringObj; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "explodeKeyframes", function() { return explodeKeyframes; });
/* harmony import */ var free_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! free-style */ "./node_modules/free-style/dist/free-style.js");
/* harmony import */ var free_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(free_style__WEBPACK_IMPORTED_MODULE_0__);

/**
 * We need to do the following to *our* objects before passing to freestyle:
 * - For any `$nest` directive move up to FreeStyle style nesting
 * - For any `$unique` directive map to FreeStyle Unique
 * - For any `$debugName` directive return the debug name
 */
function ensureStringObj(object) {
    /** The final result we will return */
    var result = {};
    var debugName = '';
    for (var key in object) {
        /** Grab the value upfront */
        var val = object[key];
        /** TypeStyle configuration options */
        if (key === '$unique') {
            result[free_style__WEBPACK_IMPORTED_MODULE_0__["IS_UNIQUE"]] = val;
        }
        else if (key === '$nest') {
            var nested = val;
            for (var selector in nested) {
                var subproperties = nested[selector];
                result[selector] = ensureStringObj(subproperties).result;
            }
        }
        else if (key === '$debugName') {
            debugName = val;
        }
        else {
            result[key] = val;
        }
    }
    return { result: result, debugName: debugName };
}
// todo: better name here
function explodeKeyframes(frames) {
    var result = { $debugName: undefined, keyframes: {} };
    for (var offset in frames) {
        var val = frames[offset];
        if (offset === '$debugName') {
            result.$debugName = val;
        }
        else {
            result.keyframes[offset] = val;
        }
    }
    return result;
}


/***/ }),

/***/ "./node_modules/typestyle/lib.es2015/internal/typestyle.js":
/*!*****************************************************************!*\
  !*** ./node_modules/typestyle/lib.es2015/internal/typestyle.js ***!
  \*****************************************************************/
/*! exports provided: TypeStyle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TypeStyle", function() { return TypeStyle; });
/* harmony import */ var free_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! free-style */ "./node_modules/free-style/dist/free-style.js");
/* harmony import */ var free_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(free_style__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _formatting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formatting */ "./node_modules/typestyle/lib.es2015/internal/formatting.js");
/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utilities */ "./node_modules/typestyle/lib.es2015/internal/utilities.js");



/**
 * Creates an instance of free style with our options
 */
var createFreeStyle = function () { return free_style__WEBPACK_IMPORTED_MODULE_0__["create"](
/** Use the default hash function */
undefined, 
/** Preserve $debugName values */
true); };
/**
 * Maintains a single stylesheet and keeps it in sync with requested styles
 */
var TypeStyle = /** @class */ (function () {
    function TypeStyle(_a) {
        var autoGenerateTag = _a.autoGenerateTag;
        var _this = this;
        /**
         * Insert `raw` CSS as a string. This is useful for e.g.
         * - third party CSS that you are customizing with template strings
         * - generating raw CSS in JavaScript
         * - reset libraries like normalize.css that you can use without loaders
         */
        this.cssRaw = function (mustBeValidCSS) {
            if (!mustBeValidCSS) {
                return;
            }
            _this._raw += mustBeValidCSS || '';
            _this._pendingRawChange = true;
            _this._styleUpdated();
        };
        /**
         * Takes CSSProperties and registers it to a global selector (body, html, etc.)
         */
        this.cssRule = function (selector) {
            var objects = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                objects[_i - 1] = arguments[_i];
            }
            var object = Object(_formatting__WEBPACK_IMPORTED_MODULE_1__["ensureStringObj"])(_utilities__WEBPACK_IMPORTED_MODULE_2__["extend"].apply(void 0, objects)).result;
            _this._freeStyle.registerRule(selector, object);
            _this._styleUpdated();
            return;
        };
        /**
         * Renders styles to the singleton tag imediately
         * NOTE: You should only call it on initial render to prevent any non CSS flash.
         * After that it is kept sync using `requestAnimationFrame` and we haven't noticed any bad flashes.
         **/
        this.forceRenderStyles = function () {
            var target = _this._getTag();
            if (!target) {
                return;
            }
            target.textContent = _this.getStyles();
        };
        /**
         * Utility function to register an @font-face
         */
        this.fontFace = function () {
            var fontFace = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                fontFace[_i] = arguments[_i];
            }
            var freeStyle = _this._freeStyle;
            for (var _a = 0, _b = fontFace; _a < _b.length; _a++) {
                var face = _b[_a];
                freeStyle.registerRule('@font-face', face);
            }
            _this._styleUpdated();
            return;
        };
        /**
         * Allows use to use the stylesheet in a node.js environment
         */
        this.getStyles = function () {
            return (_this._raw || '') + _this._freeStyle.getStyles();
        };
        /**
         * Takes keyframes and returns a generated animationName
         */
        this.keyframes = function (frames) {
            var _a = Object(_formatting__WEBPACK_IMPORTED_MODULE_1__["explodeKeyframes"])(frames), keyframes = _a.keyframes, $debugName = _a.$debugName;
            // TODO: replace $debugName with display name
            var animationName = _this._freeStyle.registerKeyframes(keyframes, $debugName);
            _this._styleUpdated();
            return animationName;
        };
        /**
         * Helps with testing. Reinitializes FreeStyle + raw
         */
        this.reinit = function () {
            /** reinit freestyle */
            var freeStyle = createFreeStyle();
            _this._freeStyle = freeStyle;
            _this._lastFreeStyleChangeId = freeStyle.changeId;
            /** reinit raw */
            _this._raw = '';
            _this._pendingRawChange = false;
            /** Clear any styles that were flushed */
            var target = _this._getTag();
            if (target) {
                target.textContent = '';
            }
        };
        /** Sets the target tag where we write the css on style updates */
        this.setStylesTarget = function (tag) {
            /** Clear any data in any previous tag */
            if (_this._tag) {
                _this._tag.textContent = '';
            }
            _this._tag = tag;
            /** This special time buffer immediately */
            _this.forceRenderStyles();
        };
        /**
         * Takes an object where property names are ideal class names and property values are CSSProperties, and
         * returns an object where property names are the same ideal class names and the property values are
         * the actual generated class names using the ideal class name as the $debugName
         */
        this.stylesheet = function (classes) {
            var classNames = Object.getOwnPropertyNames(classes);
            var result = {};
            for (var _i = 0, classNames_1 = classNames; _i < classNames_1.length; _i++) {
                var className = classNames_1[_i];
                var classDef = classes[className];
                if (classDef) {
                    classDef.$debugName = className;
                    result[className] = _this.style(classDef);
                }
            }
            return result;
        };
        var freeStyle = createFreeStyle();
        this._autoGenerateTag = autoGenerateTag;
        this._freeStyle = freeStyle;
        this._lastFreeStyleChangeId = freeStyle.changeId;
        this._pending = 0;
        this._pendingRawChange = false;
        this._raw = '';
        this._tag = undefined;
        // rebind prototype to TypeStyle.  It might be better to do a function() { return this.style.apply(this, arguments)}
        this.style = this.style.bind(this);
    }
    /**
     * Only calls cb all sync operations settle
     */
    TypeStyle.prototype._afterAllSync = function (cb) {
        var _this = this;
        this._pending++;
        var pending = this._pending;
        Object(_utilities__WEBPACK_IMPORTED_MODULE_2__["raf"])(function () {
            if (pending !== _this._pending) {
                return;
            }
            cb();
        });
    };
    TypeStyle.prototype._getTag = function () {
        if (this._tag) {
            return this._tag;
        }
        if (this._autoGenerateTag) {
            var tag = typeof window === 'undefined'
                ? { textContent: '' }
                : document.createElement('style');
            if (typeof document !== 'undefined') {
                document.head.appendChild(tag);
            }
            this._tag = tag;
            return tag;
        }
        return undefined;
    };
    /** Checks if the style tag needs updating and if so queues up the change */
    TypeStyle.prototype._styleUpdated = function () {
        var _this = this;
        var changeId = this._freeStyle.changeId;
        var lastChangeId = this._lastFreeStyleChangeId;
        if (!this._pendingRawChange && changeId === lastChangeId) {
            return;
        }
        this._lastFreeStyleChangeId = changeId;
        this._pendingRawChange = false;
        this._afterAllSync(function () { return _this.forceRenderStyles(); });
    };
    TypeStyle.prototype.style = function () {
        var freeStyle = this._freeStyle;
        var _a = Object(_formatting__WEBPACK_IMPORTED_MODULE_1__["ensureStringObj"])(_utilities__WEBPACK_IMPORTED_MODULE_2__["extend"].apply(undefined, arguments)), result = _a.result, debugName = _a.debugName;
        var className = debugName ? freeStyle.registerStyle(result, debugName) : freeStyle.registerStyle(result);
        this._styleUpdated();
        return className;
    };
    return TypeStyle;
}());



/***/ }),

/***/ "./node_modules/typestyle/lib.es2015/internal/utilities.js":
/*!*****************************************************************!*\
  !*** ./node_modules/typestyle/lib.es2015/internal/utilities.js ***!
  \*****************************************************************/
/*! exports provided: raf, classes, extend, media */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "raf", function() { return raf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "classes", function() { return classes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "media", function() { return media; });
/** Raf for node + browser */
var raf = typeof requestAnimationFrame === 'undefined'
    /**
     * Make sure setTimeout is always invoked with
     * `this` set to `window` or `global` automatically
     **/
    ? function (cb) { return setTimeout(cb); }
    /**
     * Make sure window.requestAnimationFrame is always invoked with `this` window
     * We might have raf without window in case of `raf/polyfill` (recommended by React)
     **/
    : typeof window === 'undefined'
        ? requestAnimationFrame
        : requestAnimationFrame.bind(window);
/**
 * Utility to join classes conditionally
 */
function classes() {
    var classes = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        classes[_i] = arguments[_i];
    }
    return classes
        .map(function (c) { return c && typeof c === 'object' ? Object.keys(c).map(function (key) { return !!c[key] && key; }) : [c]; })
        .reduce(function (flattened, c) { return flattened.concat(c); }, [])
        .filter(function (c) { return !!c; })
        .join(' ');
}
/**
 * Merges various styles into a single style object.
 * Note: if two objects have the same property the last one wins
 */
function extend() {
    var objects = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        objects[_i] = arguments[_i];
    }
    /** The final result we will return */
    var result = {};
    for (var _a = 0, objects_1 = objects; _a < objects_1.length; _a++) {
        var object = objects_1[_a];
        if (object == null || object === false) {
            continue;
        }
        for (var key in object) {
            /** Falsy values except a explicit 0 is ignored */
            var val = object[key];
            if (!val && val !== 0) {
                continue;
            }
            /** if nested media or pseudo selector */
            if (key === '$nest' && val) {
                result[key] = result['$nest'] ? extend(result['$nest'], val) : val;
            }
            else if ((key.indexOf('&') !== -1 || key.indexOf('@media') === 0)) {
                result[key] = result[key] ? extend(result[key], val) : val;
            }
            else {
                result[key] = val;
            }
        }
    }
    return result;
}
/**
 * Utility to help customize styles with media queries. e.g.
 * ```
 * style(
 *  media({maxWidth:500}, {color:'red'})
 * )
 * ```
 */
var media = function (mediaQuery) {
    var objects = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        objects[_i - 1] = arguments[_i];
    }
    var mediaQuerySections = [];
    if (mediaQuery.type)
        mediaQuerySections.push(mediaQuery.type);
    if (mediaQuery.orientation)
        mediaQuerySections.push("(orientation: " + mediaQuery.orientation + ")");
    if (mediaQuery.minWidth)
        mediaQuerySections.push("(min-width: " + mediaLength(mediaQuery.minWidth) + ")");
    if (mediaQuery.maxWidth)
        mediaQuerySections.push("(max-width: " + mediaLength(mediaQuery.maxWidth) + ")");
    if (mediaQuery.minHeight)
        mediaQuerySections.push("(min-height: " + mediaLength(mediaQuery.minHeight) + ")");
    if (mediaQuery.maxHeight)
        mediaQuerySections.push("(max-height: " + mediaLength(mediaQuery.maxHeight) + ")");
    var stringMediaQuery = "@media " + mediaQuerySections.join(' and ');
    var object = {
        $nest: (_a = {},
            _a[stringMediaQuery] = extend.apply(void 0, objects),
            _a)
    };
    return object;
    var _a;
};
var mediaLength = function (value) {
    return typeof value === 'string' ? value : value + "px";
};


/***/ }),

/***/ "./node_modules/typestyle/lib.es2015/types.js":
/*!****************************************************!*\
  !*** ./node_modules/typestyle/lib.es2015/types.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "react":
/*!**************************************************************************************!*\
  !*** external {"root":"React","amd":"react","commonjs":"react","commonjs2":"react"} ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_react__;

/***/ }),

/***/ "react-dom":
/*!*****************************************************************************************************!*\
  !*** external {"root":"ReactDOM","amd":"react-dom","commonjs":"react-dom","commonjs2":"react-dom"} ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_react_dom__;

/***/ })

/******/ });
});
//# sourceMappingURL=shared-widgets.js.map